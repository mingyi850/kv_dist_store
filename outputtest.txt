==> emulation
==> kvstore
==> emulation
Paths given to "mix test" did not match any directory/file: test/test_cases.exs
==> kvstore

11:37:08.395 [debug] Initializing ComBase

11:37:08.398 [debug] Registration map is #PID<0.256.0>

11:37:08.398 [debug] Reverse Registration map is #PID<0.257.0>

11:37:08.398 [debug] Fuzz chain is #PID<0.260.0>

11:37:08.398 [debug] The set of unfuzzables is #PID<0.259.0>

11:37:08.400 [info] Initializing Observer with node: :observer

11:37:08.400 [debug] Spawned :observer with main process: #PID<0.261.0> proxy: #PID<0.262.0>

11:37:08.400 [info] Initializing LoadBalancer with nodes: [:a]

11:37:08.437 [info] Base config: %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 0, observer: :observer}

11:37:08.437 [debug] Spawned :lb with main process: #PID<0.265.0> proxy: #PID<0.266.0>

11:37:08.437 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 0, observer: :observer}

11:37:08.440 [debug] Spawned :a with main process: #PID<0.268.0> proxy: #PID<0.269.0>

11:37:08.440 [info] Spawned all nodes

11:37:08.440 [info] generate requests

11:37:08.440 [debug] Spawned :client_a with main process: #PID<0.271.0> proxy: #PID<0.272.0>

11:37:08.440 [debug] Spawned :client_b with main process: #PID<0.275.0> proxy: #PID<0.276.0>

11:37:08.440 [info] generate requests

11:37:08.441 [info] lb receive get from :client_a (0)

11:37:08.441 [info] Send request {:get, "4"}

11:37:08.441 [info] Send request {:get, "3"}

11:37:08.442 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1, observer: :observer}

11:37:08.442 [info] lb receive get from :client_b (1)

11:37:08.442 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2, observer: :observer}

11:37:08.443 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 0}

11:37:08.444 [warning] :a Key not found: "3"

11:37:08.444 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 1}

11:37:08.445 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [], type: :get_response, req_id: 0}}

11:37:08.445 [info] Latest entries: []

11:37:08.446 [info] Receive response of 0 from a with []

11:37:08.446 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 0, key: "3", object: [], sender: :a, type: :get_log}

11:37:08.446 [warning] :a Key not found: "4"

11:37:08.446 [info] Send request {:put, "3", 920, []}

11:37:08.447 [info] lb receive put from :client_a

11:37:08.447 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [], type: :get_response, req_id: 1}}

11:37:08.447 [info] Latest entries: []

11:37:08.447 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3, observer: :observer}

11:37:08.448 [info] Receive response of 1 from a with []

11:37:08.448 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1, key: "4", object: [], sender: :a, type: :get_log}

11:37:08.448 [info] Send request {:get, "5"}

11:37:08.449 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 920, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 2}

11:37:08.449 [info] lb receive get from :client_b (3)

11:37:08.449 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4, observer: :observer}

11:37:08.449 [info] New objects are [%KvStore.CacheEntry{object: 920, context: %KvStore.Context{vector_clock: %{a: 8}}}]

11:37:08.450 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 3}

11:37:08.451 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2, key: "3", object: 920, sender: :a, type: :put_log}

11:37:08.451 [info] Receive response of 2 from a with context: %KvStore.Context{vector_clock: %{a: 8}}

11:37:08.451 [warning] :a Key not found: "5"

11:37:08.451 [info] Send request {:get, "5"}

11:37:08.452 [info] lb receive get from :client_a (4)

11:37:08.452 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [], type: :get_response, req_id: 3}}

11:37:08.452 [info] Latest entries: []

11:37:08.452 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5, observer: :observer}

11:37:08.453 [info] Receive response of 3 from a with []

11:37:08.453 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 4}

11:37:08.453 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3, key: "5", object: [], sender: :a, type: :get_log}

11:37:08.453 [info] Send request {:put, "2", 602, []}

11:37:08.454 [info] lb receive put from :client_b

11:37:08.454 [warning] :a Key not found: "5"

11:37:08.454 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 6, observer: :observer}

11:37:08.455 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 602, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5}

11:37:08.455 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [], type: :get_response, req_id: 4}}

11:37:08.455 [info] Latest entries: []

11:37:08.456 [info] New objects are [%KvStore.CacheEntry{object: 602, context: %KvStore.Context{vector_clock: %{a: 16}}}]

11:37:08.456 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4, key: "5", object: [], sender: :a, type: :get_log}

11:37:08.456 [info] Receive response of 4 from a with []

11:37:08.456 [info] generate requests

11:37:08.456 [info] Send request {:put, "3", 749, []}

11:37:08.457 [info] lb receive put from :client_a

11:37:08.457 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 7, observer: :observer}

11:37:08.458 [info] Receive response of 5 from a with context: %KvStore.Context{vector_clock: %{a: 16}}

11:37:08.458 [info] generate requests

11:37:08.458 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5, key: "2", object: 602, sender: :a, type: :put_log}

11:37:08.458 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 749, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 6}

11:37:08.458 [info] Send request {:get, "3"}

11:37:08.459 [info] lb receive get from :client_b (7)

11:37:08.459 [info] New objects are [%KvStore.CacheEntry{object: 749, context: %KvStore.Context{vector_clock: %{a: 20}}}]

11:37:08.459 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 8, observer: :observer}

11:37:08.460 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 7}

11:37:08.461 [info] Receive response of 6 from a with context: %KvStore.Context{vector_clock: %{a: 20}}

11:37:08.461 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 749, context: %KvStore.Context{vector_clock: %{a: 20}}}]

11:37:08.461 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 6, key: "3", object: 749, sender: :a, type: :put_log}

11:37:08.461 [info] Send request {:get, "2"}

11:37:08.462 [info] lb receive get from :client_a (8)

11:37:08.462 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 749, context: %KvStore.Context{vector_clock: %{a: 20}}}], type: :get_response, req_id: 7}}

11:37:08.462 [info] Latest entries: [%KvStore.CacheEntry{object: 749, context: %KvStore.Context{vector_clock: %{a: 20}}}]

11:37:08.462 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 9, observer: :observer}

11:37:08.463 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 8}

11:37:08.463 [info] Receive response of 7 from a with [%KvStore.CacheEntry{object: 749, context: %KvStore.Context{vector_clock: %{a: 20}}}]

11:37:08.463 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 7, key: "3", object: [%KvStore.CacheEntry{object: 749, context: %KvStore.Context{vector_clock: %{a: 20}}}], sender: :a, type: :get_log}

11:37:08.463 [info] Send request {:get, "2"}

11:37:08.464 [info] lb receive get from :client_b (9)

11:37:08.464 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 602, context: %KvStore.Context{vector_clock: %{a: 16}}}]

11:37:08.464 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 10, observer: :observer}

11:37:08.465 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 602, context: %KvStore.Context{vector_clock: %{a: 16}}}], type: :get_response, req_id: 8}}

11:37:08.465 [info] Latest entries: [%KvStore.CacheEntry{object: 602, context: %KvStore.Context{vector_clock: %{a: 16}}}]

11:37:08.465 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 9}

11:37:08.466 [info] Receive response of 8 from a with [%KvStore.CacheEntry{object: 602, context: %KvStore.Context{vector_clock: %{a: 16}}}]

11:37:08.466 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 8, key: "2", object: [%KvStore.CacheEntry{object: 602, context: %KvStore.Context{vector_clock: %{a: 16}}}], sender: :a, type: :get_log}

11:37:08.466 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 602, context: %KvStore.Context{vector_clock: %{a: 16}}}]

11:37:08.466 [info] Send request {:get, "2"}

11:37:08.467 [info] lb receive get from :client_a (10)

11:37:08.467 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 602, context: %KvStore.Context{vector_clock: %{a: 16}}}], type: :get_response, req_id: 9}}

11:37:08.467 [info] Latest entries: [%KvStore.CacheEntry{object: 602, context: %KvStore.Context{vector_clock: %{a: 16}}}]

11:37:08.467 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 11, observer: :observer}

11:37:08.468 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 10}

11:37:08.468 [info] Receive response of 9 from a with [%KvStore.CacheEntry{object: 602, context: %KvStore.Context{vector_clock: %{a: 16}}}]

11:37:08.468 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 9, key: "2", object: [%KvStore.CacheEntry{object: 602, context: %KvStore.Context{vector_clock: %{a: 16}}}], sender: :a, type: :get_log}

11:37:08.468 [info] Send request {:put, "2", 470, []}

11:37:08.469 [info] lb receive put from :client_b

11:37:08.469 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 602, context: %KvStore.Context{vector_clock: %{a: 16}}}]

11:37:08.469 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 12, observer: :observer}

11:37:08.470 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 602, context: %KvStore.Context{vector_clock: %{a: 16}}}], type: :get_response, req_id: 10}}

11:37:08.470 [info] Latest entries: [%KvStore.CacheEntry{object: 602, context: %KvStore.Context{vector_clock: %{a: 16}}}]

11:37:08.470 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 470, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 11}

11:37:08.471 [info] New objects are [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}]

11:37:08.471 [info] Receive response of 10 from a with [%KvStore.CacheEntry{object: 602, context: %KvStore.Context{vector_clock: %{a: 16}}}]

11:37:08.471 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 10, key: "2", object: [%KvStore.CacheEntry{object: 602, context: %KvStore.Context{vector_clock: %{a: 16}}}], sender: :a, type: :get_log}

11:37:08.471 [info] generate requests

11:37:08.471 [info] Send request {:put, "3", 540, []}

11:37:08.472 [info] lb receive put from :client_a

11:37:08.472 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 13, observer: :observer}

11:37:08.473 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 11, key: "2", object: 470, sender: :a, type: :put_log}

11:37:08.473 [info] Receive response of 11 from a with context: %KvStore.Context{vector_clock: %{a: 35}}

11:37:08.473 [info] generate requests

11:37:08.473 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 540, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 12}

11:37:08.473 [info] Send request {:get, "1"}

11:37:08.474 [info] lb receive get from :client_b (13)

11:37:08.474 [info] New objects are [%KvStore.CacheEntry{object: 540, context: %KvStore.Context{vector_clock: %{a: 38}}}]

11:37:08.474 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 14, observer: :observer}

11:37:08.475 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 13}

11:37:08.476 [info] Receive response of 12 from a with context: %KvStore.Context{vector_clock: %{a: 38}}

11:37:08.476 [warning] :a Key not found: "1"

11:37:08.476 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 12, key: "3", object: 540, sender: :a, type: :put_log}

11:37:08.476 [info] Send request {:get, "4"}

11:37:08.477 [info] lb receive get from :client_a (14)

11:37:08.477 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [], type: :get_response, req_id: 13}}

11:37:08.477 [info] Latest entries: []

11:37:08.477 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 15, observer: :observer}

11:37:08.478 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 13, key: "1", object: [], sender: :a, type: :get_log}

11:37:08.478 [info] Receive response of 13 from a with []

11:37:08.478 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 14}

11:37:08.478 [info] Send request {:get, "4"}

11:37:08.479 [info] lb receive get from :client_b (15)

11:37:08.479 [warning] :a Key not found: "4"

11:37:08.479 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 16, observer: :observer}

11:37:08.480 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [], type: :get_response, req_id: 14}}

11:37:08.480 [info] Latest entries: []

11:37:08.480 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 15}

11:37:08.481 [info] Receive response of 14 from a with []

11:37:08.481 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 14, key: "4", object: [], sender: :a, type: :get_log}

11:37:08.481 [warning] :a Key not found: "4"

11:37:08.481 [info] Send request {:get, "5"}

11:37:08.482 [info] lb receive get from :client_a (16)

11:37:08.482 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [], type: :get_response, req_id: 15}}

11:37:08.482 [info] Latest entries: []

11:37:08.482 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 17, observer: :observer}

11:37:08.483 [info] Receive response of 15 from a with []

11:37:08.483 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 15, key: "4", object: [], sender: :a, type: :get_log}

11:37:08.483 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 16}

11:37:08.483 [info] Send request {:put, "4", 402, []}

11:37:08.484 [info] lb receive put from :client_b

11:37:08.484 [warning] :a Key not found: "5"

11:37:08.484 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 18, observer: :observer}

11:37:08.485 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 402, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 17}

11:37:08.485 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [], type: :get_response, req_id: 16}}

11:37:08.485 [info] Latest entries: []

11:37:08.486 [info] New objects are [%KvStore.CacheEntry{object: 402, context: %KvStore.Context{vector_clock: %{a: 52}}}]

11:37:08.486 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 16, key: "5", object: [], sender: :a, type: :get_log}

11:37:08.486 [info] Receive response of 16 from a with []

11:37:08.486 [info] generate requests

11:37:08.486 [info] Send request {:get, "1"}

11:37:08.487 [info] lb receive get from :client_a (18)

11:37:08.487 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 19, observer: :observer}

11:37:08.488 [info] Receive response of 17 from a with context: %KvStore.Context{vector_clock: %{a: 52}}

11:37:08.488 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 18}

11:37:08.488 [info] generate requests

11:37:08.488 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 17, key: "4", object: 402, sender: :a, type: :put_log}

11:37:08.488 [info] Send request {:put, "4", 356, []}

11:37:08.489 [info] lb receive put from :client_b

11:37:08.489 [warning] :a Key not found: "1"

11:37:08.489 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 20, observer: :observer}

11:37:08.490 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 356, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 19}

11:37:08.490 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [], type: :get_response, req_id: 18}}

11:37:08.490 [info] Latest entries: []

11:37:08.491 [info] New objects are [%KvStore.CacheEntry{object: 356, context: %KvStore.Context{vector_clock: %{a: 58}}}]

11:37:08.491 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 18, key: "1", object: [], sender: :a, type: :get_log}

11:37:08.491 [info] Receive response of 18 from a with []

11:37:08.491 [info] Send request {:get, "2"}

11:37:08.492 [info] lb receive get from :client_a (20)

11:37:08.492 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 21, observer: :observer}

11:37:08.493 [info] Receive response of 19 from a with context: %KvStore.Context{vector_clock: %{a: 58}}

11:37:08.493 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 20}

11:37:08.493 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 19, key: "4", object: 356, sender: :a, type: :put_log}

11:37:08.493 [info] Send request {:get, "2"}

11:37:08.494 [info] lb receive get from :client_b (21)

11:37:08.494 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}]

11:37:08.494 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 22, observer: :observer}

11:37:08.495 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 21}

11:37:08.495 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}], type: :get_response, req_id: 20}}

11:37:08.495 [info] Latest entries: [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}]

11:37:08.496 [info] Receive response of 20 from a with [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}]

11:37:08.496 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 20, key: "2", object: [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}], sender: :a, type: :get_log}

11:37:08.496 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}]

11:37:08.496 [info] Send request {:put, "5", 293, []}

11:37:08.497 [info] lb receive put from :client_a

11:37:08.497 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}], type: :get_response, req_id: 21}}

11:37:08.497 [info] Latest entries: [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}]

11:37:08.497 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 23, observer: :observer}

11:37:08.498 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 293, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 22}

11:37:08.498 [info] Receive response of 21 from a with [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}]

11:37:08.498 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 21, key: "2", object: [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}], sender: :a, type: :get_log}

11:37:08.498 [info] Send request {:get, "4"}

11:37:08.499 [info] lb receive get from :client_b (23)

11:37:08.499 [info] New objects are [%KvStore.CacheEntry{object: 293, context: %KvStore.Context{vector_clock: %{a: 68}}}]

11:37:08.499 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 24, observer: :observer}

11:37:08.500 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 23}

11:37:08.501 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 22, key: "5", object: 293, sender: :a, type: :put_log}

11:37:08.501 [info] Receive response of 22 from a with context: %KvStore.Context{vector_clock: %{a: 68}}

11:37:08.501 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 356, context: %KvStore.Context{vector_clock: %{a: 58}}}]

11:37:08.501 [info] generate requests

11:37:08.501 [info] Send request {:get, "1"}

11:37:08.502 [info] lb receive get from :client_a (24)

11:37:08.502 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 25, observer: :observer}

11:37:08.502 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 356, context: %KvStore.Context{vector_clock: %{a: 58}}}], type: :get_response, req_id: 23}}

11:37:08.502 [info] Latest entries: [%KvStore.CacheEntry{object: 356, context: %KvStore.Context{vector_clock: %{a: 58}}}]

11:37:08.503 [info] Receive response of 23 from a with [%KvStore.CacheEntry{object: 356, context: %KvStore.Context{vector_clock: %{a: 58}}}]

11:37:08.503 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 24}

11:37:08.503 [info] generate requests

11:37:08.503 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 23, key: "4", object: [%KvStore.CacheEntry{object: 356, context: %KvStore.Context{vector_clock: %{a: 58}}}], sender: :a, type: :get_log}

11:37:08.503 [info] Send request {:get, "5"}

11:37:08.504 [info] lb receive get from :client_b (25)

11:37:08.504 [warning] :a Key not found: "1"

11:37:08.504 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 26, observer: :observer}

11:37:08.505 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 25}

11:37:08.505 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [], type: :get_response, req_id: 24}}

11:37:08.505 [info] Latest entries: []

11:37:08.506 [info] Receive response of 24 from a with []

11:37:08.506 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 293, context: %KvStore.Context{vector_clock: %{a: 68}}}]

11:37:08.506 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 24, key: "1", object: [], sender: :a, type: :get_log}

11:37:08.506 [info] Send request {:get, "4"}

11:37:08.507 [info] lb receive get from :client_a (26)

11:37:08.507 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 293, context: %KvStore.Context{vector_clock: %{a: 68}}}], type: :get_response, req_id: 25}}

11:37:08.507 [info] Latest entries: [%KvStore.CacheEntry{object: 293, context: %KvStore.Context{vector_clock: %{a: 68}}}]

11:37:08.507 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 27, observer: :observer}

11:37:08.508 [info] Receive response of 25 from a with [%KvStore.CacheEntry{object: 293, context: %KvStore.Context{vector_clock: %{a: 68}}}]

11:37:08.508 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 26}

11:37:08.508 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 25, key: "5", object: [%KvStore.CacheEntry{object: 293, context: %KvStore.Context{vector_clock: %{a: 68}}}], sender: :a, type: :get_log}

11:37:08.508 [info] Send request {:put, "3", 536, []}

11:37:08.509 [info] lb receive put from :client_b

11:37:08.509 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 356, context: %KvStore.Context{vector_clock: %{a: 58}}}]

11:37:08.509 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 28, observer: :observer}

11:37:08.510 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 356, context: %KvStore.Context{vector_clock: %{a: 58}}}], type: :get_response, req_id: 26}}

11:37:08.510 [info] Latest entries: [%KvStore.CacheEntry{object: 356, context: %KvStore.Context{vector_clock: %{a: 58}}}]

11:37:08.510 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 536, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 27}

11:37:08.511 [info] New objects are [%KvStore.CacheEntry{object: 536, context: %KvStore.Context{vector_clock: %{a: 83}}}]

11:37:08.511 [info] Receive response of 26 from a with [%KvStore.CacheEntry{object: 356, context: %KvStore.Context{vector_clock: %{a: 58}}}]

11:37:08.511 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 26, key: "4", object: [%KvStore.CacheEntry{object: 356, context: %KvStore.Context{vector_clock: %{a: 58}}}], sender: :a, type: :get_log}

11:37:08.511 [info] Send request {:put, "1", 839, []}

11:37:08.512 [info] lb receive put from :client_a

11:37:08.512 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 29, observer: :observer}

11:37:08.513 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 27, key: "3", object: 536, sender: :a, type: :put_log}

11:37:08.513 [info] Receive response of 27 from a with context: %KvStore.Context{vector_clock: %{a: 83}}

11:37:08.513 [info] Send request {:get, "4"}

11:37:08.513 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 839, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 28}

11:37:08.514 [info] lb receive get from :client_b (29)

11:37:08.514 [info] New objects are [%KvStore.CacheEntry{object: 839, context: %KvStore.Context{vector_clock: %{a: 86}}}]

11:37:08.514 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 30, observer: :observer}

11:37:08.515 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 29}

11:37:08.516 [info] Receive response of 28 from a with context: %KvStore.Context{vector_clock: %{a: 86}}

11:37:08.516 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 28, key: "1", object: 839, sender: :a, type: :put_log}

11:37:08.516 [info] generate requests

11:37:08.516 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 356, context: %KvStore.Context{vector_clock: %{a: 58}}}]

11:37:08.516 [info] Send request {:put, "5", 675, []}

11:37:08.517 [info] lb receive put from :client_a

11:37:08.517 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 356, context: %KvStore.Context{vector_clock: %{a: 58}}}], type: :get_response, req_id: 29}}

11:37:08.517 [info] Latest entries: [%KvStore.CacheEntry{object: 356, context: %KvStore.Context{vector_clock: %{a: 58}}}]

11:37:08.517 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 31, observer: :observer}

11:37:08.518 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 29, key: "4", object: [%KvStore.CacheEntry{object: 356, context: %KvStore.Context{vector_clock: %{a: 58}}}], sender: :a, type: :get_log}

11:37:08.518 [info] Receive response of 29 from a with [%KvStore.CacheEntry{object: 356, context: %KvStore.Context{vector_clock: %{a: 58}}}]

11:37:08.518 [info] generate requests

11:37:08.518 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 675, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 30}

11:37:08.518 [info] Send request {:get, "2"}

11:37:08.519 [info] lb receive get from :client_b (31)

11:37:08.519 [info] New objects are [%KvStore.CacheEntry{object: 675, context: %KvStore.Context{vector_clock: %{a: 92}}}]

11:37:08.519 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 32, observer: :observer}

11:37:08.520 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 31}

11:37:08.521 [info] Receive response of 30 from a with context: %KvStore.Context{vector_clock: %{a: 92}}

11:37:08.521 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 30, key: "5", object: 675, sender: :a, type: :put_log}

11:37:08.521 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}]

11:37:08.521 [info] Send request {:get, "1"}

11:37:08.522 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}], type: :get_response, req_id: 31}}

11:37:08.522 [info] lb receive get from :client_a (32)

11:37:08.522 [info] Latest entries: [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}]

11:37:08.522 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 33, observer: :observer}

11:37:08.523 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 31, key: "2", object: [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}], sender: :a, type: :get_log}

11:37:08.523 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 32}

11:37:08.523 [info] Receive response of 31 from a with [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}]

11:37:08.523 [info] Send request {:put, "4", 738, []}

11:37:08.524 [info] lb receive put from :client_b

11:37:08.524 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 839, context: %KvStore.Context{vector_clock: %{a: 86}}}]

11:37:08.524 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 34, observer: :observer}

11:37:08.525 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 738, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 33}

11:37:08.525 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 839, context: %KvStore.Context{vector_clock: %{a: 86}}}], type: :get_response, req_id: 32}}

11:37:08.525 [info] Latest entries: [%KvStore.CacheEntry{object: 839, context: %KvStore.Context{vector_clock: %{a: 86}}}]

11:37:08.526 [info] New objects are [%KvStore.CacheEntry{object: 738, context: %KvStore.Context{vector_clock: %{a: 100}}}]

11:37:08.526 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 32, key: "1", object: [%KvStore.CacheEntry{object: 839, context: %KvStore.Context{vector_clock: %{a: 86}}}], sender: :a, type: :get_log}

11:37:08.526 [info] Receive response of 32 from a with [%KvStore.CacheEntry{object: 839, context: %KvStore.Context{vector_clock: %{a: 86}}}]

11:37:08.526 [info] Send request {:get, "3"}

11:37:08.527 [info] lb receive get from :client_a (34)

11:37:08.527 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 35, observer: :observer}

11:37:08.528 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 34}

11:37:08.528 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 33, key: "4", object: 738, sender: :a, type: :put_log}

11:37:08.528 [info] Receive response of 33 from a with context: %KvStore.Context{vector_clock: %{a: 100}}

11:37:08.528 [info] Send request {:get, "4"}

11:37:08.529 [info] lb receive get from :client_b (35)

11:37:08.529 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 36, observer: :observer}

11:37:08.529 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 536, context: %KvStore.Context{vector_clock: %{a: 83}}}]

11:37:08.530 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 35}

11:37:08.530 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 536, context: %KvStore.Context{vector_clock: %{a: 83}}}], type: :get_response, req_id: 34}}

11:37:08.530 [info] Latest entries: [%KvStore.CacheEntry{object: 536, context: %KvStore.Context{vector_clock: %{a: 83}}}]

11:37:08.531 [info] Receive response of 34 from a with [%KvStore.CacheEntry{object: 536, context: %KvStore.Context{vector_clock: %{a: 83}}}]

11:37:08.531 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 34, key: "3", object: [%KvStore.CacheEntry{object: 536, context: %KvStore.Context{vector_clock: %{a: 83}}}], sender: :a, type: :get_log}

11:37:08.531 [info] generate requests

11:37:08.531 [info] Send request {:get, "4"}

11:37:08.531 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 738, context: %KvStore.Context{vector_clock: %{a: 100}}}]

11:37:08.532 [info] lb receive get from :client_a (36)

11:37:08.532 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 738, context: %KvStore.Context{vector_clock: %{a: 100}}}], type: :get_response, req_id: 35}}

11:37:08.532 [info] Latest entries: [%KvStore.CacheEntry{object: 738, context: %KvStore.Context{vector_clock: %{a: 100}}}]

11:37:08.532 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 37, observer: :observer}

11:37:08.533 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 36}

11:37:08.533 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 35, key: "4", object: [%KvStore.CacheEntry{object: 738, context: %KvStore.Context{vector_clock: %{a: 100}}}], sender: :a, type: :get_log}

11:37:08.533 [info] Receive response of 35 from a with [%KvStore.CacheEntry{object: 738, context: %KvStore.Context{vector_clock: %{a: 100}}}]

11:37:08.533 [info] generate requests

11:37:08.533 [info] Send request {:get, "3"}

11:37:08.534 [info] lb receive get from :client_b (37)

11:37:08.534 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 738, context: %KvStore.Context{vector_clock: %{a: 100}}}]

11:37:08.534 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 38, observer: :observer}

11:37:08.535 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 37}

11:37:08.535 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 738, context: %KvStore.Context{vector_clock: %{a: 100}}}], type: :get_response, req_id: 36}}

11:37:08.535 [info] Latest entries: [%KvStore.CacheEntry{object: 738, context: %KvStore.Context{vector_clock: %{a: 100}}}]

11:37:08.536 [info] Receive response of 36 from a with [%KvStore.CacheEntry{object: 738, context: %KvStore.Context{vector_clock: %{a: 100}}}]

11:37:08.536 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 36, key: "4", object: [%KvStore.CacheEntry{object: 738, context: %KvStore.Context{vector_clock: %{a: 100}}}], sender: :a, type: :get_log}

11:37:08.536 [info] Send request {:get, "5"}

11:37:08.536 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 536, context: %KvStore.Context{vector_clock: %{a: 83}}}]

11:37:08.537 [info] lb receive get from :client_a (38)

11:37:08.537 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 536, context: %KvStore.Context{vector_clock: %{a: 83}}}], type: :get_response, req_id: 37}}

11:37:08.537 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 39, observer: :observer}

11:37:08.537 [info] Latest entries: [%KvStore.CacheEntry{object: 536, context: %KvStore.Context{vector_clock: %{a: 83}}}]

11:37:08.538 [info] Receive response of 37 from a with [%KvStore.CacheEntry{object: 536, context: %KvStore.Context{vector_clock: %{a: 83}}}]

11:37:08.538 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 38}

11:37:08.538 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 37, key: "3", object: [%KvStore.CacheEntry{object: 536, context: %KvStore.Context{vector_clock: %{a: 83}}}], sender: :a, type: :get_log}

11:37:08.538 [info] Send request {:get, "1"}

11:37:08.539 [info] lb receive get from :client_b (39)

11:37:08.539 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 675, context: %KvStore.Context{vector_clock: %{a: 92}}}]

11:37:08.539 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 40, observer: :observer}

11:37:08.540 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 675, context: %KvStore.Context{vector_clock: %{a: 92}}}], type: :get_response, req_id: 38}}

11:37:08.540 [info] Latest entries: [%KvStore.CacheEntry{object: 675, context: %KvStore.Context{vector_clock: %{a: 92}}}]

11:37:08.540 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 39}

11:37:08.541 [info] Receive response of 38 from a with [%KvStore.CacheEntry{object: 675, context: %KvStore.Context{vector_clock: %{a: 92}}}]

11:37:08.541 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 839, context: %KvStore.Context{vector_clock: %{a: 86}}}]

11:37:08.541 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 38, key: "5", object: [%KvStore.CacheEntry{object: 675, context: %KvStore.Context{vector_clock: %{a: 92}}}], sender: :a, type: :get_log}

11:37:08.541 [info] Send request {:put, "5", 555, []}

11:37:08.542 [info] lb receive put from :client_a

11:37:08.542 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 839, context: %KvStore.Context{vector_clock: %{a: 86}}}], type: :get_response, req_id: 39}}

11:37:08.542 [info] Latest entries: [%KvStore.CacheEntry{object: 839, context: %KvStore.Context{vector_clock: %{a: 86}}}]

11:37:08.542 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 41, observer: :observer}

11:37:08.543 [info] Receive response of 39 from a with [%KvStore.CacheEntry{object: 839, context: %KvStore.Context{vector_clock: %{a: 86}}}]

11:37:08.543 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 39, key: "1", object: [%KvStore.CacheEntry{object: 839, context: %KvStore.Context{vector_clock: %{a: 86}}}], sender: :a, type: :get_log}

11:37:08.543 [info] Send request {:put, "3", 820, []}

11:37:08.543 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 555, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 40}

11:37:08.544 [info] New objects are [%KvStore.CacheEntry{object: 555, context: %KvStore.Context{vector_clock: %{a: 122}}}]

11:37:08.544 [info] lb receive put from :client_b

11:37:08.544 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 42, observer: :observer}

11:37:08.545 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 820, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 41}

11:37:08.546 [info] New objects are [%KvStore.CacheEntry{object: 820, context: %KvStore.Context{vector_clock: %{a: 125}}}]

11:37:08.546 [info] Receive response of 40 from a with context: %KvStore.Context{vector_clock: %{a: 122}}

11:37:08.546 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 40, key: "5", object: 555, sender: :a, type: :put_log}

11:37:08.546 [info] generate requests

11:37:08.546 [info] Send request {:get, "2"}

11:37:08.547 [info] lb receive get from :client_a (42)

11:37:08.547 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 43, observer: :observer}

11:37:08.548 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 42}

11:37:08.548 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 41, key: "3", object: 820, sender: :a, type: :put_log}

11:37:08.548 [info] Receive response of 41 from a with context: %KvStore.Context{vector_clock: %{a: 125}}

11:37:08.548 [info] generate requests

11:37:08.548 [info] Send request {:get, "1"}

11:37:08.549 [info] lb receive get from :client_b (43)

11:37:08.549 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}]

11:37:08.549 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 44, observer: :observer}

11:37:08.549 [warning] :a Timeout for request: 3

11:37:08.549 [warning] :a Timeout for request: 3, but request not found.

11:37:08.550 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 43}

11:37:08.550 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}], type: :get_response, req_id: 42}}

11:37:08.550 [info] Latest entries: [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}]

11:37:08.551 [info] Receive response of 42 from a with [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}]

11:37:08.551 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 42, key: "2", object: [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 35}}}], sender: :a, type: :get_log}

11:37:08.551 [info] Send request {:get, "3"}

11:37:08.551 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 839, context: %KvStore.Context{vector_clock: %{a: 86}}}]

11:37:08.552 [info] lb receive get from :client_a (44)

11:37:08.552 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 839, context: %KvStore.Context{vector_clock: %{a: 86}}}], type: :get_response, req_id: 43}}

11:37:08.552 [info] Latest entries: [%KvStore.CacheEntry{object: 839, context: %KvStore.Context{vector_clock: %{a: 86}}}]

11:37:08.552 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 45, observer: :observer}

11:37:08.553 [info] Receive response of 43 from a with [%KvStore.CacheEntry{object: 839, context: %KvStore.Context{vector_clock: %{a: 86}}}]

11:37:08.553 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 43, key: "1", object: [%KvStore.CacheEntry{object: 839, context: %KvStore.Context{vector_clock: %{a: 86}}}], sender: :a, type: :get_log}

11:37:08.553 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 44}

11:37:08.553 [info] Send request {:put, "4", 151, []}

11:37:08.554 [info] lb receive put from :client_b

11:37:08.554 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 820, context: %KvStore.Context{vector_clock: %{a: 125}}}]

11:37:08.554 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 46, observer: :observer}

11:37:08.555 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 151, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 45}

11:37:08.555 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 820, context: %KvStore.Context{vector_clock: %{a: 125}}}], type: :get_response, req_id: 44}}

11:37:08.555 [info] Latest entries: [%KvStore.CacheEntry{object: 820, context: %KvStore.Context{vector_clock: %{a: 125}}}]

11:37:08.556 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 44, key: "3", object: [%KvStore.CacheEntry{object: 820, context: %KvStore.Context{vector_clock: %{a: 125}}}], sender: :a, type: :get_log}

11:37:08.556 [info] New objects are [%KvStore.CacheEntry{object: 151, context: %KvStore.Context{vector_clock: %{a: 137}}}]

11:37:08.556 [info] Receive response of 44 from a with [%KvStore.CacheEntry{object: 820, context: %KvStore.Context{vector_clock: %{a: 125}}}]

11:37:08.556 [info] Send request {:put, "1", 452, []}

11:37:08.556 [warning] :a Timeout for request: 6

11:37:08.556 [warning] :a Timeout for request: 6, but request not found.

11:37:08.557 [info] lb receive put from :client_a

11:37:08.557 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 47, observer: :observer}

11:37:08.558 [info] Receive response of 45 from a with context: %KvStore.Context{vector_clock: %{a: 137}}

11:37:08.558 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 45, key: "4", object: 151, sender: :a, type: :put_log}

11:37:08.558 [info] Send request {:get, "3"}

11:37:08.558 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 452, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 46}

11:37:08.559 [info] lb receive get from :client_b (47)

11:37:08.559 [info] New objects are [%KvStore.CacheEntry{object: 452, context: %KvStore.Context{vector_clock: %{a: 142}}}]

11:37:08.559 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 48, observer: :observer}

11:37:08.559 [warning] :a Timeout for request: 7

11:37:08.559 [warning] :a Timeout for request: 7, but request not found.

11:37:08.560 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 47}

11:37:08.561 [info] Receive response of 46 from a with context: %KvStore.Context{vector_clock: %{a: 142}}

11:37:08.561 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 820, context: %KvStore.Context{vector_clock: %{a: 125}}}]

11:37:08.561 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 46, key: "1", object: 452, sender: :a, type: :put_log}

11:37:08.561 [info] generate requests

11:37:08.561 [info] Send request {:put, "5", 33, []}

11:37:08.562 [info] lb receive put from :client_a

11:37:08.562 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 820, context: %KvStore.Context{vector_clock: %{a: 125}}}], type: :get_response, req_id: 47}}

11:37:08.562 [info] Latest entries: [%KvStore.CacheEntry{object: 820, context: %KvStore.Context{vector_clock: %{a: 125}}}]

11:37:08.562 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 49, observer: :observer}

11:37:08.563 [info] Receive response of 47 from a with [%KvStore.CacheEntry{object: 820, context: %KvStore.Context{vector_clock: %{a: 125}}}]

11:37:08.563 [info] generate requests

11:37:08.563 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 47, key: "3", object: [%KvStore.CacheEntry{object: 820, context: %KvStore.Context{vector_clock: %{a: 125}}}], sender: :a, type: :get_log}

11:37:08.563 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 33, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 48}

11:37:08.563 [info] Send request {:get, "1"}

11:37:08.564 [info] lb receive get from :client_b (49)

11:37:08.564 [info] New objects are [%KvStore.CacheEntry{object: 33, context: %KvStore.Context{vector_clock: %{a: 149}}}]

11:37:08.564 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 50, observer: :observer}

11:37:08.565 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 49}

11:37:08.566 [info] Receive response of 48 from a with context: %KvStore.Context{vector_clock: %{a: 149}}

11:37:08.566 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 452, context: %KvStore.Context{vector_clock: %{a: 142}}}]

11:37:08.566 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 48, key: "5", object: 33, sender: :a, type: :put_log}

11:37:08.566 [info] Send request {:get, "1"}

11:37:08.567 [info] lb receive get from :client_a (50)

11:37:08.567 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 452, context: %KvStore.Context{vector_clock: %{a: 142}}}], type: :get_response, req_id: 49}}

11:37:08.567 [info] Latest entries: [%KvStore.CacheEntry{object: 452, context: %KvStore.Context{vector_clock: %{a: 142}}}]

11:37:08.567 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 51, observer: :observer}

11:37:08.568 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 49, key: "1", object: [%KvStore.CacheEntry{object: 452, context: %KvStore.Context{vector_clock: %{a: 142}}}], sender: :a, type: :get_log}

11:37:08.568 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 50}

11:37:08.568 [info] Receive response of 49 from a with [%KvStore.CacheEntry{object: 452, context: %KvStore.Context{vector_clock: %{a: 142}}}]

11:37:08.568 [info] Send request {:put, "5", 285, []}

11:37:08.569 [info] lb receive put from :client_b

11:37:08.569 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 452, context: %KvStore.Context{vector_clock: %{a: 142}}}]

11:37:08.569 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 52, observer: :observer}

11:37:08.570 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 285, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 51}

11:37:08.570 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 452, context: %KvStore.Context{vector_clock: %{a: 142}}}], type: :get_response, req_id: 50}}

11:37:08.570 [info] Latest entries: [%KvStore.CacheEntry{object: 452, context: %KvStore.Context{vector_clock: %{a: 142}}}]

11:37:08.571 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 50, key: "1", object: [%KvStore.CacheEntry{object: 452, context: %KvStore.Context{vector_clock: %{a: 142}}}], sender: :a, type: :get_log}

11:37:08.571 [info] Receive response of 50 from a with [%KvStore.CacheEntry{object: 452, context: %KvStore.Context{vector_clock: %{a: 142}}}]

11:37:08.571 [info] New objects are [%KvStore.CacheEntry{object: 285, context: %KvStore.Context{vector_clock: %{a: 157}}}]

11:37:08.571 [info] Send request {:get, "1"}

11:37:08.571 [warning] :a Timeout for request: 12

11:37:08.571 [warning] :a Timeout for request: 12, but request not found.

11:37:08.572 [info] lb receive get from :client_a (52)

11:37:08.572 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 53, observer: :observer}

11:37:08.573 [info] Receive response of 51 from a with context: %KvStore.Context{vector_clock: %{a: 157}}

11:37:08.573 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 52}

11:37:08.573 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 51, key: "5", object: 285, sender: :a, type: :put_log}

11:37:08.573 [info] Send request {:get, "3"}

11:37:08.574 [warning] :a Timeout for request: 13

11:37:08.574 [info] lb receive get from :client_b (53)

11:37:08.574 [warning] :a Timeout for request: 13, but request not found.

11:37:08.574 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 54, observer: :observer}

11:37:08.574 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 452, context: %KvStore.Context{vector_clock: %{a: 142}}}]

11:37:08.575 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 452, context: %KvStore.Context{vector_clock: %{a: 142}}}], type: :get_response, req_id: 52}}

11:37:08.575 [info] Latest entries: [%KvStore.CacheEntry{object: 452, context: %KvStore.Context{vector_clock: %{a: 142}}}]

11:37:08.575 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 53}

11:37:08.576 [info] Receive response of 52 from a with [%KvStore.CacheEntry{object: 452, context: %KvStore.Context{vector_clock: %{a: 142}}}]

11:37:08.576 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 52, key: "1", object: [%KvStore.CacheEntry{object: 452, context: %KvStore.Context{vector_clock: %{a: 142}}}], sender: :a, type: :get_log}

11:37:08.576 [info] generate requests

11:37:08.576 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 820, context: %KvStore.Context{vector_clock: %{a: 125}}}]

11:37:08.576 [info] Send request {:put, "4", 950, []}

11:37:08.577 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 820, context: %KvStore.Context{vector_clock: %{a: 125}}}], type: :get_response, req_id: 53}}

11:37:08.577 [info] lb receive put from :client_a

11:37:08.577 [info] Latest entries: [%KvStore.CacheEntry{object: 820, context: %KvStore.Context{vector_clock: %{a: 125}}}]

11:37:08.577 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 55, observer: :observer}

11:37:08.578 [info] Receive response of 53 from a with [%KvStore.CacheEntry{object: 820, context: %KvStore.Context{vector_clock: %{a: 125}}}]

11:37:08.578 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 950, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 54}

11:37:08.578 [info] generate requests

11:37:08.578 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 53, key: "3", object: [%KvStore.CacheEntry{object: 820, context: %KvStore.Context{vector_clock: %{a: 125}}}], sender: :a, type: :get_log}

11:37:08.578 [info] Send request {:get, "1"}

11:37:09.298 [info] lb receive get from :client_b (339)

11:37:09.298 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 484, context: %KvStore.Context{vector_clock: %{a: 1094}}}], type: :get_response, req_id: 338}}

11:37:09.298 [info] Latest entries: [%KvStore.CacheEntry{object: 484, context: %KvStore.Context{vector_clock: %{a: 1094}}}]

11:37:09.298 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 340, observer: :observer}

11:37:09.299 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 338, key: "2", object: [%KvStore.CacheEntry{object: 484, context: %KvStore.Context{vector_clock: %{a: 1094}}}], sender: :a, type: :get_log}

11:37:09.299 [info] Receive response of 338 from a with [%KvStore.CacheEntry{object: 484, context: %KvStore.Context{vector_clock: %{a: 1094}}}]

11:37:09.299 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 339}

11:37:09.299 [info] Send request {:get, "3"}

11:37:09.300 [info] lb receive get from :client_a (340)

11:37:09.300 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 455, context: %KvStore.Context{vector_clock: %{a: 1096}}}]

11:37:09.300 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 341, observer: :observer}

11:37:09.301 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 340}

11:37:09.302 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 455, context: %KvStore.Context{vector_clock: %{a: 1096}}}], type: :get_response, req_id: 339}}

11:37:09.302 [info] Latest entries: [%KvStore.CacheEntry{object: 455, context: %KvStore.Context{vector_clock: %{a: 1096}}}]

11:37:09.302 [info] Receive response of 339 from a with [%KvStore.CacheEntry{object: 455, context: %KvStore.Context{vector_clock: %{a: 1096}}}]

11:37:09.302 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 339, key: "5", object: [%KvStore.CacheEntry{object: 455, context: %KvStore.Context{vector_clock: %{a: 1096}}}], sender: :a, type: :get_log}

11:37:09.302 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 736, context: %KvStore.Context{vector_clock: %{a: 1114}}}]

11:37:09.302 [info] Send request {:get, "2"}

11:37:09.302 [warning] :a Timeout for request: 302

11:37:09.302 [warning] :a Timeout for request: 302, but request not found.

11:37:09.303 [info] lb receive get from :client_b (341)

11:37:09.303 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 736, context: %KvStore.Context{vector_clock: %{a: 1114}}}], type: :get_response, req_id: 340}}

11:37:09.303 [info] Latest entries: [%KvStore.CacheEntry{object: 736, context: %KvStore.Context{vector_clock: %{a: 1114}}}]

11:37:09.303 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 342, observer: :observer}

11:37:09.304 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 341}

11:37:09.304 [info] Receive response of 340 from a with [%KvStore.CacheEntry{object: 736, context: %KvStore.Context{vector_clock: %{a: 1114}}}]

11:37:09.304 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 340, key: "3", object: [%KvStore.CacheEntry{object: 736, context: %KvStore.Context{vector_clock: %{a: 1114}}}], sender: :a, type: :get_log}

11:37:09.304 [info] generate requests

11:37:09.304 [info] Send request {:put, "3", 645, []}

11:37:09.305 [info] lb receive put from :client_a

11:37:09.305 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 484, context: %KvStore.Context{vector_clock: %{a: 1094}}}]

11:37:09.305 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 343, observer: :observer}

11:37:09.305 [warning] :a Timeout for request: 303

11:37:09.305 [warning] :a Timeout for request: 303, but request not found.

11:37:09.306 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 645, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 342}

11:37:09.306 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 484, context: %KvStore.Context{vector_clock: %{a: 1094}}}], type: :get_response, req_id: 341}}

11:37:09.306 [info] Latest entries: [%KvStore.CacheEntry{object: 484, context: %KvStore.Context{vector_clock: %{a: 1094}}}]

11:37:09.307 [info] New objects are [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}]

11:37:09.307 [info] Receive response of 341 from a with [%KvStore.CacheEntry{object: 484, context: %KvStore.Context{vector_clock: %{a: 1094}}}]

11:37:09.307 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 341, key: "2", object: [%KvStore.CacheEntry{object: 484, context: %KvStore.Context{vector_clock: %{a: 1094}}}], sender: :a, type: :get_log}

11:37:09.307 [info] generate requests

11:37:09.307 [info] Send request {:get, "4"}

11:37:09.308 [info] lb receive get from :client_b (343)

11:37:09.308 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 344, observer: :observer}

11:37:09.309 [info] Receive response of 342 from a with context: %KvStore.Context{vector_clock: %{a: 1130}}

11:37:09.309 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 342, key: "3", object: 645, sender: :a, type: :put_log}

11:37:09.309 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 343}

11:37:09.309 [info] Send request {:get, "5"}

11:37:09.310 [info] lb receive get from :client_a (344)

11:37:09.310 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 237, context: %KvStore.Context{vector_clock: %{a: 1110}}}]

11:37:09.310 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 345, observer: :observer}

11:37:09.311 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 237, context: %KvStore.Context{vector_clock: %{a: 1110}}}], type: :get_response, req_id: 343}}

11:37:09.311 [info] Latest entries: [%KvStore.CacheEntry{object: 237, context: %KvStore.Context{vector_clock: %{a: 1110}}}]

11:37:09.311 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 344}

11:37:09.312 [info] Receive response of 343 from a with [%KvStore.CacheEntry{object: 237, context: %KvStore.Context{vector_clock: %{a: 1110}}}]

11:37:09.312 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 343, key: "4", object: [%KvStore.CacheEntry{object: 237, context: %KvStore.Context{vector_clock: %{a: 1110}}}], sender: :a, type: :get_log}

11:37:09.312 [info] Send request {:get, "3"}

11:37:09.312 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 455, context: %KvStore.Context{vector_clock: %{a: 1096}}}]

11:37:09.313 [info] lb receive get from :client_b (345)

11:37:09.313 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 455, context: %KvStore.Context{vector_clock: %{a: 1096}}}], type: :get_response, req_id: 344}}

11:37:09.313 [info] Latest entries: [%KvStore.CacheEntry{object: 455, context: %KvStore.Context{vector_clock: %{a: 1096}}}]

11:37:09.313 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 346, observer: :observer}

11:37:09.314 [info] Receive response of 344 from a with [%KvStore.CacheEntry{object: 455, context: %KvStore.Context{vector_clock: %{a: 1096}}}]

11:37:09.314 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 344, key: "5", object: [%KvStore.CacheEntry{object: 455, context: %KvStore.Context{vector_clock: %{a: 1096}}}], sender: :a, type: :get_log}

11:37:09.314 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 345}

11:37:09.314 [info] Send request {:get, "1"}

11:37:09.315 [info] lb receive get from :client_a (346)

11:37:09.315 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}]

11:37:09.315 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 347, observer: :observer}

11:37:09.315 [warning] :a Timeout for request: 307

11:37:09.315 [warning] :a Timeout for request: 307, but request not found.

11:37:09.316 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 346}

11:37:09.316 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}], type: :get_response, req_id: 345}}

11:37:09.316 [info] Latest entries: [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}]

11:37:09.317 [info] Receive response of 345 from a with [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}]

11:37:09.317 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 390, context: %KvStore.Context{vector_clock: %{a: 973}}}]

11:37:09.317 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 345, key: "3", object: [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}], sender: :a, type: :get_log}

11:37:09.317 [info] Send request {:put, "1", 844, []}

11:37:09.318 [info] lb receive put from :client_b

11:37:09.318 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 390, context: %KvStore.Context{vector_clock: %{a: 973}}}], type: :get_response, req_id: 346}}

11:37:09.318 [info] Latest entries: [%KvStore.CacheEntry{object: 390, context: %KvStore.Context{vector_clock: %{a: 973}}}]

11:37:09.318 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 348, observer: :observer}

11:37:09.319 [info] Receive response of 346 from a with [%KvStore.CacheEntry{object: 390, context: %KvStore.Context{vector_clock: %{a: 973}}}]

11:37:09.319 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 346, key: "1", object: [%KvStore.CacheEntry{object: 390, context: %KvStore.Context{vector_clock: %{a: 973}}}], sender: :a, type: :get_log}

11:37:09.319 [info] generate requests

11:37:09.319 [info] Send request {:get, "5"}

11:37:09.319 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 844, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 347}

11:37:09.320 [info] lb receive get from :client_a (348)

11:37:09.320 [info] New objects are [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}]

11:37:09.320 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 349, observer: :observer}

11:37:09.321 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 348}

11:37:09.322 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 347, key: "1", object: 844, sender: :a, type: :put_log}

11:37:09.322 [info] Receive response of 347 from a with context: %KvStore.Context{vector_clock: %{a: 1147}}

11:37:09.322 [info] generate requests

11:37:09.322 [info] Send request {:get, "3"}

11:37:09.322 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 455, context: %KvStore.Context{vector_clock: %{a: 1096}}}]

11:37:09.323 [info] lb receive get from :client_b (349)

11:37:09.323 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 455, context: %KvStore.Context{vector_clock: %{a: 1096}}}], type: :get_response, req_id: 348}}

11:37:09.323 [info] Latest entries: [%KvStore.CacheEntry{object: 455, context: %KvStore.Context{vector_clock: %{a: 1096}}}]

11:37:09.323 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 350, observer: :observer}

11:37:09.323 [warning] :a Timeout for request: 310

11:37:09.323 [warning] :a Timeout for request: 310, but request not found.

11:37:09.324 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 349}

11:37:09.324 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 348, key: "5", object: [%KvStore.CacheEntry{object: 455, context: %KvStore.Context{vector_clock: %{a: 1096}}}], sender: :a, type: :get_log}

11:37:09.324 [info] Receive response of 348 from a with [%KvStore.CacheEntry{object: 455, context: %KvStore.Context{vector_clock: %{a: 1096}}}]

11:37:09.324 [info] Send request {:get, "4"}

11:37:09.325 [info] lb receive get from :client_a (350)

11:37:09.325 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}]

11:37:09.325 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 351, observer: :observer}

11:37:09.326 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 350}

11:37:09.326 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}], type: :get_response, req_id: 349}}

11:37:09.326 [info] Latest entries: [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}]

11:37:09.327 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 237, context: %KvStore.Context{vector_clock: %{a: 1110}}}]

11:37:09.327 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 349, key: "3", object: [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}], sender: :a, type: :get_log}

11:37:09.328 [info] Receive response of 349 from a with [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}]

11:37:09.328 [info] Send request {:get, "3"}

11:37:09.328 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 237, context: %KvStore.Context{vector_clock: %{a: 1110}}}], type: :get_response, req_id: 350}}

11:37:09.328 [info] Latest entries: [%KvStore.CacheEntry{object: 237, context: %KvStore.Context{vector_clock: %{a: 1110}}}]

11:37:09.328 [info] lb receive get from :client_b (351)

11:37:09.328 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 352, observer: :observer}

11:37:09.329 [info] Receive response of 350 from a with [%KvStore.CacheEntry{object: 237, context: %KvStore.Context{vector_clock: %{a: 1110}}}]

11:37:09.329 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 350, key: "4", object: [%KvStore.CacheEntry{object: 237, context: %KvStore.Context{vector_clock: %{a: 1110}}}], sender: :a, type: :get_log}

11:37:09.329 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 351}

11:37:09.329 [info] Send request {:put, "4", 847, []}

11:37:09.330 [info] lb receive put from :client_a

11:37:09.330 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}]

11:37:09.330 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 353, observer: :observer}

11:37:09.331 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 847, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 352}

11:37:09.331 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}], type: :get_response, req_id: 351}}

11:37:09.331 [info] Latest entries: [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}]

11:37:09.331 [warning] :a Timeout for request: 313

11:37:09.331 [warning] :a Timeout for request: 313, but request not found.

11:37:09.332 [info] Receive response of 351 from a with [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}]

11:37:09.332 [info] New objects are [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.332 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 351, key: "3", object: [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}], sender: :a, type: :get_log}

11:37:09.332 [info] Send request {:put, "2", 69, []}

11:37:09.333 [info] lb receive put from :client_b

11:37:09.333 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 354, observer: :observer}

11:37:09.334 [info] Receive response of 352 from a with context: %KvStore.Context{vector_clock: %{a: 1162}}

11:37:09.334 [info] generate requests

11:37:09.334 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 352, key: "4", object: 847, sender: :a, type: :put_log}

11:37:09.334 [info] Send request {:get, "4"}

11:37:09.334 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 69, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 353}

11:37:09.335 [info] lb receive get from :client_a (354)

11:37:09.335 [info] New objects are [%KvStore.CacheEntry{object: 69, context: %KvStore.Context{vector_clock: %{a: 1167}}}]

11:37:09.335 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 355, observer: :observer}

11:37:09.336 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 354}

11:37:09.337 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.337 [info] Receive response of 353 from a with context: %KvStore.Context{vector_clock: %{a: 1167}}

11:37:09.337 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 353, key: "2", object: 69, sender: :a, type: :put_log}

11:37:09.337 [info] generate requests

11:37:09.337 [info] Send request {:put, "2", 609, []}

11:37:09.338 [info] lb receive put from :client_b

11:37:09.338 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}], type: :get_response, req_id: 354}}

11:37:09.338 [info] Latest entries: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.338 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 356, observer: :observer}

11:37:09.339 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 354, key: "4", object: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}], sender: :a, type: :get_log}

11:37:09.339 [info] Receive response of 354 from a with [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.339 [info] Send request {:put, "5", 167, []}

11:37:09.339 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 609, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 355}

11:37:09.340 [info] New objects are [%KvStore.CacheEntry{object: 609, context: %KvStore.Context{vector_clock: %{a: 1173}}}]

11:37:09.340 [info] lb receive put from :client_a

11:37:09.340 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 357, observer: :observer}

11:37:09.341 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 167, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 356}

11:37:09.342 [info] Receive response of 355 from a with context: %KvStore.Context{vector_clock: %{a: 1173}}

11:37:09.342 [info] New objects are [%KvStore.CacheEntry{object: 167, context: %KvStore.Context{vector_clock: %{a: 1176}}}]

11:37:09.342 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 355, key: "2", object: 609, sender: :a, type: :put_log}

11:37:09.342 [info] Send request {:get, "4"}

11:37:09.343 [info] lb receive get from :client_b (357)

11:37:09.343 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 358, observer: :observer}

11:37:09.343 [warning] :a Timeout for request: 318

11:37:09.343 [warning] :a Timeout for request: 318, but request not found.

11:37:09.344 [info] Receive response of 356 from a with context: %KvStore.Context{vector_clock: %{a: 1176}}

11:37:09.344 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 357}

11:37:09.344 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 356, key: "5", object: 167, sender: :a, type: :put_log}

11:37:09.344 [info] Send request {:get, "5"}

11:37:09.345 [info] lb receive get from :client_a (358)

11:37:09.345 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.345 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 359, observer: :observer}

11:37:09.346 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}], type: :get_response, req_id: 357}}

11:37:09.346 [info] Latest entries: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.346 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 358}

11:37:09.347 [info] Receive response of 357 from a with [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.347 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 357, key: "4", object: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}], sender: :a, type: :get_log}

11:37:09.347 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 167, context: %KvStore.Context{vector_clock: %{a: 1176}}}]

11:37:09.347 [info] Send request {:get, "1"}

11:37:09.348 [info] lb receive get from :client_b (359)

11:37:09.348 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 167, context: %KvStore.Context{vector_clock: %{a: 1176}}}], type: :get_response, req_id: 358}}

11:37:09.348 [info] Latest entries: [%KvStore.CacheEntry{object: 167, context: %KvStore.Context{vector_clock: %{a: 1176}}}]

11:37:09.348 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 360, observer: :observer}

11:37:09.349 [info] Receive response of 358 from a with [%KvStore.CacheEntry{object: 167, context: %KvStore.Context{vector_clock: %{a: 1176}}}]

11:37:09.349 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 358, key: "5", object: [%KvStore.CacheEntry{object: 167, context: %KvStore.Context{vector_clock: %{a: 1176}}}], sender: :a, type: :get_log}

11:37:09.349 [info] generate requests

11:37:09.349 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 359}

11:37:09.349 [info] Send request {:get, "3"}

11:37:09.349 [warning] :a Timeout for request: 320

11:37:09.349 [warning] :a Timeout for request: 320, but request not found.

11:37:09.350 [info] lb receive get from :client_a (360)

11:37:09.350 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}]

11:37:09.350 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 361, observer: :observer}

11:37:09.351 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}], type: :get_response, req_id: 359}}

11:37:09.351 [info] Latest entries: [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}]

11:37:09.351 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 360}

11:37:09.352 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 359, key: "1", object: [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}], sender: :a, type: :get_log}

11:37:09.352 [info] Receive response of 359 from a with [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}]

11:37:09.352 [info] generate requests

11:37:09.352 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}]

11:37:09.353 [info] Send request {:put, "3", 37, []}

11:37:09.353 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}], type: :get_response, req_id: 360}}

11:37:09.353 [info] Latest entries: [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}]

11:37:09.353 [info] lb receive put from :client_b

11:37:09.353 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 362, observer: :observer}

11:37:09.354 [info] Receive response of 360 from a with [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}]

11:37:09.354 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 360, key: "3", object: [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 1130}}}], sender: :a, type: :get_log}

11:37:09.354 [info] Send request {:get, "4"}

11:37:09.354 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 37, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 361}

11:37:09.355 [info] lb receive get from :client_a (362)

11:37:09.355 [info] New objects are [%KvStore.CacheEntry{object: 37, context: %KvStore.Context{vector_clock: %{a: 1193}}}]

11:37:09.355 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 363, observer: :observer}

11:37:09.356 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 362}

11:37:09.357 [info] Receive response of 361 from a with context: %KvStore.Context{vector_clock: %{a: 1193}}

11:37:09.357 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 361, key: "3", object: 37, sender: :a, type: :put_log}

11:37:09.357 [info] Send request {:get, "1"}

11:37:09.357 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.357 [warning] :a Timeout for request: 323

11:37:09.357 [warning] :a Timeout for request: 323, but request not found.

11:37:09.358 [info] lb receive get from :client_b (363)

11:37:09.358 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}], type: :get_response, req_id: 362}}

11:37:09.358 [info] Latest entries: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.358 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 364, observer: :observer}

11:37:09.359 [info] Receive response of 362 from a with [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.359 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 362, key: "4", object: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}], sender: :a, type: :get_log}

11:37:09.359 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 363}

11:37:09.359 [info] Send request {:put, "2", 500, []}

11:37:09.360 [info] lb receive put from :client_a

11:37:09.360 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}]

11:37:09.360 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 365, observer: :observer}

11:37:09.361 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}], type: :get_response, req_id: 363}}

11:37:09.361 [info] Latest entries: [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}]

11:37:09.361 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 500, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 364}

11:37:09.362 [info] Receive response of 363 from a with [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}]

11:37:09.362 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 363, key: "1", object: [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}], sender: :a, type: :get_log}

11:37:09.362 [info] New objects are [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}]

11:37:09.362 [info] Send request {:get, "4"}

11:37:09.362 [warning] :a Timeout for request: 325

11:37:09.362 [warning] :a Timeout for request: 325, but request not found.

11:37:09.363 [info] lb receive get from :client_b (365)

11:37:09.363 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 366, observer: :observer}

11:37:09.364 [info] Receive response of 364 from a with context: %KvStore.Context{vector_clock: %{a: 1203}}

11:37:09.364 [info] generate requests

11:37:09.364 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 364, key: "2", object: 500, sender: :a, type: :put_log}

11:37:09.364 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 365}

11:37:09.364 [info] Send request {:get, "4"}

11:37:09.365 [info] lb receive get from :client_a (366)

11:37:09.365 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.365 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 367, observer: :observer}

11:37:09.366 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 366}

11:37:09.366 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}], type: :get_response, req_id: 365}}

11:37:09.366 [info] Latest entries: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.367 [info] Receive response of 365 from a with [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.367 [info] generate requests

11:37:09.367 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 365, key: "4", object: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}], sender: :a, type: :get_log}

11:37:09.367 [info] Send request {:put, "5", 257, []}

11:37:09.367 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.368 [info] lb receive put from :client_b

11:37:09.368 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}], type: :get_response, req_id: 366}}

11:37:09.368 [info] Latest entries: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.368 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 368, observer: :observer}

11:37:09.369 [info] Receive response of 366 from a with [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.369 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 366, key: "4", object: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}], sender: :a, type: :get_log}

11:37:09.369 [info] Send request {:put, "3", 21, []}

11:37:09.369 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 257, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 367}

11:37:09.370 [info] lb receive put from :client_a

11:37:09.370 [info] New objects are [%KvStore.CacheEntry{object: 257, context: %KvStore.Context{vector_clock: %{a: 1213}}}]

11:37:09.370 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 369, observer: :observer}

11:37:09.371 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 21, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 368}

11:37:09.372 [info] Receive response of 367 from a with context: %KvStore.Context{vector_clock: %{a: 1213}}

11:37:09.372 [info] New objects are [%KvStore.CacheEntry{object: 21, context: %KvStore.Context{vector_clock: %{a: 1216}}}]

11:37:09.372 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 367, key: "5", object: 257, sender: :a, type: :put_log}

11:37:09.372 [info] Send request {:get, "2"}

11:37:09.373 [info] lb receive get from :client_b (369)

11:37:09.373 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 370, observer: :observer}

11:37:09.374 [info] Receive response of 368 from a with context: %KvStore.Context{vector_clock: %{a: 1216}}

11:37:09.374 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 369}

11:37:09.374 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 368, key: "3", object: 21, sender: :a, type: :put_log}

11:37:09.374 [info] Send request {:get, "4"}

11:37:09.375 [info] lb receive get from :client_a (370)

11:37:09.375 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}]

11:37:09.375 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 371, observer: :observer}

11:37:09.375 [warning] :a Timeout for request: 330

11:37:09.375 [warning] :a Timeout for request: 330, but request not found.

11:37:09.376 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 370}

11:37:09.377 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}], type: :get_response, req_id: 369}}

11:37:09.377 [info] Latest entries: [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}]

11:37:09.378 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 369, key: "2", object: [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}], sender: :a, type: :get_log}

11:37:09.378 [info] Receive response of 369 from a with [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}]

11:37:09.378 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.378 [info] Send request {:get, "2"}

11:37:09.381 [info] lb receive get from :client_b (371)

11:37:09.381 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}], type: :get_response, req_id: 370}}

11:37:09.381 [info] Latest entries: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.381 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 372, observer: :observer}

11:37:09.381 [warning] :a Timeout for request: 332

11:37:09.381 [warning] :a Timeout for request: 332, but request not found.

11:37:09.381 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 371}

11:37:09.382 [info] Receive response of 370 from a with [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.382 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 370, key: "4", object: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}], sender: :a, type: :get_log}

11:37:09.382 [info] generate requests

11:37:09.382 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}]

11:37:09.382 [info] Send request {:get, "3"}

11:37:09.382 [warning] :a Timeout for request: 333

11:37:09.382 [warning] :a Timeout for request: 333, but request not found.

11:37:09.383 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}], type: :get_response, req_id: 371}}

11:37:09.383 [info] Latest entries: [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}]

11:37:09.383 [info] lb receive get from :client_a (372)

11:37:09.383 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 373, observer: :observer}

11:37:09.384 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 372}

11:37:09.384 [info] Receive response of 371 from a with [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}]

11:37:09.384 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 371, key: "2", object: [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}], sender: :a, type: :get_log}

11:37:09.384 [info] generate requests

11:37:09.384 [info] Send request {:get, "4"}

11:37:09.385 [info] lb receive get from :client_b (373)

11:37:09.385 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 21, context: %KvStore.Context{vector_clock: %{a: 1216}}}]

11:37:09.385 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 374, observer: :observer}

11:37:09.386 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 373}

11:37:09.386 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 21, context: %KvStore.Context{vector_clock: %{a: 1216}}}], type: :get_response, req_id: 372}}

11:37:09.386 [info] Latest entries: [%KvStore.CacheEntry{object: 21, context: %KvStore.Context{vector_clock: %{a: 1216}}}]

11:37:09.387 [info] Receive response of 372 from a with [%KvStore.CacheEntry{object: 21, context: %KvStore.Context{vector_clock: %{a: 1216}}}]

11:37:09.387 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 372, key: "3", object: [%KvStore.CacheEntry{object: 21, context: %KvStore.Context{vector_clock: %{a: 1216}}}], sender: :a, type: :get_log}

11:37:09.387 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.387 [info] Send request {:get, "4"}

11:37:09.388 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}], type: :get_response, req_id: 373}}

11:37:09.388 [info] Latest entries: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.388 [info] lb receive get from :client_a (374)

11:37:09.388 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 375, observer: :observer}

11:37:09.389 [info] Receive response of 373 from a with [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.389 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 373, key: "4", object: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}], sender: :a, type: :get_log}

11:37:09.389 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 374}

11:37:09.389 [info] Send request {:put, "5", 161, []}

11:37:09.390 [info] lb receive put from :client_b

11:37:09.390 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.390 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 376, observer: :observer}

11:37:09.391 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}], type: :get_response, req_id: 374}}

11:37:09.391 [info] Latest entries: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.391 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 161, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 375}

11:37:09.392 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 374, key: "4", object: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}], sender: :a, type: :get_log}

11:37:09.392 [info] New objects are [%KvStore.CacheEntry{object: 161, context: %KvStore.Context{vector_clock: %{a: 1240}}}]

11:37:09.392 [info] Receive response of 374 from a with [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.392 [info] Send request {:put, "5", 399, []}

11:37:09.392 [warning] :a Timeout for request: 337

11:37:09.392 [warning] :a Timeout for request: 337, but request not found.

11:37:09.393 [info] lb receive put from :client_a

11:37:09.393 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 377, observer: :observer}

11:37:09.394 [info] Receive response of 375 from a with context: %KvStore.Context{vector_clock: %{a: 1240}}

11:37:09.394 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 375, key: "5", object: 161, sender: :a, type: :put_log}

11:37:09.394 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 399, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 376}

11:37:09.394 [info] Send request {:get, "3"}

11:37:09.395 [info] lb receive get from :client_b (377)

11:37:09.395 [info] New objects are [%KvStore.CacheEntry{object: 399, context: %KvStore.Context{vector_clock: %{a: 1244}}}]

11:37:09.395 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 378, observer: :observer}

11:37:09.395 [warning] :a Timeout for request: 338

11:37:09.395 [warning] :a Timeout for request: 338, but request not found.

11:37:09.396 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 377}

11:37:09.397 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 376, key: "5", object: 399, sender: :a, type: :put_log}

11:37:09.397 [info] Receive response of 376 from a with context: %KvStore.Context{vector_clock: %{a: 1244}}

11:37:09.397 [info] generate requests

11:37:09.397 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 21, context: %KvStore.Context{vector_clock: %{a: 1216}}}]

11:37:09.397 [info] Send request {:get, "4"}

11:37:09.398 [info] lb receive get from :client_a (378)

11:37:09.398 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 21, context: %KvStore.Context{vector_clock: %{a: 1216}}}], type: :get_response, req_id: 377}}

11:37:09.398 [info] Latest entries: [%KvStore.CacheEntry{object: 21, context: %KvStore.Context{vector_clock: %{a: 1216}}}]

11:37:09.398 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 379, observer: :observer}

11:37:09.399 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 378}

11:37:09.399 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 377, key: "3", object: [%KvStore.CacheEntry{object: 21, context: %KvStore.Context{vector_clock: %{a: 1216}}}], sender: :a, type: :get_log}

11:37:09.399 [info] Receive response of 377 from a with [%KvStore.CacheEntry{object: 21, context: %KvStore.Context{vector_clock: %{a: 1216}}}]

11:37:09.399 [info] generate requests

11:37:09.399 [info] Send request {:put, "4", 325, []}

11:37:09.400 [info] lb receive put from :client_b

11:37:09.400 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.400 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 380, observer: :observer}

11:37:09.401 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}], type: :get_response, req_id: 378}}

11:37:09.401 [info] Latest entries: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.401 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 325, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 379}

11:37:09.402 [info] Receive response of 378 from a with [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}]

11:37:09.402 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 378, key: "4", object: [%KvStore.CacheEntry{object: 847, context: %KvStore.Context{vector_clock: %{a: 1162}}}], sender: :a, type: :get_log}

11:37:09.402 [info] New objects are [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 1254}}}]

11:37:09.402 [info] Send request {:get, "4"}

11:37:09.403 [info] lb receive get from :client_a (380)

11:37:09.403 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 381, observer: :observer}

11:37:09.404 [info] Receive response of 379 from a with context: %KvStore.Context{vector_clock: %{a: 1254}}

11:37:09.404 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 380}

11:37:09.404 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 379, key: "4", object: 325, sender: :a, type: :put_log}

11:37:09.404 [info] Send request {:get, "2"}

11:37:09.405 [info] lb receive get from :client_b (381)

11:37:09.405 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 1254}}}]

11:37:09.405 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 382, observer: :observer}

11:37:09.406 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 1254}}}], type: :get_response, req_id: 380}}

11:37:09.406 [info] Latest entries: [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 1254}}}]

11:37:09.407 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 381}

11:37:09.407 [info] Receive response of 380 from a with [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 1254}}}]

11:37:09.407 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 380, key: "4", object: [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 1254}}}], sender: :a, type: :get_log}

11:37:09.407 [info] Send request {:put, "4", 168, []}

11:37:09.407 [warning] :a Timeout for request: 343

11:37:09.407 [warning] :a Timeout for request: 343, but request not found.

11:37:09.408 [info] lb receive put from :client_a

11:37:09.408 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}]

11:37:09.408 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 383, observer: :observer}

11:37:09.409 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 168, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 382}

11:37:09.409 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}], type: :get_response, req_id: 381}}

11:37:09.409 [info] Latest entries: [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}]

11:37:09.410 [info] New objects are [%KvStore.CacheEntry{object: 168, context: %KvStore.Context{vector_clock: %{a: 1263}}}]

11:37:09.410 [info] Receive response of 381 from a with [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}]

11:37:09.410 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 381, key: "2", object: [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}], sender: :a, type: :get_log}

11:37:09.410 [info] Send request {:get, "1"}

11:37:09.411 [info] lb receive get from :client_b (383)

11:37:09.411 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 384, observer: :observer}

11:37:09.412 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 383}

11:37:09.412 [info] Receive response of 382 from a with context: %KvStore.Context{vector_clock: %{a: 1263}}

11:37:09.412 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 382, key: "4", object: 168, sender: :a, type: :put_log}

11:37:09.412 [info] generate requests

11:37:09.412 [info] Send request {:get, "5"}

11:37:09.413 [info] lb receive get from :client_a (384)

11:37:09.413 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}]

11:37:09.413 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 385, observer: :observer}

11:37:09.414 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}], type: :get_response, req_id: 383}}

11:37:09.414 [info] Latest entries: [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}]

11:37:09.414 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 384}

11:37:09.415 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 383, key: "1", object: [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}], sender: :a, type: :get_log}

11:37:09.415 [info] Receive response of 383 from a with [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}]

11:37:09.415 [info] generate requests

11:37:09.415 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 399, context: %KvStore.Context{vector_clock: %{a: 1244}}}]

11:37:09.415 [info] Send request {:get, "4"}

11:37:09.416 [info] lb receive get from :client_b (385)

11:37:09.416 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 399, context: %KvStore.Context{vector_clock: %{a: 1244}}}], type: :get_response, req_id: 384}}

11:37:09.416 [info] Latest entries: [%KvStore.CacheEntry{object: 399, context: %KvStore.Context{vector_clock: %{a: 1244}}}]

11:37:09.416 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 386, observer: :observer}

11:37:09.417 [info] Receive response of 384 from a with [%KvStore.CacheEntry{object: 399, context: %KvStore.Context{vector_clock: %{a: 1244}}}]

11:37:09.417 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 384, key: "5", object: [%KvStore.CacheEntry{object: 399, context: %KvStore.Context{vector_clock: %{a: 1244}}}], sender: :a, type: :get_log}

11:37:09.417 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 385}

11:37:09.417 [info] Send request {:get, "1"}

11:37:09.418 [info] lb receive get from :client_a (386)

11:37:09.418 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 168, context: %KvStore.Context{vector_clock: %{a: 1263}}}]

11:37:09.418 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 387, observer: :observer}

11:37:09.419 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 386}

11:37:09.419 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 168, context: %KvStore.Context{vector_clock: %{a: 1263}}}], type: :get_response, req_id: 385}}

11:37:09.419 [info] Latest entries: [%KvStore.CacheEntry{object: 168, context: %KvStore.Context{vector_clock: %{a: 1263}}}]

11:37:09.420 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 385, key: "4", object: [%KvStore.CacheEntry{object: 168, context: %KvStore.Context{vector_clock: %{a: 1263}}}], sender: :a, type: :get_log}

11:37:09.420 [info] Receive response of 385 from a with [%KvStore.CacheEntry{object: 168, context: %KvStore.Context{vector_clock: %{a: 1263}}}]

11:37:09.420 [info] Send request {:put, "4", 207, []}

11:37:09.420 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}]

11:37:09.420 [warning] :a Timeout for request: 348

11:37:09.420 [warning] :a Timeout for request: 348, but request not found.

11:37:09.421 [info] lb receive put from :client_b

11:37:09.421 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}], type: :get_response, req_id: 386}}

11:37:09.421 [info] Latest entries: [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}]

11:37:09.421 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 388, observer: :observer}

11:37:09.422 [info] Receive response of 386 from a with [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}]

11:37:09.422 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 386, key: "1", object: [%KvStore.CacheEntry{object: 844, context: %KvStore.Context{vector_clock: %{a: 1147}}}], sender: :a, type: :get_log}

11:37:09.422 [info] Send request {:put, "5", 601, []}

11:37:09.422 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 207, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 387}

11:37:09.423 [info] lb receive put from :client_a

11:37:09.423 [info] New objects are [%KvStore.CacheEntry{object: 207, context: %KvStore.Context{vector_clock: %{a: 1280}}}]

11:37:09.423 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 389, observer: :observer}

11:37:09.424 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 601, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 388}

11:37:09.425 [info] Receive response of 387 from a with context: %KvStore.Context{vector_clock: %{a: 1280}}

11:37:09.425 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 387, key: "4", object: 207, sender: :a, type: :put_log}

11:37:09.425 [info] New objects are [%KvStore.CacheEntry{object: 601, context: %KvStore.Context{vector_clock: %{a: 1282}}}]

11:37:09.425 [info] Send request {:get, "5"}

11:37:09.426 [info] lb receive get from :client_b (389)

11:37:09.426 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 390, observer: :observer}

11:37:09.427 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 389}

11:37:09.427 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 388, key: "5", object: 601, sender: :a, type: :put_log}

11:37:09.427 [info] Receive response of 388 from a with context: %KvStore.Context{vector_clock: %{a: 1282}}

11:37:09.427 [info] generate requests

11:37:09.427 [info] Send request {:get, "2"}

11:37:09.428 [info] lb receive get from :client_a (390)

11:37:09.428 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 601, context: %KvStore.Context{vector_clock: %{a: 1282}}}]

11:37:09.428 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 391, observer: :observer}

11:37:09.429 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 390}

11:37:09.429 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 601, context: %KvStore.Context{vector_clock: %{a: 1282}}}], type: :get_response, req_id: 389}}

11:37:09.429 [info] Latest entries: [%KvStore.CacheEntry{object: 601, context: %KvStore.Context{vector_clock: %{a: 1282}}}]

11:37:09.430 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 389, key: "5", object: [%KvStore.CacheEntry{object: 601, context: %KvStore.Context{vector_clock: %{a: 1282}}}], sender: :a, type: :get_log}

11:37:09.430 [info] Receive response of 389 from a with [%KvStore.CacheEntry{object: 601, context: %KvStore.Context{vector_clock: %{a: 1282}}}]

11:37:09.430 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}]

11:37:09.430 [info] generate requests

11:37:09.430 [info] Send request {:get, "2"}

11:37:09.431 [info] lb receive get from :client_b (391)

11:37:09.431 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}], type: :get_response, req_id: 390}}

11:37:09.431 [info] Latest entries: [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}]

11:37:09.431 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 392, observer: :observer}

11:37:09.432 [info] Receive response of 390 from a with [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}]

11:37:09.432 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 390, key: "2", object: [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}], sender: :a, type: :get_log}

11:37:09.432 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 391}

11:37:09.432 [info] Send request {:put, "2", 752, []}

11:37:09.432 [warning] :a Timeout for request: 353

11:37:09.432 [warning] :a Timeout for request: 353, but request not found.

11:37:09.433 [info] lb receive put from :client_a

11:37:09.433 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}]

11:37:09.433 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 393, observer: :observer}

11:37:09.434 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}], type: :get_response, req_id: 391}}

11:37:09.434 [info] Latest entries: [%KvStore.CacheEntry{object: 500, context: %KvStore.Context{vector_clock: %{a: 1203}}}]

11:37:10.299 [info] lb receive put from :client_b

11:37:10.299 [warning] :a Timeout for request: 689

11:37:10.299 [warning] :a Timeout for request: 689, but request not found.

11:37:10.299 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 730, observer: :observer}

11:37:10.299 [info] New objects are [%KvStore.CacheEntry{object: 191, context: %KvStore.Context{vector_clock: %{a: 2418}}}]

11:37:10.300 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 873, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 729}

11:37:10.301 [info] New objects are [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}]

11:37:10.301 [info] Receive response of 728 from a with context: %KvStore.Context{vector_clock: %{a: 2418}}

11:37:10.301 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 728, key: "3", object: 191, sender: :a, type: :put_log}

11:37:10.301 [info] Send request {:get, "1"}

11:37:10.302 [info] lb receive get from :client_a (730)

11:37:10.302 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 731, observer: :observer}

11:37:10.304 [info] Receive response of 729 from a with context: %KvStore.Context{vector_clock: %{a: 2421}}

11:37:10.304 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 729, key: "4", object: 873, sender: :a, type: :put_log}

11:37:10.304 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 730}

11:37:10.304 [info] Send request {:get, "5"}

11:37:10.304 [warning] :a Timeout for request: 691

11:37:10.304 [warning] :a Timeout for request: 691, but request not found.

11:37:10.305 [info] lb receive get from :client_b (731)

11:37:10.305 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 40, context: %KvStore.Context{vector_clock: %{a: 2352}}}]

11:37:10.305 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 732, observer: :observer}

11:37:10.306 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 731}

11:37:10.306 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 40, context: %KvStore.Context{vector_clock: %{a: 2352}}}], type: :get_response, req_id: 730}}

11:37:10.306 [info] Latest entries: [%KvStore.CacheEntry{object: 40, context: %KvStore.Context{vector_clock: %{a: 2352}}}]

11:37:10.307 [info] Receive response of 730 from a with [%KvStore.CacheEntry{object: 40, context: %KvStore.Context{vector_clock: %{a: 2352}}}]

11:37:10.307 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 2405}}}]

11:37:10.307 [info] generate requests

11:37:10.307 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 730, key: "1", object: [%KvStore.CacheEntry{object: 40, context: %KvStore.Context{vector_clock: %{a: 2352}}}], sender: :a, type: :get_log}

11:37:10.307 [info] Send request {:get, "4"}

11:37:10.308 [info] lb receive get from :client_a (732)

11:37:10.308 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 2405}}}], type: :get_response, req_id: 731}}

11:37:10.308 [info] Latest entries: [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 2405}}}]

11:37:10.308 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 733, observer: :observer}

11:37:10.309 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 732}

11:37:10.309 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 731, key: "5", object: [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 2405}}}], sender: :a, type: :get_log}

11:37:10.309 [info] Receive response of 731 from a with [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 2405}}}]

11:37:10.309 [info] generate requests

11:37:10.309 [info] Send request {:get, "4"}

11:37:10.310 [info] lb receive get from :client_b (733)

11:37:10.310 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}]

11:37:10.310 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 734, observer: :observer}

11:37:10.311 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}], type: :get_response, req_id: 732}}

11:37:10.311 [info] Latest entries: [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}]

11:37:10.311 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 733}

11:37:10.312 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 732, key: "4", object: [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}], sender: :a, type: :get_log}

11:37:10.312 [info] Receive response of 732 from a with [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}]

11:37:10.312 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}]

11:37:10.312 [info] Send request {:get, "2"}

11:37:10.313 [info] lb receive get from :client_a (734)

11:37:10.314 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}], type: :get_response, req_id: 733}}

11:37:10.314 [info] Latest entries: [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}]

11:37:10.314 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 735, observer: :observer}

11:37:10.314 [info] Receive response of 733 from a with [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}]

11:37:10.314 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 733, key: "4", object: [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}], sender: :a, type: :get_log}

11:37:10.314 [info] Send request {:get, "5"}

11:37:10.315 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 734}

11:37:10.315 [info] lb receive get from :client_b (735)

11:37:10.315 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 736, observer: :observer}

11:37:10.315 [warning] :a Timeout for request: 696

11:37:10.315 [warning] :a Timeout for request: 696, but request not found.

11:37:10.315 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 2395}}}]

11:37:10.316 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 735}

11:37:10.316 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 2395}}}], type: :get_response, req_id: 734}}

11:37:10.316 [info] Latest entries: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 2395}}}]

11:37:10.317 [info] Receive response of 734 from a with [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 2395}}}]

11:37:10.317 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 2405}}}]

11:37:10.317 [info] Send request {:put, "1", 45, []}

11:37:10.317 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 734, key: "2", object: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 2395}}}], sender: :a, type: :get_log}

11:37:10.318 [info] lb receive put from :client_a

11:37:10.318 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 2405}}}], type: :get_response, req_id: 735}}

11:37:10.318 [info] Latest entries: [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 2405}}}]

11:37:10.318 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 737, observer: :observer}

11:37:10.318 [warning] :a Timeout for request: 697

11:37:10.318 [warning] :a Timeout for request: 697, but request not found.

11:37:10.319 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 735, key: "5", object: [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 2405}}}], sender: :a, type: :get_log}

11:37:10.319 [info] Receive response of 735 from a with [%KvStore.CacheEntry{object: 470, context: %KvStore.Context{vector_clock: %{a: 2405}}}]

11:37:10.319 [info] Send request {:put, "1", 645, []}

11:37:10.319 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 45, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 736}

11:37:10.320 [info] New objects are [%KvStore.CacheEntry{object: 45, context: %KvStore.Context{vector_clock: %{a: 2446}}}]

11:37:10.320 [info] lb receive put from :client_b

11:37:10.320 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 738, observer: :observer}

11:37:10.321 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 645, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 737}

11:37:10.322 [info] Receive response of 736 from a with context: %KvStore.Context{vector_clock: %{a: 2446}}

11:37:10.322 [info] generate requests

11:37:10.322 [info] New objects are [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 2449}}}]

11:37:10.322 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 736, key: "1", object: 45, sender: :a, type: :put_log}

11:37:10.322 [info] Send request {:get, "1"}

11:37:10.323 [info] lb receive get from :client_a (738)

11:37:10.323 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 739, observer: :observer}

11:37:10.324 [info] Receive response of 737 from a with context: %KvStore.Context{vector_clock: %{a: 2449}}

11:37:10.324 [info] generate requests

11:37:10.324 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 737, key: "1", object: 645, sender: :a, type: :put_log}

11:37:10.324 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 738}

11:37:10.324 [info] Send request {:put, "5", 703, []}

11:37:10.325 [info] lb receive put from :client_b

11:37:10.325 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 740, observer: :observer}

11:37:10.325 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 2449}}}]

11:37:10.326 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 703, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 739}

11:37:10.326 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 2449}}}], type: :get_response, req_id: 738}}

11:37:10.326 [info] Latest entries: [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 2449}}}]

11:37:10.327 [info] New objects are [%KvStore.CacheEntry{object: 703, context: %KvStore.Context{vector_clock: %{a: 2454}}}]

11:37:10.327 [info] Receive response of 738 from a with [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 2449}}}]

11:37:10.327 [info] Send request {:get, "3"}

11:37:10.327 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 738, key: "1", object: [%KvStore.CacheEntry{object: 645, context: %KvStore.Context{vector_clock: %{a: 2449}}}], sender: :a, type: :get_log}

11:37:10.328 [info] lb receive get from :client_a (740)

11:37:10.328 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 741, observer: :observer}

11:37:10.329 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 739, key: "5", object: 703, sender: :a, type: :put_log}

11:37:10.329 [info] Receive response of 739 from a with context: %KvStore.Context{vector_clock: %{a: 2454}}

11:37:10.329 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 740}

11:37:10.329 [info] Send request {:get, "5"}

11:37:10.330 [info] lb receive get from :client_b (741)

11:37:10.330 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 191, context: %KvStore.Context{vector_clock: %{a: 2418}}}]

11:37:10.330 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 742, observer: :observer}

11:37:10.330 [warning] :a Timeout for request: 702

11:37:10.330 [warning] :a Timeout for request: 702, but request not found.

11:37:10.331 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 191, context: %KvStore.Context{vector_clock: %{a: 2418}}}], type: :get_response, req_id: 740}}

11:37:10.331 [info] Latest entries: [%KvStore.CacheEntry{object: 191, context: %KvStore.Context{vector_clock: %{a: 2418}}}]

11:37:10.331 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 741}

11:37:10.332 [info] Receive response of 740 from a with [%KvStore.CacheEntry{object: 191, context: %KvStore.Context{vector_clock: %{a: 2418}}}]

11:37:10.332 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 740, key: "3", object: [%KvStore.CacheEntry{object: 191, context: %KvStore.Context{vector_clock: %{a: 2418}}}], sender: :a, type: :get_log}

11:37:10.332 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 703, context: %KvStore.Context{vector_clock: %{a: 2454}}}]

11:37:10.332 [info] Send request {:put, "3", 354, []}

11:37:10.333 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 703, context: %KvStore.Context{vector_clock: %{a: 2454}}}], type: :get_response, req_id: 741}}

11:37:10.333 [info] Latest entries: [%KvStore.CacheEntry{object: 703, context: %KvStore.Context{vector_clock: %{a: 2454}}}]

11:37:10.333 [info] lb receive put from :client_a

11:37:10.333 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 743, observer: :observer}

11:37:10.334 [info] Receive response of 741 from a with [%KvStore.CacheEntry{object: 703, context: %KvStore.Context{vector_clock: %{a: 2454}}}]

11:37:10.334 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 741, key: "5", object: [%KvStore.CacheEntry{object: 703, context: %KvStore.Context{vector_clock: %{a: 2454}}}], sender: :a, type: :get_log}

11:37:10.334 [info] Send request {:get, "3"}

11:37:10.334 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 354, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 742}

11:37:10.335 [info] lb receive get from :client_b (743)

11:37:10.335 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 744, observer: :observer}

11:37:10.335 [info] New objects are [%KvStore.CacheEntry{object: 354, context: %KvStore.Context{vector_clock: %{a: 2465}}}]

11:37:10.337 [info] Receive response of 742 from a with context: %KvStore.Context{vector_clock: %{a: 2465}}

11:37:10.337 [info] generate requests

11:37:10.337 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 743}

11:37:10.337 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 742, key: "3", object: 354, sender: :a, type: :put_log}

11:37:10.337 [info] Send request {:put, "1", 270, []}

11:37:10.338 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 354, context: %KvStore.Context{vector_clock: %{a: 2465}}}]

11:37:10.338 [info] lb receive put from :client_a

11:37:10.338 [warning] :a Timeout for request: 705

11:37:10.338 [warning] :a Timeout for request: 705, but request not found.

11:37:10.338 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 745, observer: :observer}

11:37:10.339 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 354, context: %KvStore.Context{vector_clock: %{a: 2465}}}], type: :get_response, req_id: 743}}

11:37:10.339 [info] Latest entries: [%KvStore.CacheEntry{object: 354, context: %KvStore.Context{vector_clock: %{a: 2465}}}]

11:37:10.339 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 270, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 744}

11:37:10.340 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 743, key: "3", object: [%KvStore.CacheEntry{object: 354, context: %KvStore.Context{vector_clock: %{a: 2465}}}], sender: :a, type: :get_log}

11:37:10.340 [info] Receive response of 743 from a with [%KvStore.CacheEntry{object: 354, context: %KvStore.Context{vector_clock: %{a: 2465}}}]

11:37:10.340 [info] generate requests

11:37:10.340 [info] New objects are [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}]

11:37:10.340 [info] Send request {:get, "4"}

11:37:10.341 [info] lb receive get from :client_b (745)

11:37:10.341 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 746, observer: :observer}

11:37:10.342 [info] Receive response of 744 from a with context: %KvStore.Context{vector_clock: %{a: 2472}}

11:37:10.342 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 744, key: "1", object: 270, sender: :a, type: :put_log}

11:37:10.342 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 745}

11:37:10.342 [info] Send request {:get, "4"}

11:37:10.343 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}]

11:37:10.343 [info] lb receive get from :client_a (746)

11:37:10.343 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 747, observer: :observer}

11:37:10.344 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}], type: :get_response, req_id: 745}}

11:37:10.344 [info] Latest entries: [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}]

11:37:10.344 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 746}

11:37:10.345 [info] Receive response of 745 from a with [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}]

11:37:10.345 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 745, key: "4", object: [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}], sender: :a, type: :get_log}

11:37:10.346 [info] Send request {:put, "4", 201, []}

11:37:10.346 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}]

11:37:10.346 [warning] :a Timeout for request: 708

11:37:10.346 [warning] :a Timeout for request: 708, but request not found.

11:37:10.346 [info] lb receive put from :client_b

11:37:10.346 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 748, observer: :observer}

11:37:10.346 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}], type: :get_response, req_id: 746}}

11:37:10.346 [info] Latest entries: [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}]

11:37:10.347 [info] Receive response of 746 from a with [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}]

11:37:10.347 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 746, key: "4", object: [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 2421}}}], sender: :a, type: :get_log}

11:37:10.347 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 201, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 747}

11:37:10.347 [info] Send request {:get, "1"}

11:37:10.348 [info] lb receive get from :client_a (748)

11:37:10.348 [info] New objects are [%KvStore.CacheEntry{object: 201, context: %KvStore.Context{vector_clock: %{a: 2482}}}]

11:37:10.348 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 749, observer: :observer}

11:37:10.348 [warning] :a Timeout for request: 709

11:37:10.348 [warning] :a Timeout for request: 709, but request not found.

11:37:10.349 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 748}

11:37:10.350 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 747, key: "4", object: 201, sender: :a, type: :put_log}

11:37:10.350 [info] Receive response of 747 from a with context: %KvStore.Context{vector_clock: %{a: 2482}}

11:37:10.350 [info] Send request {:get, "4"}

11:37:10.350 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}]

11:37:10.351 [info] lb receive get from :client_b (749)

11:37:10.351 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}], type: :get_response, req_id: 748}}

11:37:10.351 [info] Latest entries: [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}]

11:37:10.351 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 750, observer: :observer}

11:37:10.352 [info] Receive response of 748 from a with [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}]

11:37:10.352 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 749}

11:37:10.352 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 748, key: "1", object: [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}], sender: :a, type: :get_log}

11:37:10.352 [info] generate requests

11:37:10.352 [info] Send request {:put, "2", 258, []}

11:37:10.353 [info] lb receive put from :client_a

11:37:10.353 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 201, context: %KvStore.Context{vector_clock: %{a: 2482}}}]

11:37:10.353 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 751, observer: :observer}

11:37:10.354 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 258, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 750}

11:37:10.354 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 201, context: %KvStore.Context{vector_clock: %{a: 2482}}}], type: :get_response, req_id: 749}}

11:37:10.354 [info] Latest entries: [%KvStore.CacheEntry{object: 201, context: %KvStore.Context{vector_clock: %{a: 2482}}}]

11:37:10.355 [info] Receive response of 749 from a with [%KvStore.CacheEntry{object: 201, context: %KvStore.Context{vector_clock: %{a: 2482}}}]

11:37:10.355 [info] generate requests

11:37:10.355 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 749, key: "4", object: [%KvStore.CacheEntry{object: 201, context: %KvStore.Context{vector_clock: %{a: 2482}}}], sender: :a, type: :get_log}

11:37:10.355 [info] New objects are [%KvStore.CacheEntry{object: 258, context: %KvStore.Context{vector_clock: %{a: 2491}}}]

11:37:10.355 [info] Send request {:get, "1"}

11:37:10.355 [warning] :a Timeout for request: 712

11:37:10.355 [warning] :a Timeout for request: 712, but request not found.

11:37:10.356 [info] lb receive get from :client_b (751)

11:37:10.356 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 752, observer: :observer}

11:37:10.357 [info] Receive response of 750 from a with context: %KvStore.Context{vector_clock: %{a: 2491}}

11:37:10.357 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 750, key: "2", object: 258, sender: :a, type: :put_log}

11:37:10.357 [info] Send request {:get, "1"}

11:37:10.357 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 751}

11:37:10.358 [info] lb receive get from :client_a (752)

11:37:10.358 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}]

11:37:10.358 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 753, observer: :observer}

11:37:10.359 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}], type: :get_response, req_id: 751}}

11:37:10.359 [info] Latest entries: [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}]

11:37:10.359 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 752}

11:37:10.360 [info] Receive response of 751 from a with [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}]

11:37:10.360 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 751, key: "1", object: [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}], sender: :a, type: :get_log}

11:37:10.360 [info] Send request {:get, "4"}

11:37:10.360 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}]

11:37:10.361 [info] lb receive get from :client_b (753)

11:37:10.361 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}], type: :get_response, req_id: 752}}

11:37:10.361 [info] Latest entries: [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}]

11:37:10.361 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 754, observer: :observer}

11:37:10.362 [info] Receive response of 752 from a with [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}]

11:37:10.362 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 753}

11:37:10.362 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 752, key: "1", object: [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}], sender: :a, type: :get_log}

11:37:10.362 [info] Send request {:get, "1"}

11:37:10.363 [info] lb receive get from :client_a (754)

11:37:10.363 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 201, context: %KvStore.Context{vector_clock: %{a: 2482}}}]

11:37:10.363 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 755, observer: :observer}

11:37:10.364 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 201, context: %KvStore.Context{vector_clock: %{a: 2482}}}], type: :get_response, req_id: 753}}

11:37:10.364 [info] Latest entries: [%KvStore.CacheEntry{object: 201, context: %KvStore.Context{vector_clock: %{a: 2482}}}]

11:37:10.364 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 754}

11:37:10.365 [info] Receive response of 753 from a with [%KvStore.CacheEntry{object: 201, context: %KvStore.Context{vector_clock: %{a: 2482}}}]

11:37:10.365 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 753, key: "4", object: [%KvStore.CacheEntry{object: 201, context: %KvStore.Context{vector_clock: %{a: 2482}}}], sender: :a, type: :get_log}

11:37:10.365 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}]

11:37:10.365 [info] Send request {:put, "1", 929, []}

11:37:10.366 [info] lb receive put from :client_b

11:37:10.366 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}], type: :get_response, req_id: 754}}

11:37:10.366 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 756, observer: :observer}

11:37:10.366 [info] Latest entries: [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}]

11:37:10.367 [info] Receive response of 754 from a with [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}]

11:37:10.367 [info] generate requests

11:37:10.367 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 929, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 755}

11:37:10.367 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 754, key: "1", object: [%KvStore.CacheEntry{object: 270, context: %KvStore.Context{vector_clock: %{a: 2472}}}], sender: :a, type: :get_log}

11:37:10.367 [info] Send request {:get, "5"}

11:37:10.368 [info] lb receive get from :client_a (756)

11:37:10.368 [info] New objects are [%KvStore.CacheEntry{object: 929, context: %KvStore.Context{vector_clock: %{a: 2508}}}]

11:37:10.368 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 757, observer: :observer}

11:37:10.368 [warning] :a Timeout for request: 717

11:37:10.368 [warning] :a Timeout for request: 717, but request not found.

11:37:10.369 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 756}

11:37:10.370 [info] Receive response of 755 from a with context: %KvStore.Context{vector_clock: %{a: 2508}}

11:37:10.370 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 703, context: %KvStore.Context{vector_clock: %{a: 2454}}}]

11:37:10.370 [info] generate requests

11:37:10.370 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 755, key: "1", object: 929, sender: :a, type: :put_log}

11:37:10.370 [info] Send request {:get, "5"}

11:37:10.371 [info] lb receive get from :client_b (757)

11:37:10.371 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 703, context: %KvStore.Context{vector_clock: %{a: 2454}}}], type: :get_response, req_id: 756}}

11:37:10.371 [info] Latest entries: [%KvStore.CacheEntry{object: 703, context: %KvStore.Context{vector_clock: %{a: 2454}}}]

11:37:10.371 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 758, observer: :observer}

11:37:10.372 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 756, key: "5", object: [%KvStore.CacheEntry{object: 703, context: %KvStore.Context{vector_clock: %{a: 2454}}}], sender: :a, type: :get_log}

11:37:10.372 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 757}

11:37:10.372 [info] Receive response of 756 from a with [%KvStore.CacheEntry{object: 703, context: %KvStore.Context{vector_clock: %{a: 2454}}}]

11:37:10.372 [info] Send request {:get, "2"}

11:37:10.373 [info] lb receive get from :client_a (758)

11:37:10.373 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 703, context: %KvStore.Context{vector_clock: %{a: 2454}}}]

11:37:10.373 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 759, observer: :observer}

11:37:10.374 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 703, context: %KvStore.Context{vector_clock: %{a: 2454}}}], type: :get_response, req_id: 757}}

11:37:10.374 [info] Latest entries: [%KvStore.CacheEntry{object: 703, context: %KvStore.Context{vector_clock: %{a: 2454}}}]

11:37:10.374 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 758}

11:37:10.375 [info] Receive response of 757 from a with [%KvStore.CacheEntry{object: 703, context: %KvStore.Context{vector_clock: %{a: 2454}}}]

11:37:10.375 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 757, key: "5", object: [%KvStore.CacheEntry{object: 703, context: %KvStore.Context{vector_clock: %{a: 2454}}}], sender: :a, type: :get_log}

11:37:10.375 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 258, context: %KvStore.Context{vector_clock: %{a: 2491}}}]

11:37:10.375 [info] Send request {:put, "1", 414, []}

11:37:10.375 [warning] :a Timeout for request: 720

11:37:10.375 [warning] :a Timeout for request: 720, but request not found.

11:37:10.376 [info] lb receive put from :client_b

11:37:10.376 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 258, context: %KvStore.Context{vector_clock: %{a: 2491}}}], type: :get_response, req_id: 758}}

11:37:10.376 [info] Latest entries: [%KvStore.CacheEntry{object: 258, context: %KvStore.Context{vector_clock: %{a: 2491}}}]

11:37:10.376 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 760, observer: :observer}

11:37:10.377 [info] Receive response of 758 from a with [%KvStore.CacheEntry{object: 258, context: %KvStore.Context{vector_clock: %{a: 2491}}}]

11:37:10.377 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 758, key: "2", object: [%KvStore.CacheEntry{object: 258, context: %KvStore.Context{vector_clock: %{a: 2491}}}], sender: :a, type: :get_log}

11:37:10.377 [info] Send request {:put, "5", 325, []}

11:37:10.377 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 414, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 759}

11:37:10.378 [info] lb receive put from :client_a

11:37:10.378 [info] New objects are [%KvStore.CacheEntry{object: 414, context: %KvStore.Context{vector_clock: %{a: 2522}}}]

11:37:10.378 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 761, observer: :observer}

11:37:10.379 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 325, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 760}

11:37:10.380 [info] Receive response of 759 from a with context: %KvStore.Context{vector_clock: %{a: 2522}}

11:37:10.380 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 759, key: "1", object: 414, sender: :a, type: :put_log}

11:37:10.380 [info] Send request {:get, "4"}

11:37:10.380 [info] New objects are [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 2524}}}]

11:37:10.380 [warning] :a Timeout for request: 722

11:37:10.380 [warning] :a Timeout for request: 722, but request not found.

11:37:10.381 [info] lb receive get from :client_b (761)

11:37:10.381 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 762, observer: :observer}

11:37:10.382 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 760, key: "5", object: 325, sender: :a, type: :put_log}

11:37:10.382 [info] Receive response of 760 from a with context: %KvStore.Context{vector_clock: %{a: 2524}}

11:37:10.382 [info] generate requests

11:37:10.382 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 761}

11:37:10.382 [info] Send request {:put, "3", 925, []}

11:37:10.383 [info] lb receive put from :client_a

11:37:10.383 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 201, context: %KvStore.Context{vector_clock: %{a: 2482}}}]

11:37:10.383 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 763, observer: :observer}

11:37:10.384 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 925, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 762}

11:37:10.384 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 201, context: %KvStore.Context{vector_clock: %{a: 2482}}}], type: :get_response, req_id: 761}}

11:37:10.384 [info] Latest entries: [%KvStore.CacheEntry{object: 201, context: %KvStore.Context{vector_clock: %{a: 2482}}}]

11:37:10.385 [info] New objects are [%KvStore.CacheEntry{object: 925, context: %KvStore.Context{vector_clock: %{a: 2531}}}]

11:37:10.385 [info] Receive response of 761 from a with [%KvStore.CacheEntry{object: 201, context: %KvStore.Context{vector_clock: %{a: 2482}}}]

11:37:10.385 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 761, key: "4", object: [%KvStore.CacheEntry{object: 201, context: %KvStore.Context{vector_clock: %{a: 2482}}}], sender: :a, type: :get_log}

11:37:10.385 [info] generate requests

11:37:10.385 [info] Send request {:get, "2"}

11:37:10.386 [info] lb receive get from :client_b (763)

11:37:10.386 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 764, observer: :observer}

11:37:10.387 [info] Receive response of 762 from a with context: %KvStore.Context{vector_clock: %{a: 2531}}

11:37:10.387 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 762, key: "3", object: 925, sender: :a, type: :put_log}

11:37:10.387 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 763}

11:37:10.387 [info] Send request {:get, "1"}

11:37:10.388 [info] lb receive get from :client_a (764)

11:37:10.388 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 258, context: %KvStore.Context{vector_clock: %{a: 2491}}}]

11:37:10.388 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 765, observer: :observer}

11:37:10.388 [warning] :a Timeout for request: 725

11:37:10.388 [warning] :a Timeout for request: 725, but request not found.

11:37:10.389 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 764}

11:37:10.389 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 258, context: %KvStore.Context{vector_clock: %{a: 2491}}}], type: :get_response, req_id: 763}}

11:37:10.389 [info] Latest entries: [%KvStore.CacheEntry{object: 258, context: %KvStore.Context{vector_clock: %{a: 2491}}}]

11:37:10.390 [info] Receive response of 763 from a with [%KvStore.CacheEntry{object: 258, context: %KvStore.Context{vector_clock: %{a: 2491}}}]

11:37:10.390 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 763, key: "2", object: [%KvStore.CacheEntry{object: 258, context: %KvStore.Context{vector_clock: %{a: 2491}}}], sender: :a, type: :get_log}

11:37:10.390 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 414, context: %KvStore.Context{vector_clock: %{a: 2522}}}]

11:37:10.390 [info] Send request {:get, "5"}

11:37:10.391 [info] lb receive get from :client_b (765)

11:37:10.391 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 414, context: %KvStore.Context{vector_clock: %{a: 2522}}}], type: :get_response, req_id: 764}}

11:37:10.391 [info] Latest entries: [%KvStore.CacheEntry{object: 414, context: %KvStore.Context{vector_clock: %{a: 2522}}}]

11:37:10.391 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 766, observer: :observer}

11:37:10.392 [info] Receive response of 764 from a with [%KvStore.CacheEntry{object: 414, context: %KvStore.Context{vector_clock: %{a: 2522}}}]

11:37:10.392 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 765}

11:37:10.392 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 764, key: "1", object: [%KvStore.CacheEntry{object: 414, context: %KvStore.Context{vector_clock: %{a: 2522}}}], sender: :a, type: :get_log}

11:37:10.392 [info] Send request {:get, "1"}

11:37:10.393 [info] lb receive get from :client_a (766)

11:37:10.393 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 2524}}}]

11:37:10.393 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 767, observer: :observer}

11:37:10.394 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 2524}}}], type: :get_response, req_id: 765}}

11:37:10.394 [info] Latest entries: [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 2524}}}]

11:37:10.394 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 766}

11:37:10.395 [info] Receive response of 765 from a with [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 2524}}}]

11:37:10.395 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 765, key: "5", object: [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 2524}}}], sender: :a, type: :get_log}

11:37:10.395 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 414, context: %KvStore.Context{vector_clock: %{a: 2522}}}]

11:37:10.395 [info] Send request {:put, "2", 898, []}

11:37:10.396 [info] lb receive put from :client_b

11:37:10.396 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 414, context: %KvStore.Context{vector_clock: %{a: 2522}}}], type: :get_response, req_id: 766}}

11:37:10.396 [info] Latest entries: [%KvStore.CacheEntry{object: 414, context: %KvStore.Context{vector_clock: %{a: 2522}}}]

11:37:10.396 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 768, observer: :observer}

11:37:10.397 [info] Receive response of 766 from a with [%KvStore.CacheEntry{object: 414, context: %KvStore.Context{vector_clock: %{a: 2522}}}]

11:37:10.397 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 766, key: "1", object: [%KvStore.CacheEntry{object: 414, context: %KvStore.Context{vector_clock: %{a: 2522}}}], sender: :a, type: :get_log}

11:37:10.397 [info] generate requests

11:37:10.397 [info] Send request {:put, "1", 977, []}

11:37:10.397 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 898, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 767}

11:37:10.398 [info] lb receive put from :client_a

11:37:10.398 [info] New objects are [%KvStore.CacheEntry{object: 898, context: %KvStore.Context{vector_clock: %{a: 2548}}}]

11:37:10.398 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 769, observer: :observer}

11:37:10.398 [warning] :a Timeout for request: 729

11:37:10.398 [warning] :a Timeout for request: 729, but request not found.

11:37:10.399 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 977, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 768}

11:37:10.400 [info] Receive response of 767 from a with context: %KvStore.Context{vector_clock: %{a: 2548}}

11:37:10.400 [info] New objects are [%KvStore.CacheEntry{object: 977, context: %KvStore.Context{vector_clock: %{a: 2551}}}]

11:37:10.400 [info] generate requests

11:37:10.400 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 767, key: "2", object: 898, sender: :a, type: :put_log}

11:37:10.400 [info] Send request {:put, "4", 494, []}

11:37:10.401 [info] lb receive put from :client_b

11:37:10.401 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 770, observer: :observer}

11:37:10.401 [warning] :a Timeout for request: 730

11:37:10.401 [warning] :a Timeout for request: 730, but request not found.

11:37:10.402 [info] Receive response of 768 from a with context: %KvStore.Context{vector_clock: %{a: 2551}}

11:37:10.402 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 768, key: "1", object: 977, sender: :a, type: :put_log}

11:37:10.402 [info] Send request {:get, "5"}

11:37:10.402 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 494, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 769}

11:37:10.403 [info] lb receive get from :client_a (770)

11:37:10.403 [info] New objects are [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 2556}}}]

11:37:10.403 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 771, observer: :observer}

11:37:10.404 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 770}

11:37:10.405 [info] Receive response of 769 from a with context: %KvStore.Context{vector_clock: %{a: 2556}}

11:37:10.405 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 2524}}}]

11:37:10.405 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 769, key: "4", object: 494, sender: :a, type: :put_log}

11:37:10.405 [info] Send request {:get, "4"}

11:37:10.406 [info] lb receive get from :client_b (771)

11:37:10.406 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 2524}}}], type: :get_response, req_id: 770}}

11:37:10.406 [info] Latest entries: [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 2524}}}]

11:37:10.406 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 772, observer: :observer}

11:37:10.407 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 771}

11:37:10.407 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 770, key: "5", object: [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 2524}}}], sender: :a, type: :get_log}

11:37:10.407 [info] Receive response of 770 from a with [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 2524}}}]

11:37:10.407 [info] Send request {:get, "2"}

11:37:10.408 [info] lb receive get from :client_a (772)

11:37:10.408 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 2556}}}]

11:37:10.408 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 773, observer: :observer}

11:37:10.409 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 772}

11:37:10.409 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 2556}}}], type: :get_response, req_id: 771}}

11:37:10.409 [info] Latest entries: [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 2556}}}]

11:37:10.410 [info] Receive response of 771 from a with [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 2556}}}]

11:37:10.410 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 771, key: "4", object: [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 2556}}}], sender: :a, type: :get_log}

11:37:10.410 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 898, context: %KvStore.Context{vector_clock: %{a: 2548}}}]

11:37:10.410 [info] Send request {:get, "5"}

11:37:10.411 [info] lb receive get from :client_b (773)

11:37:10.411 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 898, context: %KvStore.Context{vector_clock: %{a: 2548}}}], type: :get_response, req_id: 772}}

11:37:10.411 [info] Latest entries: [%KvStore.CacheEntry{object: 898, context: %KvStore.Context{vector_clock: %{a: 2548}}}]

11:37:10.411 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 774, observer: :observer}

11:37:10.412 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 773}

11:37:10.412 [info] Receive response of 772 from a with [%KvStore.CacheEntry{object: 898, context: %KvStore.Context{vector_clock: %{a: 2548}}}]

11:37:10.412 [info] generate requests

11:37:10.412 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 772, key: "2", object: [%KvStore.CacheEntry{object: 898, context: %KvStore.Context{vector_clock: %{a: 2548}}}], sender: :a, type: :get_log}

11:37:10.412 [info] Send request {:put, "3", 289, []}

11:37:10.413 [info] lb receive put from :client_a

11:37:10.413 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 2524}}}]

11:37:10.413 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 775, observer: :observer}

11:37:10.414 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 289, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 774}

11:37:10.414 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 2524}}}], type: :get_response, req_id: 773}}

11:37:10.414 [info] Latest entries: [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 2524}}}]

11:37:10.415 [info] New objects are [%KvStore.CacheEntry{object: 289, context: %KvStore.Context{vector_clock: %{a: 2570}}}]

11:37:10.415 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 773, key: "5", object: [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 2524}}}], sender: :a, type: :get_log}

11:37:10.415 [info] Receive response of 773 from a with [%KvStore.CacheEntry{object: 325, context: %KvStore.Context{vector_clock: %{a: 2524}}}]

11:37:10.415 [info] generate requests

11:37:10.415 [info] Send request {:get, "2"}

11:37:10.416 [info] lb receive get from :client_b (775)

11:37:10.416 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 776, observer: :observer}

11:37:10.417 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 774, key: "3", object: 289, sender: :a, type: :put_log}

11:37:10.417 [info] Receive response of 774 from a with context: %KvStore.Context{vector_clock: %{a: 2570}}

11:37:10.417 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 775}

11:37:10.417 [info] Send request {:get, "2"}

11:37:10.418 [info] lb receive get from :client_a (776)

11:37:10.418 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 898, context: %KvStore.Context{vector_clock: %{a: 2548}}}]

11:37:10.418 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 777, observer: :observer}

11:37:10.419 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 776}

11:37:10.419 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 898, context: %KvStore.Context{vector_clock: %{a: 2548}}}], type: :get_response, req_id: 775}}

11:37:10.419 [info] Latest entries: [%KvStore.CacheEntry{object: 898, context: %KvStore.Context{vector_clock: %{a: 2548}}}]

11:37:10.420 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 775, key: "2", object: [%KvStore.CacheEntry{object: 898, context: %KvStore.Context{vector_clock: %{a: 2548}}}], sender: :a, type: :get_log}

11:37:10.420 [info] Receive response of 775 from a with [%KvStore.CacheEntry{object: 898, context: %KvStore.Context{vector_clock: %{a: 2548}}}]

11:37:10.420 [info] Send request {:put, "4", 389, []}

11:37:10.420 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 898, context: %KvStore.Context{vector_clock: %{a: 2548}}}]

11:37:10.420 [warning] :a Timeout for request: 737

11:37:10.420 [warning] :a Timeout for request: 737, but request not found.

11:37:10.421 [info] lb receive put from :client_b

11:37:10.421 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 898, context: %KvStore.Context{vector_clock: %{a: 2548}}}], type: :get_response, req_id: 776}}

11:37:10.421 [info] Latest entries: [%KvStore.CacheEntry{object: 898, context: %KvStore.Context{vector_clock: %{a: 2548}}}]

11:37:10.421 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 778, observer: :observer}

11:37:10.422 [info] Receive response of 776 from a with [%KvStore.CacheEntry{object: 898, context: %KvStore.Context{vector_clock: %{a: 2548}}}]

11:37:10.422 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 776, key: "2", object: [%KvStore.CacheEntry{object: 898, context: %KvStore.Context{vector_clock: %{a: 2548}}}], sender: :a, type: :get_log}

11:37:10.422 [info] Send request {:get, "1"}

11:37:10.422 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 389, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 777}

11:37:10.422 [warning] :a Timeout for request: 738

11:37:10.422 [warning] :a Timeout for request: 738, but request not found.

11:37:10.423 [info] New objects are [%KvStore.CacheEntry{object: 389, context: %KvStore.Context{vector_clock: %{a: 2581}}}]

11:37:10.423 [info] lb receive get from :client_a (778)

11:37:10.423 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 779, observer: :observer}

11:37:10.424 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 778}

11:37:10.425 [info] Receive response of 777 from a with context: %KvStore.Context{vector_clock: %{a: 2581}}

11:37:10.425 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 977, context: %KvStore.Context{vector_clock: %{a: 2551}}}]

11:37:10.425 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 777, key: "4", object: 389, sender: :a, type: :put_log}

11:37:10.425 [info] Send request {:get, "4"}

11:37:10.426 [info] lb receive get from :client_b (779)

11:37:10.426 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 977, context: %KvStore.Context{vector_clock: %{a: 2551}}}], type: :get_response, req_id: 778}}

11:37:10.426 [info] Latest entries: [%KvStore.CacheEntry{object: 977, context: %KvStore.Context{vector_clock: %{a: 2551}}}]

11:37:10.426 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 780, observer: :observer}

11:37:10.427 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 779}

11:37:10.427 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 778, key: "1", object: [%KvStore.CacheEntry{object: 977, context: %KvStore.Context{vector_clock: %{a: 2551}}}], sender: :a, type: :get_log}

11:37:10.427 [info] Receive response of 778 from a with [%KvStore.CacheEntry{object: 977, context: %KvStore.Context{vector_clock: %{a: 2551}}}]

11:37:10.427 [info] generate requests

11:37:10.427 [info] Send request {:get, "1"}

11:37:10.427 [warning] :a Timeout for request: 740

11:37:10.427 [warning] :a Timeout for request: 740, but request not found.

11:37:10.428 [info] lb receive get from :client_a (780)

11:37:10.428 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 389, context: %KvStore.Context{vector_clock: %{a: 2581}}}]

11:37:10.428 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 781, observer: :observer}

11:37:10.429 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 389, context: %KvStore.Context{vector_clock: %{a: 2581}}}], type: :get_response, req_id: 779}}

11:37:10.429 [info] Latest entries: [%KvStore.CacheEntry{object: 389, context: %KvStore.Context{vector_clock: %{a: 2581}}}]

11:37:10.429 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 780}

11:37:10.430 [info] Receive response of 779 from a with [%KvStore.CacheEntry{object: 389, context: %KvStore.Context{vector_clock: %{a: 2581}}}]

11:37:10.430 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 779, key: "4", object: [%KvStore.CacheEntry{object: 389, context: %KvStore.Context{vector_clock: %{a: 2581}}}], sender: :a, type: :get_log}

11:37:10.430 [info] generate requests

11:37:10.430 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 977, context: %KvStore.Context{vector_clock: %{a: 2551}}}]

11:37:10.430 [info] Send request {:put, "5", 102, []}

11:37:10.431 [info] lb receive put from :client_b

11:37:10.431 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 977, context: %KvStore.Context{vector_clock: %{a: 2551}}}], type: :get_response, req_id: 780}}

11:37:10.431 [info] Latest entries: [%KvStore.CacheEntry{object: 977, context: %KvStore.Context{vector_clock: %{a: 2551}}}]

11:37:10.431 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 782, observer: :observer}

11:37:10.432 [info] Receive response of 780 from a with [%KvStore.CacheEntry{object: 977, context: %KvStore.Context{vector_clock: %{a: 2551}}}]

11:37:10.432 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 780, key: "1", object: [%KvStore.CacheEntry{object: 977, context: %KvStore.Context{vector_clock: %{a: 2551}}}], sender: :a, type: :get_log}

11:37:10.432 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 102, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 781}

11:37:10.432 [info] Send request {:get, "2"}

11:37:10.433 [info] lb receive get from :client_a (782)

11:37:10.433 [info] New objects are [%KvStore.CacheEntry{object: 102, context: %KvStore.Context{vector_clock: %{a: 2595}}}]

11:37:10.433 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 783, observer: :observer}

11:37:10.434 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 782}

11:37:10.435 [info] Receive response of 781 from a with context: %KvStore.Context{vector_clock: %{a: 2595}}

11:37:10.435 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 781, key: "5", object: 102, sender: :a, type: :put_log}

11:37:11.299 [info] Receive response of 1124 from a with [%KvStore.CacheEntry{object: 981, context: %KvStore.Context{vector_clock: %{a: 3717}}}]

11:37:11.299 [info] New objects are [%KvStore.CacheEntry{object: 296, context: %KvStore.Context{vector_clock: %{a: 3742}}}]

11:37:11.299 [info] Send request {:get, "2"}

11:37:11.299 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1124, key: "2", object: [%KvStore.CacheEntry{object: 981, context: %KvStore.Context{vector_clock: %{a: 3717}}}], sender: :a, type: :get_log}

11:37:11.300 [info] lb receive get from :client_a (1126)

11:37:11.300 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1127, observer: :observer}

11:37:11.301 [info] Receive response of 1125 from a with context: %KvStore.Context{vector_clock: %{a: 3742}}

11:37:11.301 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1125, key: "5", object: 296, sender: :a, type: :put_log}

11:37:11.301 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 1126}

11:37:11.301 [info] Send request {:get, "4"}

11:37:11.301 [warning] :a Timeout for request: 1087

11:37:11.301 [warning] :a Timeout for request: 1087, but request not found.

11:37:11.302 [info] lb receive get from :client_b (1127)

11:37:11.302 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 981, context: %KvStore.Context{vector_clock: %{a: 3717}}}]

11:37:11.302 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1128, observer: :observer}

11:37:11.303 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 981, context: %KvStore.Context{vector_clock: %{a: 3717}}}], type: :get_response, req_id: 1126}}

11:37:11.304 [info] Latest entries: [%KvStore.CacheEntry{object: 981, context: %KvStore.Context{vector_clock: %{a: 3717}}}]

11:37:11.304 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 1127}

11:37:11.304 [info] Receive response of 1126 from a with [%KvStore.CacheEntry{object: 981, context: %KvStore.Context{vector_clock: %{a: 3717}}}]

11:37:11.304 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1126, key: "2", object: [%KvStore.CacheEntry{object: 981, context: %KvStore.Context{vector_clock: %{a: 3717}}}], sender: :a, type: :get_log}

11:37:11.304 [info] generate requests

11:37:11.304 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 102, context: %KvStore.Context{vector_clock: %{a: 3590}}}]

11:37:11.304 [info] Send request {:get, "3"}

11:37:11.305 [info] lb receive get from :client_a (1128)

11:37:11.305 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 102, context: %KvStore.Context{vector_clock: %{a: 3590}}}], type: :get_response, req_id: 1127}}

11:37:11.305 [info] Latest entries: [%KvStore.CacheEntry{object: 102, context: %KvStore.Context{vector_clock: %{a: 3590}}}]

11:37:11.305 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1129, observer: :observer}

11:37:11.306 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 1128}

11:37:11.306 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1127, key: "4", object: [%KvStore.CacheEntry{object: 102, context: %KvStore.Context{vector_clock: %{a: 3590}}}], sender: :a, type: :get_log}

11:37:11.306 [info] Receive response of 1127 from a with [%KvStore.CacheEntry{object: 102, context: %KvStore.Context{vector_clock: %{a: 3590}}}]

11:37:11.306 [info] generate requests

11:37:11.306 [info] Send request {:put, "4", 447, []}

11:37:11.307 [info] lb receive put from :client_b

11:37:11.307 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 3690}}}]

11:37:11.307 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1130, observer: :observer}

11:37:11.308 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 447, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1129}

11:37:11.308 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 3690}}}], type: :get_response, req_id: 1128}}

11:37:11.308 [info] Latest entries: [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 3690}}}]

11:37:11.308 [warning] :a Timeout for request: 1090

11:37:11.308 [warning] :a Timeout for request: 1090, but request not found.

11:37:11.309 [info] New objects are [%KvStore.CacheEntry{object: 447, context: %KvStore.Context{vector_clock: %{a: 3756}}}]

11:37:11.309 [info] Receive response of 1128 from a with [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 3690}}}]

11:37:11.309 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1128, key: "3", object: [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 3690}}}], sender: :a, type: :get_log}

11:37:11.309 [info] Send request {:put, "4", 571, []}

11:37:11.310 [info] lb receive put from :client_a

11:37:11.310 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1131, observer: :observer}

11:37:11.311 [info] Receive response of 1129 from a with context: %KvStore.Context{vector_clock: %{a: 3756}}

11:37:11.311 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1129, key: "4", object: 447, sender: :a, type: :put_log}

11:37:11.311 [info] Send request {:get, "2"}

11:37:11.311 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 571, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1130}

11:37:11.312 [info] lb receive get from :client_b (1131)

11:37:11.312 [info] New objects are [%KvStore.CacheEntry{object: 571, context: %KvStore.Context{vector_clock: %{a: 3761}}}]

11:37:11.312 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1132, observer: :observer}

11:37:11.313 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 1131}

11:37:11.314 [info] Receive response of 1130 from a with context: %KvStore.Context{vector_clock: %{a: 3761}}

11:37:11.314 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 981, context: %KvStore.Context{vector_clock: %{a: 3717}}}]

11:37:11.314 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1130, key: "4", object: 571, sender: :a, type: :put_log}

11:37:11.314 [info] Send request {:get, "5"}

11:37:11.315 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 981, context: %KvStore.Context{vector_clock: %{a: 3717}}}], type: :get_response, req_id: 1131}}

11:37:11.315 [info] Latest entries: [%KvStore.CacheEntry{object: 981, context: %KvStore.Context{vector_clock: %{a: 3717}}}]

11:37:11.315 [info] lb receive get from :client_a (1132)

11:37:11.315 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1133, observer: :observer}

11:37:11.316 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 1132}

11:37:11.316 [info] Receive response of 1131 from a with [%KvStore.CacheEntry{object: 981, context: %KvStore.Context{vector_clock: %{a: 3717}}}]

11:37:11.316 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1131, key: "2", object: [%KvStore.CacheEntry{object: 981, context: %KvStore.Context{vector_clock: %{a: 3717}}}], sender: :a, type: :get_log}

11:37:11.316 [info] Send request {:get, "3"}

11:37:11.317 [info] lb receive get from :client_b (1133)

11:37:11.317 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 296, context: %KvStore.Context{vector_clock: %{a: 3742}}}]

11:37:11.317 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1134, observer: :observer}

11:37:11.318 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 1133}

11:37:11.318 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 296, context: %KvStore.Context{vector_clock: %{a: 3742}}}], type: :get_response, req_id: 1132}}

11:37:11.318 [info] Latest entries: [%KvStore.CacheEntry{object: 296, context: %KvStore.Context{vector_clock: %{a: 3742}}}]

11:37:11.319 [warning] :a Timeout for request: 1094

11:37:11.319 [warning] :a Timeout for request: 1094, but request not found.

11:37:11.319 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1132, key: "5", object: [%KvStore.CacheEntry{object: 296, context: %KvStore.Context{vector_clock: %{a: 3742}}}], sender: :a, type: :get_log}

11:37:11.319 [info] Receive response of 1132 from a with [%KvStore.CacheEntry{object: 296, context: %KvStore.Context{vector_clock: %{a: 3742}}}]

11:37:11.319 [info] generate requests

11:37:11.319 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 3690}}}]

11:37:11.319 [info] Send request {:get, "5"}

11:37:11.320 [info] lb receive get from :client_a (1134)

11:37:11.320 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 3690}}}], type: :get_response, req_id: 1133}}

11:37:11.320 [info] Latest entries: [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 3690}}}]

11:37:11.320 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1135, observer: :observer}

11:37:11.321 [info] Receive response of 1133 from a with [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 3690}}}]

11:37:11.321 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 1134}

11:37:11.321 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1133, key: "3", object: [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 3690}}}], sender: :a, type: :get_log}

11:37:11.321 [info] generate requests

11:37:11.321 [info] Send request {:put, "2", 355, []}

11:37:11.321 [warning] :a Timeout for request: 1095

11:37:11.321 [warning] :a Timeout for request: 1095, but request not found.

11:37:11.322 [info] lb receive put from :client_b

11:37:11.322 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 296, context: %KvStore.Context{vector_clock: %{a: 3742}}}]

11:37:11.322 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1136, observer: :observer}

11:37:11.323 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 296, context: %KvStore.Context{vector_clock: %{a: 3742}}}], type: :get_response, req_id: 1134}}

11:37:11.323 [info] Latest entries: [%KvStore.CacheEntry{object: 296, context: %KvStore.Context{vector_clock: %{a: 3742}}}]

11:37:11.323 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 355, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1135}

11:37:11.324 [info] Receive response of 1134 from a with [%KvStore.CacheEntry{object: 296, context: %KvStore.Context{vector_clock: %{a: 3742}}}]

11:37:11.324 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1134, key: "5", object: [%KvStore.CacheEntry{object: 296, context: %KvStore.Context{vector_clock: %{a: 3742}}}], sender: :a, type: :get_log}

11:37:11.324 [info] New objects are [%KvStore.CacheEntry{object: 355, context: %KvStore.Context{vector_clock: %{a: 3778}}}]

11:37:11.324 [info] Send request {:put, "5", 101, []}

11:37:11.325 [info] lb receive put from :client_a

11:37:11.325 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1137, observer: :observer}

11:37:11.326 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1135, key: "2", object: 355, sender: :a, type: :put_log}

11:37:11.326 [info] Receive response of 1135 from a with context: %KvStore.Context{vector_clock: %{a: 3778}}

11:37:11.326 [info] Send request {:get, "2"}

11:37:11.326 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 101, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1136}

11:37:11.327 [info] lb receive get from :client_b (1137)

11:37:11.327 [info] New objects are [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}]

11:37:11.327 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1138, observer: :observer}

11:37:11.328 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 1137}

11:37:11.329 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1136, key: "5", object: 101, sender: :a, type: :put_log}

11:37:11.329 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 355, context: %KvStore.Context{vector_clock: %{a: 3778}}}]

11:37:11.329 [info] Receive response of 1136 from a with context: %KvStore.Context{vector_clock: %{a: 3781}}

11:37:11.329 [info] Send request {:get, "1"}

11:37:11.330 [info] lb receive get from :client_a (1138)

11:37:11.330 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 355, context: %KvStore.Context{vector_clock: %{a: 3778}}}], type: :get_response, req_id: 1137}}

11:37:11.331 [info] Latest entries: [%KvStore.CacheEntry{object: 355, context: %KvStore.Context{vector_clock: %{a: 3778}}}]

11:37:11.331 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1139, observer: :observer}

11:37:11.331 [info] Receive response of 1137 from a with [%KvStore.CacheEntry{object: 355, context: %KvStore.Context{vector_clock: %{a: 3778}}}]

11:37:11.331 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1137, key: "2", object: [%KvStore.CacheEntry{object: 355, context: %KvStore.Context{vector_clock: %{a: 3778}}}], sender: :a, type: :get_log}

11:37:11.331 [info] Send request {:get, "4"}

11:37:11.331 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 1138}

11:37:11.332 [info] lb receive get from :client_b (1139)

11:37:11.332 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 809, context: %KvStore.Context{vector_clock: %{a: 3734}}}]

11:37:11.332 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1140, observer: :observer}

11:37:11.333 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 1139}

11:37:11.333 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 809, context: %KvStore.Context{vector_clock: %{a: 3734}}}], type: :get_response, req_id: 1138}}

11:37:11.333 [info] Latest entries: [%KvStore.CacheEntry{object: 809, context: %KvStore.Context{vector_clock: %{a: 3734}}}]

11:37:11.334 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1138, key: "1", object: [%KvStore.CacheEntry{object: 809, context: %KvStore.Context{vector_clock: %{a: 3734}}}], sender: :a, type: :get_log}

11:37:11.334 [info] Receive response of 1138 from a with [%KvStore.CacheEntry{object: 809, context: %KvStore.Context{vector_clock: %{a: 3734}}}]

11:37:11.334 [info] generate requests

11:37:11.334 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 571, context: %KvStore.Context{vector_clock: %{a: 3761}}}]

11:37:11.334 [info] Send request {:get, "3"}

11:37:11.335 [info] lb receive get from :client_a (1140)

11:37:11.335 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 571, context: %KvStore.Context{vector_clock: %{a: 3761}}}], type: :get_response, req_id: 1139}}

11:37:11.335 [info] Latest entries: [%KvStore.CacheEntry{object: 571, context: %KvStore.Context{vector_clock: %{a: 3761}}}]

11:37:11.335 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1141, observer: :observer}

11:37:11.336 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 1140}

11:37:11.336 [info] Receive response of 1139 from a with [%KvStore.CacheEntry{object: 571, context: %KvStore.Context{vector_clock: %{a: 3761}}}]

11:37:11.336 [info] generate requests

11:37:11.336 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1139, key: "4", object: [%KvStore.CacheEntry{object: 571, context: %KvStore.Context{vector_clock: %{a: 3761}}}], sender: :a, type: :get_log}

11:37:11.336 [info] Send request {:get, "4"}

11:37:11.337 [info] lb receive get from :client_b (1141)

11:37:11.337 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 3690}}}]

11:37:11.337 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1142, observer: :observer}

11:37:11.337 [warning] :a Timeout for request: 1101

11:37:11.337 [warning] :a Timeout for request: 1101, but request not found.

11:37:11.338 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 3690}}}], type: :get_response, req_id: 1140}}

11:37:11.338 [info] Latest entries: [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 3690}}}]

11:37:11.338 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 1141}

11:37:11.339 [info] Receive response of 1140 from a with [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 3690}}}]

11:37:11.339 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1140, key: "3", object: [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 3690}}}], sender: :a, type: :get_log}

11:37:11.339 [info] Send request {:get, "4"}

11:37:11.339 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 571, context: %KvStore.Context{vector_clock: %{a: 3761}}}]

11:37:11.339 [warning] :a Timeout for request: 1102

11:37:11.339 [warning] :a Timeout for request: 1102, but request not found.

11:37:11.340 [info] lb receive get from :client_a (1142)

11:37:11.340 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 571, context: %KvStore.Context{vector_clock: %{a: 3761}}}], type: :get_response, req_id: 1141}}

11:37:11.340 [info] Latest entries: [%KvStore.CacheEntry{object: 571, context: %KvStore.Context{vector_clock: %{a: 3761}}}]

11:37:11.340 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1143, observer: :observer}

11:37:11.341 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 1142}

11:37:11.342 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1141, key: "4", object: [%KvStore.CacheEntry{object: 571, context: %KvStore.Context{vector_clock: %{a: 3761}}}], sender: :a, type: :get_log}

11:37:11.342 [info] Receive response of 1141 from a with [%KvStore.CacheEntry{object: 571, context: %KvStore.Context{vector_clock: %{a: 3761}}}]

11:37:11.342 [info] Send request {:put, "3", 773, []}

11:37:11.344 [info] lb receive put from :client_b

11:37:11.344 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 571, context: %KvStore.Context{vector_clock: %{a: 3761}}}]

11:37:11.344 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1144, observer: :observer}

11:37:11.345 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 571, context: %KvStore.Context{vector_clock: %{a: 3761}}}], type: :get_response, req_id: 1142}}

11:37:11.345 [info] Latest entries: [%KvStore.CacheEntry{object: 571, context: %KvStore.Context{vector_clock: %{a: 3761}}}]

11:37:11.345 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 773, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1143}

11:37:11.346 [info] Receive response of 1142 from a with [%KvStore.CacheEntry{object: 571, context: %KvStore.Context{vector_clock: %{a: 3761}}}]

11:37:11.346 [info] New objects are [%KvStore.CacheEntry{object: 773, context: %KvStore.Context{vector_clock: %{a: 3804}}}]

11:37:11.346 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1142, key: "4", object: [%KvStore.CacheEntry{object: 571, context: %KvStore.Context{vector_clock: %{a: 3761}}}], sender: :a, type: :get_log}

11:37:11.346 [info] Send request {:put, "4", 232, []}

11:37:11.347 [info] lb receive put from :client_a

11:37:11.347 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1145, observer: :observer}

11:37:11.347 [warning] :a Timeout for request: 1105

11:37:11.347 [warning] :a Timeout for request: 1105, but request not found.

11:37:11.348 [info] Receive response of 1143 from a with context: %KvStore.Context{vector_clock: %{a: 3804}}

11:37:11.348 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1143, key: "3", object: 773, sender: :a, type: :put_log}

11:37:11.348 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 232, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1144}

11:37:11.348 [info] Send request {:get, "3"}

11:37:11.349 [info] lb receive get from :client_b (1145)

11:37:11.349 [info] New objects are [%KvStore.CacheEntry{object: 232, context: %KvStore.Context{vector_clock: %{a: 3808}}}]

11:37:11.349 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1146, observer: :observer}

11:37:11.350 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 1145}

11:37:11.351 [info] Receive response of 1144 from a with context: %KvStore.Context{vector_clock: %{a: 3808}}

11:37:11.351 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 773, context: %KvStore.Context{vector_clock: %{a: 3804}}}]

11:37:11.351 [info] generate requests

11:37:11.351 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1144, key: "4", object: 232, sender: :a, type: :put_log}

11:37:11.351 [info] Send request {:get, "1"}

11:37:11.352 [info] lb receive get from :client_a (1146)

11:37:11.352 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 773, context: %KvStore.Context{vector_clock: %{a: 3804}}}], type: :get_response, req_id: 1145}}

11:37:11.352 [info] Latest entries: [%KvStore.CacheEntry{object: 773, context: %KvStore.Context{vector_clock: %{a: 3804}}}]

11:37:11.352 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1147, observer: :observer}

11:37:11.353 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 1146}

11:37:11.353 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1145, key: "3", object: [%KvStore.CacheEntry{object: 773, context: %KvStore.Context{vector_clock: %{a: 3804}}}], sender: :a, type: :get_log}

11:37:11.353 [info] Receive response of 1145 from a with [%KvStore.CacheEntry{object: 773, context: %KvStore.Context{vector_clock: %{a: 3804}}}]

11:37:11.353 [info] generate requests

11:37:11.353 [info] Send request {:get, "5"}

11:37:11.354 [info] lb receive get from :client_b (1147)

11:37:11.354 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 809, context: %KvStore.Context{vector_clock: %{a: 3734}}}]

11:37:11.354 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1148, observer: :observer}

11:37:11.355 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 1147}

11:37:11.355 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 809, context: %KvStore.Context{vector_clock: %{a: 3734}}}], type: :get_response, req_id: 1146}}

11:37:11.355 [info] Latest entries: [%KvStore.CacheEntry{object: 809, context: %KvStore.Context{vector_clock: %{a: 3734}}}]

11:37:11.356 [info] Receive response of 1146 from a with [%KvStore.CacheEntry{object: 809, context: %KvStore.Context{vector_clock: %{a: 3734}}}]

11:37:11.356 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1146, key: "1", object: [%KvStore.CacheEntry{object: 809, context: %KvStore.Context{vector_clock: %{a: 3734}}}], sender: :a, type: :get_log}

11:37:11.356 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}]

11:37:11.356 [info] Send request {:get, "5"}

11:37:11.357 [info] lb receive get from :client_a (1148)

11:37:11.357 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}], type: :get_response, req_id: 1147}}

11:37:11.357 [info] Latest entries: [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}]

11:37:11.357 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1149, observer: :observer}

11:37:11.358 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 1148}

11:37:11.358 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1147, key: "5", object: [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}], sender: :a, type: :get_log}

11:37:11.358 [info] Receive response of 1147 from a with [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}]

11:37:11.358 [info] Send request {:put, "2", 328, []}

11:37:11.359 [info] lb receive put from :client_b

11:37:11.359 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}]

11:37:11.359 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1150, observer: :observer}

11:37:11.359 [warning] :a Timeout for request: 1110

11:37:11.359 [warning] :a Timeout for request: 1110, but request not found.

11:37:11.360 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 328, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1149}

11:37:11.360 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}], type: :get_response, req_id: 1148}}

11:37:11.360 [info] Latest entries: [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}]

11:37:11.361 [info] New objects are [%KvStore.CacheEntry{object: 328, context: %KvStore.Context{vector_clock: %{a: 3823}}}]

11:37:11.361 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1148, key: "5", object: [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}], sender: :a, type: :get_log}

11:37:11.361 [info] Receive response of 1148 from a with [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}]

11:37:11.361 [info] Send request {:put, "4", 299, []}

11:37:11.362 [info] lb receive put from :client_a

11:37:11.362 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1151, observer: :observer}

11:37:11.363 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1149, key: "2", object: 328, sender: :a, type: :put_log}

11:37:11.363 [info] Receive response of 1149 from a with context: %KvStore.Context{vector_clock: %{a: 3823}}

11:37:11.363 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 299, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1150}

11:37:11.363 [info] Send request {:get, "5"}

11:37:11.364 [info] New objects are [%KvStore.CacheEntry{object: 299, context: %KvStore.Context{vector_clock: %{a: 3827}}}]

11:37:11.364 [info] lb receive get from :client_b (1151)

11:37:11.364 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1152, observer: :observer}

11:37:11.365 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 1151}

11:37:11.366 [info] Receive response of 1150 from a with context: %KvStore.Context{vector_clock: %{a: 3827}}

11:37:11.366 [info] generate requests

11:37:11.366 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1150, key: "4", object: 299, sender: :a, type: :put_log}

11:37:11.366 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}]

11:37:11.366 [info] Send request {:get, "2"}

11:37:11.367 [info] lb receive get from :client_a (1152)

11:37:11.367 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}], type: :get_response, req_id: 1151}}

11:37:11.367 [info] Latest entries: [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}]

11:37:11.367 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1153, observer: :observer}

11:37:11.369 [info] Receive response of 1151 from a with [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}]

11:37:11.369 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 1152}

11:37:11.369 [info] generate requests

11:37:11.369 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1151, key: "5", object: [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}], sender: :a, type: :get_log}

11:37:11.369 [info] Send request {:get, "3"}

11:37:11.370 [info] lb receive get from :client_b (1153)

11:37:11.370 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 328, context: %KvStore.Context{vector_clock: %{a: 3823}}}]

11:37:11.370 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1154, observer: :observer}

11:37:11.371 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 1153}

11:37:11.371 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 328, context: %KvStore.Context{vector_clock: %{a: 3823}}}], type: :get_response, req_id: 1152}}

11:37:11.371 [info] Latest entries: [%KvStore.CacheEntry{object: 328, context: %KvStore.Context{vector_clock: %{a: 3823}}}]

11:37:11.372 [info] Receive response of 1152 from a with [%KvStore.CacheEntry{object: 328, context: %KvStore.Context{vector_clock: %{a: 3823}}}]

11:37:11.372 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1152, key: "2", object: [%KvStore.CacheEntry{object: 328, context: %KvStore.Context{vector_clock: %{a: 3823}}}], sender: :a, type: :get_log}

11:37:11.372 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 773, context: %KvStore.Context{vector_clock: %{a: 3804}}}]

11:37:11.372 [info] Send request {:put, "2", 632, []}

11:37:11.372 [warning] :a Timeout for request: 1115

11:37:11.372 [warning] :a Timeout for request: 1115, but request not found.

11:37:11.373 [info] lb receive put from :client_a

11:37:11.373 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 773, context: %KvStore.Context{vector_clock: %{a: 3804}}}], type: :get_response, req_id: 1153}}

11:37:11.373 [info] Latest entries: [%KvStore.CacheEntry{object: 773, context: %KvStore.Context{vector_clock: %{a: 3804}}}]

11:37:11.373 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1155, observer: :observer}

11:37:11.374 [info] Receive response of 1153 from a with [%KvStore.CacheEntry{object: 773, context: %KvStore.Context{vector_clock: %{a: 3804}}}]

11:37:11.374 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1153, key: "3", object: [%KvStore.CacheEntry{object: 773, context: %KvStore.Context{vector_clock: %{a: 3804}}}], sender: :a, type: :get_log}

11:37:11.374 [info] Send request {:put, "1", 751, []}

11:37:11.374 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 632, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1154}

11:37:11.374 [warning] :a Timeout for request: 1116

11:37:11.374 [warning] :a Timeout for request: 1116, but request not found.

11:37:11.375 [info] lb receive put from :client_b

11:37:11.375 [info] New objects are [%KvStore.CacheEntry{object: 632, context: %KvStore.Context{vector_clock: %{a: 3840}}}]

11:37:11.375 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1156, observer: :observer}

11:37:11.376 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 751, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1155}

11:37:11.377 [info] Receive response of 1154 from a with context: %KvStore.Context{vector_clock: %{a: 3840}}

11:37:11.377 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1154, key: "2", object: 632, sender: :a, type: :put_log}

11:37:11.377 [info] New objects are [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 3843}}}]

11:37:11.377 [info] Send request {:get, "5"}

11:37:11.378 [info] lb receive get from :client_a (1156)

11:37:11.378 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1157, observer: :observer}

11:37:11.379 [info] Receive response of 1155 from a with context: %KvStore.Context{vector_clock: %{a: 3843}}

11:37:11.379 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1155, key: "1", object: 751, sender: :a, type: :put_log}

11:37:11.379 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 1156}

11:37:11.379 [info] Send request {:get, "4"}

11:37:11.379 [warning] :a Timeout for request: 1118

11:37:11.379 [warning] :a Timeout for request: 1118, but request not found.

11:37:11.380 [info] lb receive get from :client_b (1157)

11:37:11.380 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}]

11:37:11.380 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1158, observer: :observer}

11:37:11.381 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 1157}

11:37:11.381 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}], type: :get_response, req_id: 1156}}

11:37:11.381 [info] Latest entries: [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}]

11:37:11.382 [info] Receive response of 1156 from a with [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}]

11:37:11.382 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1156, key: "5", object: [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}], sender: :a, type: :get_log}

11:37:11.382 [info] generate requests

11:37:11.382 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 299, context: %KvStore.Context{vector_clock: %{a: 3827}}}]

11:37:11.382 [info] Send request {:get, "3"}

11:37:11.383 [info] lb receive get from :client_a (1158)

11:37:11.383 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 299, context: %KvStore.Context{vector_clock: %{a: 3827}}}], type: :get_response, req_id: 1157}}

11:37:11.383 [info] Latest entries: [%KvStore.CacheEntry{object: 299, context: %KvStore.Context{vector_clock: %{a: 3827}}}]

11:37:11.383 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1159, observer: :observer}

11:37:11.384 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 1158}

11:37:11.384 [info] Receive response of 1157 from a with [%KvStore.CacheEntry{object: 299, context: %KvStore.Context{vector_clock: %{a: 3827}}}]

11:37:11.384 [info] generate requests

11:37:11.384 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1157, key: "4", object: [%KvStore.CacheEntry{object: 299, context: %KvStore.Context{vector_clock: %{a: 3827}}}], sender: :a, type: :get_log}

11:37:11.384 [info] Send request {:get, "5"}

11:37:11.385 [info] lb receive get from :client_b (1159)

11:37:11.385 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 773, context: %KvStore.Context{vector_clock: %{a: 3804}}}]

11:37:11.385 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1160, observer: :observer}

11:37:11.386 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 1159}

11:37:11.386 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 773, context: %KvStore.Context{vector_clock: %{a: 3804}}}], type: :get_response, req_id: 1158}}

11:37:11.386 [info] Latest entries: [%KvStore.CacheEntry{object: 773, context: %KvStore.Context{vector_clock: %{a: 3804}}}]

11:37:11.387 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1158, key: "3", object: [%KvStore.CacheEntry{object: 773, context: %KvStore.Context{vector_clock: %{a: 3804}}}], sender: :a, type: :get_log}

11:37:11.387 [info] Receive response of 1158 from a with [%KvStore.CacheEntry{object: 773, context: %KvStore.Context{vector_clock: %{a: 3804}}}]

11:37:11.387 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}]

11:37:11.387 [info] Send request {:put, "5", 154, []}

11:37:11.387 [warning] :a Timeout for request: 1121

11:37:11.387 [warning] :a Timeout for request: 1121, but request not found.

11:37:11.388 [info] lb receive put from :client_a

11:37:11.388 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}], type: :get_response, req_id: 1159}}

11:37:11.388 [info] Latest entries: [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}]

11:37:11.388 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1161, observer: :observer}

11:37:11.389 [info] Receive response of 1159 from a with [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}]

11:37:11.389 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1159, key: "5", object: [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 3781}}}], sender: :a, type: :get_log}

11:37:11.389 [info] Send request {:put, "5", 386, []}

11:37:11.389 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 154, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1160}

11:37:11.390 [info] lb receive put from :client_b

11:37:11.390 [info] New objects are [%KvStore.CacheEntry{object: 154, context: %KvStore.Context{vector_clock: %{a: 3861}}}]

11:37:11.390 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1162, observer: :observer}

11:37:11.391 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 386, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1161}

11:37:11.392 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1160, key: "5", object: 154, sender: :a, type: :put_log}

11:37:11.392 [info] Receive response of 1160 from a with context: %KvStore.Context{vector_clock: %{a: 3861}}

11:37:11.392 [info] New objects are [%KvStore.CacheEntry{object: 386, context: %KvStore.Context{vector_clock: %{a: 3863}}}]

11:37:11.392 [info] Send request {:get, "1"}

11:37:11.392 [warning] :a Timeout for request: 1123

11:37:11.392 [warning] :a Timeout for request: 1123, but request not found.

11:37:11.393 [info] lb receive get from :client_a (1162)

11:37:11.393 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1163, observer: :observer}

11:37:11.394 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 1162}

11:37:11.394 [info] Receive response of 1161 from a with context: %KvStore.Context{vector_clock: %{a: 3863}}

11:37:11.394 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1161, key: "5", object: 386, sender: :a, type: :put_log}

11:37:11.394 [info] Send request {:get, "2"}

11:37:11.395 [info] lb receive get from :client_b (1163)

11:37:11.395 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 3843}}}]

11:37:11.395 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1164, observer: :observer}

11:37:11.397 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 1163}

11:37:11.398 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 3843}}}], type: :get_response, req_id: 1162}}

11:37:11.398 [info] Latest entries: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 3843}}}]

11:37:11.398 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 632, context: %KvStore.Context{vector_clock: %{a: 3840}}}]

11:37:11.399 [info] Receive response of 1162 from a with [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 3843}}}]

11:37:11.399 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1162, key: "1", object: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 3843}}}], sender: :a, type: :get_log}

11:37:11.399 [info] generate requests

11:37:11.399 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 632, context: %KvStore.Context{vector_clock: %{a: 3840}}}], type: :get_response, req_id: 1163}}

11:37:11.399 [info] Latest entries: [%KvStore.CacheEntry{object: 632, context: %KvStore.Context{vector_clock: %{a: 3840}}}]

11:37:11.399 [info] Send request {:get, "5"}

11:37:11.399 [warning] :a Timeout for request: 1126

11:37:11.399 [warning] :a Timeout for request: 1126, but request not found.

11:37:11.400 [info] lb receive get from :client_a (1164)

11:37:11.400 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1163, key: "2", object: [%KvStore.CacheEntry{object: 632, context: %KvStore.Context{vector_clock: %{a: 3840}}}], sender: :a, type: :get_log}

11:37:11.400 [info] Receive response of 1163 from a with [%KvStore.CacheEntry{object: 632, context: %KvStore.Context{vector_clock: %{a: 3840}}}]

11:37:11.400 [info] generate requests

11:37:11.400 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1165, observer: :observer}

11:37:11.400 [info] Send request {:put, "5", 124, []}

11:37:11.401 [info] lb receive put from :client_b

11:37:11.401 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 1164}

11:37:11.401 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1166, observer: :observer}

11:37:11.403 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 124, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1165}

11:37:11.403 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 386, context: %KvStore.Context{vector_clock: %{a: 3863}}}]

11:37:11.405 [info] New objects are [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}]

11:37:11.406 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 386, context: %KvStore.Context{vector_clock: %{a: 3863}}}], type: :get_response, req_id: 1164}}

11:37:11.406 [info] Latest entries: [%KvStore.CacheEntry{object: 386, context: %KvStore.Context{vector_clock: %{a: 3863}}}]

11:37:11.407 [info] Receive response of 1164 from a with [%KvStore.CacheEntry{object: 386, context: %KvStore.Context{vector_clock: %{a: 3863}}}]

11:37:11.407 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1164, key: "5", object: [%KvStore.CacheEntry{object: 386, context: %KvStore.Context{vector_clock: %{a: 3863}}}], sender: :a, type: :get_log}

11:37:11.407 [info] Send request {:get, "5"}

11:37:11.408 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1165, key: "5", object: 124, sender: :a, type: :put_log}

11:37:11.408 [info] Receive response of 1165 from a with context: %KvStore.Context{vector_clock: %{a: 3876}}

11:37:11.408 [info] lb receive get from :client_a (1166)

11:37:11.408 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1167, observer: :observer}

11:37:11.408 [info] Send request {:get, "2"}

11:37:11.409 [info] lb receive get from :client_b (1167)

11:37:11.409 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 1166}

11:37:11.409 [warning] :a Timeout for request: 1130

11:37:11.410 [warning] :a Timeout for request: 1130, but request not found.

11:37:11.410 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1168, observer: :observer}

11:37:11.410 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}]

11:37:11.410 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 1167}

11:37:11.411 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}], type: :get_response, req_id: 1166}}

11:37:11.411 [info] Latest entries: [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}]

11:37:11.412 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1166, key: "5", object: [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}], sender: :a, type: :get_log}

11:37:11.412 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 632, context: %KvStore.Context{vector_clock: %{a: 3840}}}]

11:37:11.412 [info] Receive response of 1166 from a with [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}]

11:37:11.412 [warning] :a Timeout for request: 1131

11:37:11.412 [info] Send request {:put, "2", 908, []}

11:37:11.412 [warning] :a Timeout for request: 1131, but request not found.

11:37:11.413 [info] lb receive put from :client_a

11:37:11.413 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 632, context: %KvStore.Context{vector_clock: %{a: 3840}}}], type: :get_response, req_id: 1167}}

11:37:11.413 [info] Latest entries: [%KvStore.CacheEntry{object: 632, context: %KvStore.Context{vector_clock: %{a: 3840}}}]

11:37:11.413 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1169, observer: :observer}

11:37:11.414 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1167, key: "2", object: [%KvStore.CacheEntry{object: 632, context: %KvStore.Context{vector_clock: %{a: 3840}}}], sender: :a, type: :get_log}

11:37:11.414 [info] Receive response of 1167 from a with [%KvStore.CacheEntry{object: 632, context: %KvStore.Context{vector_clock: %{a: 3840}}}]

11:37:11.414 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 908, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1168}

11:37:11.414 [info] Send request {:get, "2"}

11:37:11.415 [info] lb receive get from :client_b (1169)

11:37:11.415 [info] New objects are [%KvStore.CacheEntry{object: 908, context: %KvStore.Context{vector_clock: %{a: 3889}}}]

11:37:11.415 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1170, observer: :observer}

11:37:11.416 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 1169}

11:37:11.417 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 908, context: %KvStore.Context{vector_clock: %{a: 3889}}}]

11:37:11.417 [info] Receive response of 1168 from a with context: %KvStore.Context{vector_clock: %{a: 3889}}

11:37:11.417 [info] generate requests

11:37:11.417 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1168, key: "2", object: 908, sender: :a, type: :put_log}

11:37:11.417 [info] Send request {:get, "4"}

11:37:11.418 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 908, context: %KvStore.Context{vector_clock: %{a: 3889}}}], type: :get_response, req_id: 1169}}

11:37:11.418 [info] lb receive get from :client_a (1170)

11:37:11.418 [info] Latest entries: [%KvStore.CacheEntry{object: 908, context: %KvStore.Context{vector_clock: %{a: 3889}}}]

11:37:11.418 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1171, observer: :observer}

11:37:11.419 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 1170}

11:37:11.419 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1169, key: "2", object: [%KvStore.CacheEntry{object: 908, context: %KvStore.Context{vector_clock: %{a: 3889}}}], sender: :a, type: :get_log}

11:37:11.419 [info] Receive response of 1169 from a with [%KvStore.CacheEntry{object: 908, context: %KvStore.Context{vector_clock: %{a: 3889}}}]

11:37:11.419 [info] generate requests

11:37:11.419 [info] Send request {:get, "5"}

11:37:11.420 [info] lb receive get from :client_b (1171)

11:37:11.420 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 299, context: %KvStore.Context{vector_clock: %{a: 3827}}}]

11:37:11.420 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1172, observer: :observer}

11:37:11.421 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 1171}

11:37:11.421 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 299, context: %KvStore.Context{vector_clock: %{a: 3827}}}], type: :get_response, req_id: 1170}}

11:37:11.421 [info] Latest entries: [%KvStore.CacheEntry{object: 299, context: %KvStore.Context{vector_clock: %{a: 3827}}}]

11:37:11.422 [info] Receive response of 1170 from a with [%KvStore.CacheEntry{object: 299, context: %KvStore.Context{vector_clock: %{a: 3827}}}]

11:37:11.422 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1170, key: "4", object: [%KvStore.CacheEntry{object: 299, context: %KvStore.Context{vector_clock: %{a: 3827}}}], sender: :a, type: :get_log}

11:37:11.422 [info] Send request {:put, "3", 909, []}

11:37:11.422 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}]

11:37:11.423 [info] lb receive put from :client_a

11:37:11.423 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}], type: :get_response, req_id: 1171}}

11:37:11.423 [info] Latest entries: [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}]

11:37:11.423 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1173, observer: :observer}

11:37:11.424 [info] Receive response of 1171 from a with [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}]

11:37:11.424 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1171, key: "5", object: [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}], sender: :a, type: :get_log}

11:37:11.424 [info] Send request {:put, "4", 656, []}

11:37:11.424 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 909, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1172}

11:37:11.424 [warning] :a Timeout for request: 1136

11:37:11.424 [warning] :a Timeout for request: 1136, but request not found.

11:37:11.425 [info] lb receive put from :client_b

11:37:11.425 [info] New objects are [%KvStore.CacheEntry{object: 909, context: %KvStore.Context{vector_clock: %{a: 3901}}}]

11:37:11.425 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1174, observer: :observer}

11:37:11.426 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 656, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1173}

11:37:11.427 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1172, key: "3", object: 909, sender: :a, type: :put_log}

11:37:11.427 [info] Receive response of 1172 from a with context: %KvStore.Context{vector_clock: %{a: 3901}}

11:37:11.427 [info] New objects are [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 3904}}}]

11:37:11.427 [info] Send request {:get, "5"}

11:37:11.427 [warning] :a Timeout for request: 1137

11:37:11.427 [warning] :a Timeout for request: 1137, but request not found.

11:37:11.428 [info] lb receive get from :client_a (1174)

11:37:11.428 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1175, observer: :observer}

11:37:11.429 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1173, key: "4", object: 656, sender: :a, type: :put_log}

11:37:11.429 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 1174}

11:37:11.429 [info] Receive response of 1173 from a with context: %KvStore.Context{vector_clock: %{a: 3904}}

11:37:11.429 [info] Send request {:get, "1"}

11:37:11.430 [info] lb receive get from :client_b (1175)

11:37:11.430 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}]

11:37:11.430 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1176, observer: :observer}

11:37:11.431 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 1175}

11:37:11.431 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}], type: :get_response, req_id: 1174}}

11:37:11.431 [info] Latest entries: [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}]

11:37:11.432 [info] Receive response of 1174 from a with [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}]

11:37:11.432 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1174, key: "5", object: [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}], sender: :a, type: :get_log}

11:37:11.432 [info] generate requests

11:37:11.432 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 3843}}}]

11:37:11.432 [info] Send request {:put, "2", 419, []}

11:37:11.433 [info] lb receive put from :client_a

11:37:11.433 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 3843}}}], type: :get_response, req_id: 1175}}

11:37:11.433 [info] Latest entries: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 3843}}}]

11:37:11.433 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1177, observer: :observer}

11:37:11.434 [info] Receive response of 1175 from a with [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 3843}}}]

11:37:11.434 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1175, key: "1", object: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 3843}}}], sender: :a, type: :get_log}

11:37:11.434 [info] generate requests

11:37:11.434 [info] Send request {:get, "5"}

11:37:11.434 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 419, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1176}

11:37:11.435 [info] lb receive get from :client_b (1177)

11:37:11.435 [info] New objects are [%KvStore.CacheEntry{object: 419, context: %KvStore.Context{vector_clock: %{a: 3915}}}]

11:37:11.435 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1178, observer: :observer}

11:37:11.436 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 1177}

11:37:11.437 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1176, key: "2", object: 419, sender: :a, type: :put_log}

11:37:11.437 [info] Receive response of 1176 from a with context: %KvStore.Context{vector_clock: %{a: 3915}}

11:37:11.437 [info] Send request {:get, "4"}

11:37:11.437 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}]

11:37:11.438 [info] lb receive get from :client_a (1178)

11:37:11.438 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}], type: :get_response, req_id: 1177}}

11:37:11.438 [info] Latest entries: [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}]

11:37:11.438 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1179, observer: :observer}

11:37:11.439 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 1178}

11:37:11.439 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1177, key: "5", object: [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}], sender: :a, type: :get_log}

11:37:11.439 [info] Receive response of 1177 from a with [%KvStore.CacheEntry{object: 124, context: %KvStore.Context{vector_clock: %{a: 3876}}}]

11:37:11.439 [info] Send request {:put, "1", 39, []}

11:37:11.440 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 3904}}}]

11:37:11.440 [info] lb receive put from :client_b

11:37:11.440 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1180, observer: :observer}

11:37:12.299 [info] Receive response of 1513 from a with [%KvStore.CacheEntry{object: 888, context: %KvStore.Context{vector_clock: %{a: 5037}}}]

11:37:12.299 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1513, key: "3", object: [%KvStore.CacheEntry{object: 888, context: %KvStore.Context{vector_clock: %{a: 5037}}}], sender: :a, type: :get_log}

11:37:12.299 [info] Send request {:put, "2", 369, []}

11:37:12.300 [info] lb receive put from :client_b

11:37:12.300 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 735, context: %KvStore.Context{vector_clock: %{a: 5029}}}]

11:37:12.300 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1516, observer: :observer}

11:37:12.301 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 369, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1515}

11:37:12.301 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 735, context: %KvStore.Context{vector_clock: %{a: 5029}}}], type: :get_response, req_id: 1514}}

11:37:12.301 [info] Latest entries: [%KvStore.CacheEntry{object: 735, context: %KvStore.Context{vector_clock: %{a: 5029}}}]

11:37:12.302 [info] New objects are [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}]

11:37:12.302 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1514, key: "5", object: [%KvStore.CacheEntry{object: 735, context: %KvStore.Context{vector_clock: %{a: 5029}}}], sender: :a, type: :get_log}

11:37:12.302 [info] Receive response of 1514 from a with [%KvStore.CacheEntry{object: 735, context: %KvStore.Context{vector_clock: %{a: 5029}}}]

11:37:12.302 [info] Send request {:get, "2"}

11:37:12.303 [info] lb receive get from :client_a (1516)

11:37:12.303 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1517, observer: :observer}

11:37:12.304 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1515, key: "2", object: 369, sender: :a, type: :put_log}

11:37:12.304 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 1516}

11:37:12.304 [info] Receive response of 1515 from a with context: %KvStore.Context{vector_clock: %{a: 5045}}

11:37:12.304 [info] Send request {:get, "5"}

11:37:12.305 [info] lb receive get from :client_b (1517)

11:37:12.305 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}]

11:37:12.305 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1518, observer: :observer}

11:37:12.306 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}], type: :get_response, req_id: 1516}}

11:37:12.306 [info] Latest entries: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}]

11:37:12.306 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 1517}

11:37:12.307 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1516, key: "2", object: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}], sender: :a, type: :get_log}

11:37:12.307 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 735, context: %KvStore.Context{vector_clock: %{a: 5029}}}]

11:37:12.307 [info] Receive response of 1516 from a with [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}]

11:37:12.307 [info] generate requests

11:37:12.307 [info] Send request {:get, "4"}

11:37:12.308 [info] lb receive get from :client_a (1518)

11:37:12.308 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 735, context: %KvStore.Context{vector_clock: %{a: 5029}}}], type: :get_response, req_id: 1517}}

11:37:12.308 [info] Latest entries: [%KvStore.CacheEntry{object: 735, context: %KvStore.Context{vector_clock: %{a: 5029}}}]

11:37:12.308 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1519, observer: :observer}

11:37:12.309 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 1518}

11:37:12.309 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1517, key: "5", object: [%KvStore.CacheEntry{object: 735, context: %KvStore.Context{vector_clock: %{a: 5029}}}], sender: :a, type: :get_log}

11:37:12.309 [info] Receive response of 1517 from a with [%KvStore.CacheEntry{object: 735, context: %KvStore.Context{vector_clock: %{a: 5029}}}]

11:37:12.309 [info] generate requests

11:37:12.309 [info] Send request {:put, "5", 691, []}

11:37:12.310 [info] lb receive put from :client_b

11:37:12.310 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 146, context: %KvStore.Context{vector_clock: %{a: 4899}}}]

11:37:12.310 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1520, observer: :observer}

11:37:12.311 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 691, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1519}

11:37:12.311 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 146, context: %KvStore.Context{vector_clock: %{a: 4899}}}], type: :get_response, req_id: 1518}}

11:37:12.311 [info] Latest entries: [%KvStore.CacheEntry{object: 146, context: %KvStore.Context{vector_clock: %{a: 4899}}}]

11:37:12.312 [info] Receive response of 1518 from a with [%KvStore.CacheEntry{object: 146, context: %KvStore.Context{vector_clock: %{a: 4899}}}]

11:37:12.312 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1518, key: "4", object: [%KvStore.CacheEntry{object: 146, context: %KvStore.Context{vector_clock: %{a: 4899}}}], sender: :a, type: :get_log}

11:37:12.312 [info] New objects are [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}]

11:37:12.312 [info] Send request {:get, "2"}

11:37:12.312 [warning] :a Timeout for request: 1480

11:37:12.312 [warning] :a Timeout for request: 1480, but request not found.

11:37:12.313 [info] lb receive get from :client_a (1520)

11:37:12.313 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1521, observer: :observer}

11:37:12.314 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1519, key: "5", object: 691, sender: :a, type: :put_log}

11:37:12.314 [info] Receive response of 1519 from a with context: %KvStore.Context{vector_clock: %{a: 5057}}

11:37:12.314 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 1520}

11:37:12.314 [info] Send request {:get, "4"}

11:37:12.315 [info] lb receive get from :client_b (1521)

11:37:12.315 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}]

11:37:12.315 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1522, observer: :observer}

11:37:12.315 [warning] :a Timeout for request: 1481

11:37:12.315 [warning] :a Timeout for request: 1481, but request not found.

11:37:12.316 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}], type: :get_response, req_id: 1520}}

11:37:12.316 [info] Latest entries: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}]

11:37:12.316 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 1521}

11:37:12.317 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1520, key: "2", object: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}], sender: :a, type: :get_log}

11:37:12.317 [info] Receive response of 1520 from a with [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}]

11:37:12.317 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 146, context: %KvStore.Context{vector_clock: %{a: 4899}}}]

11:37:12.317 [info] Send request {:put, "4", 964, []}

11:37:12.318 [info] lb receive put from :client_a

11:37:12.318 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 146, context: %KvStore.Context{vector_clock: %{a: 4899}}}], type: :get_response, req_id: 1521}}

11:37:12.318 [info] Latest entries: [%KvStore.CacheEntry{object: 146, context: %KvStore.Context{vector_clock: %{a: 4899}}}]

11:37:12.318 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1523, observer: :observer}

11:37:12.319 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1521, key: "4", object: [%KvStore.CacheEntry{object: 146, context: %KvStore.Context{vector_clock: %{a: 4899}}}], sender: :a, type: :get_log}

11:37:12.319 [info] Receive response of 1521 from a with [%KvStore.CacheEntry{object: 146, context: %KvStore.Context{vector_clock: %{a: 4899}}}]

11:37:12.319 [info] Send request {:get, "1"}

11:37:12.319 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 964, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1522}

11:37:12.320 [info] lb receive get from :client_b (1523)

11:37:12.320 [info] New objects are [%KvStore.CacheEntry{object: 964, context: %KvStore.Context{vector_clock: %{a: 5069}}}]

11:37:12.320 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1524, observer: :observer}

11:37:12.321 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 1523}

11:37:12.322 [info] Receive response of 1522 from a with context: %KvStore.Context{vector_clock: %{a: 5069}}

11:37:12.322 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1522, key: "4", object: 964, sender: :a, type: :put_log}

11:37:12.322 [info] generate requests

11:37:12.322 [info] Send request {:put, "4", 484, []}

11:37:12.322 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}]

11:37:12.323 [info] lb receive put from :client_a

11:37:12.323 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}], type: :get_response, req_id: 1523}}

11:37:12.323 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1525, observer: :observer}

11:37:12.323 [info] Latest entries: [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}]

11:37:12.324 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1523, key: "1", object: [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}], sender: :a, type: :get_log}

11:37:12.324 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 484, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1524}

11:37:12.324 [info] Receive response of 1523 from a with [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}]

11:37:12.324 [info] generate requests

11:37:12.324 [info] Send request {:put, "3", 776, []}

11:37:12.325 [info] New objects are [%KvStore.CacheEntry{object: 484, context: %KvStore.Context{vector_clock: %{a: 5075}}}]

11:37:12.325 [info] lb receive put from :client_b

11:37:12.325 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1526, observer: :observer}

11:37:12.325 [warning] :a Timeout for request: 1485

11:37:12.325 [warning] :a Timeout for request: 1485, but request not found.

11:37:12.326 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 776, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1525}

11:37:12.327 [info] New objects are [%KvStore.CacheEntry{object: 776, context: %KvStore.Context{vector_clock: %{a: 5078}}}]

11:37:12.327 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1524, key: "4", object: 484, sender: :a, type: :put_log}

11:37:12.327 [info] Receive response of 1524 from a with context: %KvStore.Context{vector_clock: %{a: 5075}}

11:37:12.327 [info] Send request {:get, "2"}

11:37:12.328 [info] lb receive get from :client_a (1526)

11:37:12.328 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1527, observer: :observer}

11:37:12.329 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1525, key: "3", object: 776, sender: :a, type: :put_log}

11:37:12.329 [info] Receive response of 1525 from a with context: %KvStore.Context{vector_clock: %{a: 5078}}

11:37:12.329 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 1526}

11:37:12.329 [info] Send request {:get, "2"}

11:37:12.330 [info] lb receive get from :client_b (1527)

11:37:12.330 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}]

11:37:12.330 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1528, observer: :observer}

11:37:12.331 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 1527}

11:37:12.331 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}], type: :get_response, req_id: 1526}}

11:37:12.331 [info] Latest entries: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}]

11:37:12.332 [info] Receive response of 1526 from a with [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}]

11:37:12.332 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1526, key: "2", object: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}], sender: :a, type: :get_log}

11:37:12.332 [info] Send request {:get, "3"}

11:37:12.332 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}]

11:37:12.332 [warning] :a Timeout for request: 1488

11:37:12.332 [warning] :a Timeout for request: 1488, but request not found.

11:37:12.333 [info] lb receive get from :client_a (1528)

11:37:12.333 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}], type: :get_response, req_id: 1527}}

11:37:12.333 [info] Latest entries: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}]

11:37:12.333 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1529, observer: :observer}

11:37:12.334 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 1528}

11:37:12.334 [info] Receive response of 1527 from a with [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}]

11:37:12.334 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1527, key: "2", object: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}], sender: :a, type: :get_log}

11:37:12.334 [info] Send request {:get, "2"}

11:37:12.335 [info] lb receive get from :client_b (1529)

11:37:12.335 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 776, context: %KvStore.Context{vector_clock: %{a: 5078}}}]

11:37:12.335 [warning] :a Timeout for request: 1489

11:37:12.335 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1530, observer: :observer}

11:37:12.335 [warning] :a Timeout for request: 1489, but request not found.

11:37:12.336 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 1529}

11:37:12.336 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 776, context: %KvStore.Context{vector_clock: %{a: 5078}}}], type: :get_response, req_id: 1528}}

11:37:12.336 [info] Latest entries: [%KvStore.CacheEntry{object: 776, context: %KvStore.Context{vector_clock: %{a: 5078}}}]

11:37:12.337 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1528, key: "3", object: [%KvStore.CacheEntry{object: 776, context: %KvStore.Context{vector_clock: %{a: 5078}}}], sender: :a, type: :get_log}

11:37:12.337 [info] Receive response of 1528 from a with [%KvStore.CacheEntry{object: 776, context: %KvStore.Context{vector_clock: %{a: 5078}}}]

11:37:12.337 [info] generate requests

11:37:12.337 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}]

11:37:12.337 [info] Send request {:put, "3", 691, []}

11:37:12.337 [warning] :a Timeout for request: 1490

11:37:12.337 [warning] :a Timeout for request: 1490, but request not found.

11:37:12.338 [info] lb receive put from :client_a

11:37:12.338 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}], type: :get_response, req_id: 1529}}

11:37:12.338 [info] Latest entries: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}]

11:37:12.338 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1531, observer: :observer}

11:37:12.339 [info] Receive response of 1529 from a with [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}]

11:37:12.339 [info] generate requests

11:37:12.339 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1529, key: "2", object: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}], sender: :a, type: :get_log}

11:37:12.339 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 691, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1530}

11:37:12.339 [info] Send request {:get, "2"}

11:37:12.340 [info] New objects are [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5097}}}]

11:37:12.340 [info] lb receive get from :client_b (1531)

11:37:12.340 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1532, observer: :observer}

11:37:12.341 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 1531}

11:37:12.342 [info] Receive response of 1530 from a with context: %KvStore.Context{vector_clock: %{a: 5097}}

11:37:12.342 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}]

11:37:12.342 [info] Send request {:get, "5"}

11:37:12.342 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1530, key: "3", object: 691, sender: :a, type: :put_log}

11:37:12.343 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}], type: :get_response, req_id: 1531}}

11:37:12.343 [info] lb receive get from :client_a (1532)

11:37:12.343 [info] Latest entries: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}]

11:37:12.343 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1533, observer: :observer}

11:37:12.344 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1531, key: "2", object: [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}], sender: :a, type: :get_log}

11:37:12.344 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 1532}

11:37:12.344 [info] Receive response of 1531 from a with [%KvStore.CacheEntry{object: 369, context: %KvStore.Context{vector_clock: %{a: 5045}}}]

11:37:12.344 [info] Send request {:get, "4"}

11:37:12.345 [info] lb receive get from :client_b (1533)

11:37:12.345 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}]

11:37:12.345 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1534, observer: :observer}

11:37:12.346 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}], type: :get_response, req_id: 1532}}

11:37:12.346 [info] Latest entries: [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}]

11:37:12.346 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 1533}

11:37:12.347 [info] Receive response of 1532 from a with [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}]

11:37:12.347 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1532, key: "5", object: [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}], sender: :a, type: :get_log}

11:37:12.347 [info] Send request {:get, "3"}

11:37:12.347 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 484, context: %KvStore.Context{vector_clock: %{a: 5075}}}]

11:37:12.348 [info] lb receive get from :client_a (1534)

11:37:12.348 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 484, context: %KvStore.Context{vector_clock: %{a: 5075}}}], type: :get_response, req_id: 1533}}

11:37:12.348 [info] Latest entries: [%KvStore.CacheEntry{object: 484, context: %KvStore.Context{vector_clock: %{a: 5075}}}]

11:37:12.348 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1535, observer: :observer}

11:37:12.349 [info] Receive response of 1533 from a with [%KvStore.CacheEntry{object: 484, context: %KvStore.Context{vector_clock: %{a: 5075}}}]

11:37:12.349 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1533, key: "4", object: [%KvStore.CacheEntry{object: 484, context: %KvStore.Context{vector_clock: %{a: 5075}}}], sender: :a, type: :get_log}

11:37:12.349 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 1534}

11:37:12.349 [info] Send request {:put, "4", 132, []}

11:37:12.350 [info] lb receive put from :client_b

11:37:12.350 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5097}}}]

11:37:12.350 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1536, observer: :observer}

11:37:12.350 [warning] :a Timeout for request: 1495

11:37:12.350 [warning] :a Timeout for request: 1495, but request not found.

11:37:12.351 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 132, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1535}

11:37:12.351 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5097}}}], type: :get_response, req_id: 1534}}

11:37:12.351 [info] Latest entries: [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5097}}}]

11:37:12.352 [info] New objects are [%KvStore.CacheEntry{object: 132, context: %KvStore.Context{vector_clock: %{a: 5112}}}]

11:37:12.352 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1534, key: "3", object: [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5097}}}], sender: :a, type: :get_log}

11:37:12.352 [info] Receive response of 1534 from a with [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5097}}}]

11:37:12.352 [info] generate requests

11:37:12.352 [info] Send request {:put, "2", 88, []}

11:37:12.352 [warning] :a Timeout for request: 1496

11:37:12.352 [warning] :a Timeout for request: 1496, but request not found.

11:37:12.353 [info] lb receive put from :client_a

11:37:12.353 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1537, observer: :observer}

11:37:12.354 [info] Receive response of 1535 from a with context: %KvStore.Context{vector_clock: %{a: 5112}}

11:37:12.354 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1535, key: "4", object: 132, sender: :a, type: :put_log}

11:37:12.354 [info] generate requests

11:37:12.354 [info] Send request {:get, "4"}

11:37:12.354 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 88, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1536}

11:37:12.355 [info] lb receive get from :client_b (1537)

11:37:12.355 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1538, observer: :observer}

11:37:12.355 [info] New objects are [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}]

11:37:12.356 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 1537}

11:37:12.357 [info] Receive response of 1536 from a with context: %KvStore.Context{vector_clock: %{a: 5117}}

11:37:12.357 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 132, context: %KvStore.Context{vector_clock: %{a: 5112}}}]

11:37:12.357 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1536, key: "2", object: 88, sender: :a, type: :put_log}

11:37:12.357 [info] Send request {:get, "5"}

11:37:12.358 [info] lb receive get from :client_a (1538)

11:37:12.358 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 132, context: %KvStore.Context{vector_clock: %{a: 5112}}}], type: :get_response, req_id: 1537}}

11:37:12.358 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1539, observer: :observer}

11:37:12.358 [info] Latest entries: [%KvStore.CacheEntry{object: 132, context: %KvStore.Context{vector_clock: %{a: 5112}}}]

11:37:12.359 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 1538}

11:37:12.359 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1537, key: "4", object: [%KvStore.CacheEntry{object: 132, context: %KvStore.Context{vector_clock: %{a: 5112}}}], sender: :a, type: :get_log}

11:37:12.359 [info] Receive response of 1537 from a with [%KvStore.CacheEntry{object: 132, context: %KvStore.Context{vector_clock: %{a: 5112}}}]

11:37:12.359 [info] Send request {:get, "1"}

11:37:12.360 [info] lb receive get from :client_b (1539)

11:37:12.360 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}]

11:37:12.360 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1540, observer: :observer}

11:37:12.361 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 1539}

11:37:12.361 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}], type: :get_response, req_id: 1538}}

11:37:12.361 [info] Latest entries: [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}]

11:37:12.362 [info] Receive response of 1538 from a with [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}]

11:37:12.362 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}]

11:37:12.362 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1538, key: "5", object: [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}], sender: :a, type: :get_log}

11:37:12.362 [info] Send request {:get, "1"}

11:37:12.363 [info] lb receive get from :client_a (1540)

11:37:12.363 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}], type: :get_response, req_id: 1539}}

11:37:12.363 [info] Latest entries: [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}]

11:37:12.363 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1541, observer: :observer}

11:37:12.364 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1539, key: "1", object: [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}], sender: :a, type: :get_log}

11:37:12.364 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 1540}

11:37:12.364 [info] Receive response of 1539 from a with [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}]

11:37:12.364 [info] Send request {:put, "4", 148, []}

11:37:12.365 [info] lb receive put from :client_b

11:37:12.365 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}]

11:37:12.365 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1542, observer: :observer}

11:37:12.366 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 148, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1541}

11:37:12.366 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}], type: :get_response, req_id: 1540}}

11:37:12.366 [info] Latest entries: [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}]

11:37:12.367 [info] Receive response of 1540 from a with [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}]

11:37:12.367 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1540, key: "1", object: [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}], sender: :a, type: :get_log}

11:37:12.367 [info] New objects are [%KvStore.CacheEntry{object: 148, context: %KvStore.Context{vector_clock: %{a: 5131}}}]

11:37:12.367 [info] generate requests

11:37:12.367 [info] Send request {:get, "4"}

11:37:12.367 [warning] :a Timeout for request: 1502

11:37:12.367 [warning] :a Timeout for request: 1502, but request not found.

11:37:12.368 [info] lb receive get from :client_a (1542)

11:37:12.368 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1543, observer: :observer}

11:37:12.369 [info] Receive response of 1541 from a with context: %KvStore.Context{vector_clock: %{a: 5131}}

11:37:12.369 [info] generate requests

11:37:12.369 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 1542}

11:37:12.369 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1541, key: "4", object: 148, sender: :a, type: :put_log}

11:37:12.369 [info] Send request {:put, "4", 89, []}

11:37:12.370 [info] lb receive put from :client_b

11:37:12.370 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 148, context: %KvStore.Context{vector_clock: %{a: 5131}}}]

11:37:12.370 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1544, observer: :observer}

11:37:12.370 [warning] :a Timeout for request: 1503

11:37:12.370 [warning] :a Timeout for request: 1503, but request not found.

11:37:12.371 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 89, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1543}

11:37:12.371 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 148, context: %KvStore.Context{vector_clock: %{a: 5131}}}], type: :get_response, req_id: 1542}}

11:37:12.371 [info] Latest entries: [%KvStore.CacheEntry{object: 148, context: %KvStore.Context{vector_clock: %{a: 5131}}}]

11:37:12.372 [info] New objects are [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 5139}}}]

11:37:12.372 [info] Receive response of 1542 from a with [%KvStore.CacheEntry{object: 148, context: %KvStore.Context{vector_clock: %{a: 5131}}}]

11:37:12.372 [info] Send request {:get, "2"}

11:37:12.372 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1542, key: "4", object: [%KvStore.CacheEntry{object: 148, context: %KvStore.Context{vector_clock: %{a: 5131}}}], sender: :a, type: :get_log}

11:37:12.373 [info] lb receive get from :client_a (1544)

11:37:12.373 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1545, observer: :observer}

11:37:12.374 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 1544}

11:37:12.374 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1543, key: "4", object: 89, sender: :a, type: :put_log}

11:37:12.374 [info] Receive response of 1543 from a with context: %KvStore.Context{vector_clock: %{a: 5139}}

11:37:12.374 [info] Send request {:get, "3"}

11:37:12.375 [info] lb receive get from :client_b (1545)

11:37:12.375 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}]

11:37:12.375 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1546, observer: :observer}

11:37:12.376 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}], type: :get_response, req_id: 1544}}

11:37:12.376 [info] Latest entries: [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}]

11:37:12.376 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 1545}

11:37:12.377 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1544, key: "2", object: [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}], sender: :a, type: :get_log}

11:37:12.377 [info] Receive response of 1544 from a with [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}]

11:37:12.377 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5097}}}]

11:37:12.377 [info] Send request {:put, "4", 327, []}

11:37:12.378 [info] lb receive put from :client_a

11:37:12.378 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5097}}}], type: :get_response, req_id: 1545}}

11:37:12.378 [info] Latest entries: [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5097}}}]

11:37:12.378 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1547, observer: :observer}

11:37:12.379 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1545, key: "3", object: [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5097}}}], sender: :a, type: :get_log}

11:37:12.379 [info] Receive response of 1545 from a with [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5097}}}]

11:37:12.379 [info] Send request {:get, "5"}

11:37:12.379 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 327, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1546}

11:37:12.380 [info] lb receive get from :client_b (1547)

11:37:12.380 [info] New objects are [%KvStore.CacheEntry{object: 327, context: %KvStore.Context{vector_clock: %{a: 5149}}}]

11:37:12.380 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1548, observer: :observer}

11:37:12.381 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 1547}

11:37:12.382 [info] Receive response of 1546 from a with context: %KvStore.Context{vector_clock: %{a: 5149}}

11:37:12.382 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1546, key: "4", object: 327, sender: :a, type: :put_log}

11:37:12.382 [info] generate requests

11:37:12.382 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}]

11:37:12.382 [info] Send request {:get, "1"}

11:37:12.382 [warning] :a Timeout for request: 1508

11:37:12.382 [warning] :a Timeout for request: 1508, but request not found.

11:37:12.383 [info] lb receive get from :client_a (1548)

11:37:12.383 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}], type: :get_response, req_id: 1547}}

11:37:12.383 [info] Latest entries: [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}]

11:37:12.383 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1549, observer: :observer}

11:37:12.384 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1547, key: "5", object: [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}], sender: :a, type: :get_log}

11:37:12.384 [info] Receive response of 1547 from a with [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}]

11:37:12.384 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 1548}

11:37:12.384 [info] generate requests

11:37:12.384 [info] Send request {:put, "1", 431, []}

11:37:12.385 [info] lb receive put from :client_b

11:37:12.385 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}]

11:37:12.385 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1550, observer: :observer}

11:37:12.386 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 431, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1549}

11:37:12.386 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}], type: :get_response, req_id: 1548}}

11:37:12.386 [info] Latest entries: [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}]

11:37:12.387 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1548, key: "1", object: [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}], sender: :a, type: :get_log}

11:37:12.387 [info] New objects are [%KvStore.CacheEntry{object: 431, context: %KvStore.Context{vector_clock: %{a: 5158}}}]

11:37:12.387 [info] Receive response of 1548 from a with [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 5019}}}]

11:37:12.387 [info] Send request {:get, "1"}

11:37:12.388 [info] lb receive get from :client_a (1550)

11:37:12.388 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1551, observer: :observer}

11:37:12.389 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 1550}

11:37:12.389 [info] Receive response of 1549 from a with context: %KvStore.Context{vector_clock: %{a: 5158}}

11:37:12.389 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1549, key: "1", object: 431, sender: :a, type: :put_log}

11:37:12.389 [info] Send request {:get, "5"}

11:37:12.390 [info] lb receive get from :client_b (1551)

11:37:12.390 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 431, context: %KvStore.Context{vector_clock: %{a: 5158}}}]

11:37:12.390 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1552, observer: :observer}

11:37:12.390 [warning] :a Timeout for request: 1511

11:37:12.390 [warning] :a Timeout for request: 1511, but request not found.

11:37:12.391 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 1551}

11:37:12.391 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 431, context: %KvStore.Context{vector_clock: %{a: 5158}}}], type: :get_response, req_id: 1550}}

11:37:12.391 [info] Latest entries: [%KvStore.CacheEntry{object: 431, context: %KvStore.Context{vector_clock: %{a: 5158}}}]

11:37:12.392 [info] Receive response of 1550 from a with [%KvStore.CacheEntry{object: 431, context: %KvStore.Context{vector_clock: %{a: 5158}}}]

11:37:12.392 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1550, key: "1", object: [%KvStore.CacheEntry{object: 431, context: %KvStore.Context{vector_clock: %{a: 5158}}}], sender: :a, type: :get_log}

11:37:12.392 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}]

11:37:12.392 [info] Send request {:put, "3", 929, []}

11:37:12.393 [info] lb receive put from :client_a

11:37:12.393 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}], type: :get_response, req_id: 1551}}

11:37:12.393 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1553, observer: :observer}

11:37:12.393 [info] Latest entries: [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}]

11:37:12.394 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1551, key: "5", object: [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}], sender: :a, type: :get_log}

11:37:12.394 [info] Receive response of 1551 from a with [%KvStore.CacheEntry{object: 691, context: %KvStore.Context{vector_clock: %{a: 5057}}}]

11:37:12.394 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 929, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1552}

11:37:12.394 [info] Send request {:get, "2"}

11:37:12.395 [info] lb receive get from :client_b (1553)

11:37:12.395 [info] New objects are [%KvStore.CacheEntry{object: 929, context: %KvStore.Context{vector_clock: %{a: 5169}}}]

11:37:12.395 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1554, observer: :observer}

11:37:12.395 [warning] :a Timeout for request: 1513

11:37:12.395 [warning] :a Timeout for request: 1513, but request not found.

11:37:12.396 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 1553}

11:37:12.397 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1552, key: "3", object: 929, sender: :a, type: :put_log}

11:37:12.397 [info] Receive response of 1552 from a with context: %KvStore.Context{vector_clock: %{a: 5169}}

11:37:12.397 [info] generate requests

11:37:12.397 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}]

11:37:12.397 [info] Send request {:get, "4"}

11:37:12.398 [info] lb receive get from :client_a (1554)

11:37:12.398 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}], type: :get_response, req_id: 1553}}

11:37:12.398 [info] Latest entries: [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}]

11:37:12.398 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1555, observer: :observer}

11:37:12.399 [info] Receive response of 1553 from a with [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}]

11:37:12.399 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 1554}

11:37:12.399 [info] generate requests

11:37:12.399 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1553, key: "2", object: [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}], sender: :a, type: :get_log}

11:37:12.399 [info] Send request {:get, "3"}

11:37:12.400 [info] lb receive get from :client_b (1555)

11:37:12.400 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 327, context: %KvStore.Context{vector_clock: %{a: 5149}}}]

11:37:12.400 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1556, observer: :observer}

11:37:12.401 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 327, context: %KvStore.Context{vector_clock: %{a: 5149}}}], type: :get_response, req_id: 1554}}

11:37:12.401 [info] Latest entries: [%KvStore.CacheEntry{object: 327, context: %KvStore.Context{vector_clock: %{a: 5149}}}]

11:37:12.401 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 1555}

11:37:12.402 [info] Receive response of 1554 from a with [%KvStore.CacheEntry{object: 327, context: %KvStore.Context{vector_clock: %{a: 5149}}}]

11:37:12.402 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1554, key: "4", object: [%KvStore.CacheEntry{object: 327, context: %KvStore.Context{vector_clock: %{a: 5149}}}], sender: :a, type: :get_log}

11:37:12.402 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 929, context: %KvStore.Context{vector_clock: %{a: 5169}}}]

11:37:12.402 [info] Send request {:get, "2"}

11:37:12.402 [warning] :a Timeout for request: 1516

11:37:12.402 [warning] :a Timeout for request: 1516, but request not found.

11:37:12.403 [info] lb receive get from :client_a (1556)

11:37:12.403 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 929, context: %KvStore.Context{vector_clock: %{a: 5169}}}], type: :get_response, req_id: 1555}}

11:37:12.403 [info] Latest entries: [%KvStore.CacheEntry{object: 929, context: %KvStore.Context{vector_clock: %{a: 5169}}}]

11:37:12.403 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1557, observer: :observer}

11:37:12.404 [info] Receive response of 1555 from a with [%KvStore.CacheEntry{object: 929, context: %KvStore.Context{vector_clock: %{a: 5169}}}]

11:37:12.404 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 1556}

11:37:12.404 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1555, key: "3", object: [%KvStore.CacheEntry{object: 929, context: %KvStore.Context{vector_clock: %{a: 5169}}}], sender: :a, type: :get_log}

11:37:12.404 [info] Send request {:get, "4"}

11:37:12.405 [info] lb receive get from :client_b (1557)

11:37:12.405 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}]

11:37:12.405 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1558, observer: :observer}

11:37:12.406 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 1557}

11:37:12.406 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}], type: :get_response, req_id: 1556}}

11:37:12.406 [info] Latest entries: [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}]

11:37:12.407 [info] Receive response of 1556 from a with [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}]

11:37:12.407 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 327, context: %KvStore.Context{vector_clock: %{a: 5149}}}]

11:37:12.407 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1556, key: "2", object: [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}], sender: :a, type: :get_log}

11:37:12.407 [info] Send request {:put, "3", 457, []}

11:37:12.408 [info] lb receive put from :client_a

11:37:12.408 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 327, context: %KvStore.Context{vector_clock: %{a: 5149}}}], type: :get_response, req_id: 1557}}

11:37:12.408 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1559, observer: :observer}

11:37:12.408 [info] Latest entries: [%KvStore.CacheEntry{object: 327, context: %KvStore.Context{vector_clock: %{a: 5149}}}]

11:37:12.409 [info] Receive response of 1557 from a with [%KvStore.CacheEntry{object: 327, context: %KvStore.Context{vector_clock: %{a: 5149}}}]

11:37:12.409 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1557, key: "4", object: [%KvStore.CacheEntry{object: 327, context: %KvStore.Context{vector_clock: %{a: 5149}}}], sender: :a, type: :get_log}

11:37:12.409 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 457, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1558}

11:37:12.409 [info] Send request {:put, "5", 54, []}

11:37:12.410 [info] lb receive put from :client_b

11:37:12.410 [info] New objects are [%KvStore.CacheEntry{object: 457, context: %KvStore.Context{vector_clock: %{a: 5189}}}]

11:37:12.410 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1560, observer: :observer}

11:37:12.411 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 54, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1559}

11:37:12.412 [info] Receive response of 1558 from a with context: %KvStore.Context{vector_clock: %{a: 5189}}

11:37:12.412 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1558, key: "3", object: 457, sender: :a, type: :put_log}

11:37:12.412 [info] generate requests

11:37:12.412 [info] New objects are [%KvStore.CacheEntry{object: 54, context: %KvStore.Context{vector_clock: %{a: 5191}}}]

11:37:12.412 [info] Send request {:put, "3", 517, []}

11:37:12.412 [warning] :a Timeout for request: 1520

11:37:12.412 [warning] :a Timeout for request: 1520, but request not found.

11:37:12.413 [info] lb receive put from :client_a

11:37:12.413 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1561, observer: :observer}

11:37:12.414 [info] Receive response of 1559 from a with context: %KvStore.Context{vector_clock: %{a: 5191}}

11:37:12.414 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1559, key: "5", object: 54, sender: :a, type: :put_log}

11:37:12.414 [info] generate requests

11:37:12.414 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 517, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1560}

11:37:12.414 [info] Send request {:get, "2"}

11:37:12.415 [info] New objects are [%KvStore.CacheEntry{object: 517, context: %KvStore.Context{vector_clock: %{a: 5196}}}]

11:37:12.415 [info] lb receive get from :client_b (1561)

11:37:12.415 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1562, observer: :observer}

11:37:12.416 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 1561}

11:37:12.417 [info] Receive response of 1560 from a with context: %KvStore.Context{vector_clock: %{a: 5196}}

11:37:12.417 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1560, key: "3", object: 517, sender: :a, type: :put_log}

11:37:12.417 [info] Send request {:get, "3"}

11:37:12.417 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}]

11:37:12.418 [info] lb receive get from :client_a (1562)

11:37:12.418 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}], type: :get_response, req_id: 1561}}

11:37:12.418 [info] Latest entries: [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}]

11:37:12.418 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1563, observer: :observer}

11:37:12.419 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 1562}

11:37:12.419 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1561, key: "2", object: [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}], sender: :a, type: :get_log}

11:37:12.419 [info] Receive response of 1561 from a with [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}]

11:37:12.419 [info] Send request {:put, "4", 612, []}

11:37:12.420 [info] lb receive put from :client_b

11:37:12.420 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 517, context: %KvStore.Context{vector_clock: %{a: 5196}}}]

11:37:12.420 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1564, observer: :observer}

11:37:12.420 [warning] :a Timeout for request: 1523

11:37:12.420 [warning] :a Timeout for request: 1523, but request not found.

11:37:12.421 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 612, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1563}

11:37:12.421 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 517, context: %KvStore.Context{vector_clock: %{a: 5196}}}], type: :get_response, req_id: 1562}}

11:37:12.421 [info] Latest entries: [%KvStore.CacheEntry{object: 517, context: %KvStore.Context{vector_clock: %{a: 5196}}}]

11:37:12.422 [info] Receive response of 1562 from a with [%KvStore.CacheEntry{object: 517, context: %KvStore.Context{vector_clock: %{a: 5196}}}]

11:37:12.422 [info] New objects are [%KvStore.CacheEntry{object: 612, context: %KvStore.Context{vector_clock: %{a: 5205}}}]

11:37:12.422 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1562, key: "3", object: [%KvStore.CacheEntry{object: 517, context: %KvStore.Context{vector_clock: %{a: 5196}}}], sender: :a, type: :get_log}

11:37:12.422 [info] Send request {:get, "4"}

11:37:12.423 [info] lb receive get from :client_a (1564)

11:37:12.423 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1565, observer: :observer}

11:37:12.424 [info] Receive response of 1563 from a with context: %KvStore.Context{vector_clock: %{a: 5205}}

11:37:12.424 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 1564}

11:37:12.424 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1563, key: "4", object: 612, sender: :a, type: :put_log}

11:37:12.424 [info] Send request {:get, "3"}

11:37:12.425 [info] lb receive get from :client_b (1565)

11:37:12.425 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 612, context: %KvStore.Context{vector_clock: %{a: 5205}}}]

11:37:12.425 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1566, observer: :observer}

11:37:12.425 [warning] :a Timeout for request: 1525

11:37:12.425 [warning] :a Timeout for request: 1525, but request not found.

11:37:12.426 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 1565}

11:37:12.426 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 612, context: %KvStore.Context{vector_clock: %{a: 5205}}}], type: :get_response, req_id: 1564}}

11:37:12.426 [info] Latest entries: [%KvStore.CacheEntry{object: 612, context: %KvStore.Context{vector_clock: %{a: 5205}}}]

11:37:12.427 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1564, key: "4", object: [%KvStore.CacheEntry{object: 612, context: %KvStore.Context{vector_clock: %{a: 5205}}}], sender: :a, type: :get_log}

11:37:12.427 [info] Receive response of 1564 from a with [%KvStore.CacheEntry{object: 612, context: %KvStore.Context{vector_clock: %{a: 5205}}}]

11:37:12.427 [info] generate requests

11:37:12.427 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 517, context: %KvStore.Context{vector_clock: %{a: 5196}}}]

11:37:12.427 [info] Send request {:put, "3", 403, []}

11:37:12.427 [warning] :a Timeout for request: 1526

11:37:12.427 [warning] :a Timeout for request: 1526, but request not found.

11:37:12.428 [info] lb receive put from :client_a

11:37:12.428 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 517, context: %KvStore.Context{vector_clock: %{a: 5196}}}], type: :get_response, req_id: 1565}}

11:37:12.428 [info] Latest entries: [%KvStore.CacheEntry{object: 517, context: %KvStore.Context{vector_clock: %{a: 5196}}}]

11:37:12.428 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1567, observer: :observer}

11:37:12.429 [info] Receive response of 1565 from a with [%KvStore.CacheEntry{object: 517, context: %KvStore.Context{vector_clock: %{a: 5196}}}]

11:37:12.429 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1565, key: "3", object: [%KvStore.CacheEntry{object: 517, context: %KvStore.Context{vector_clock: %{a: 5196}}}], sender: :a, type: :get_log}

11:37:12.429 [info] generate requests

11:37:12.429 [info] Send request {:get, "2"}

11:37:12.429 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 403, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1566}

11:37:12.430 [info] lb receive get from :client_b (1567)

11:37:12.430 [info] New objects are [%KvStore.CacheEntry{object: 403, context: %KvStore.Context{vector_clock: %{a: 5217}}}]

11:37:12.430 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1568, observer: :observer}

11:37:12.431 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 1567}

11:37:12.432 [info] Receive response of 1566 from a with context: %KvStore.Context{vector_clock: %{a: 5217}}

11:37:12.432 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1566, key: "3", object: 403, sender: :a, type: :put_log}

11:37:12.432 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}]

11:37:12.432 [info] Send request {:get, "1"}

11:37:12.433 [info] lb receive get from :client_a (1568)

11:37:12.433 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 88, context: %KvStore.Context{vector_clock: %{a: 5117}}}], type: :get_response, req_id: 1567}}

11:37:13.299 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 705, context: %KvStore.Context{vector_clock: %{a: 6351}}}]

11:37:13.299 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1912, observer: :observer}

11:37:13.300 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 705, context: %KvStore.Context{vector_clock: %{a: 6351}}}], type: :get_response, req_id: 1910}}

11:37:13.300 [info] Latest entries: [%KvStore.CacheEntry{object: 705, context: %KvStore.Context{vector_clock: %{a: 6351}}}]

11:37:13.300 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 193, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1911}

11:37:13.301 [info] Receive response of 1910 from a with [%KvStore.CacheEntry{object: 705, context: %KvStore.Context{vector_clock: %{a: 6351}}}]

11:37:13.301 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1910, key: "1", object: [%KvStore.CacheEntry{object: 705, context: %KvStore.Context{vector_clock: %{a: 6351}}}], sender: :a, type: :get_log}

11:37:13.301 [info] Send request {:put, "3", 239, []}

11:37:13.301 [info] New objects are [%KvStore.CacheEntry{object: 193, context: %KvStore.Context{vector_clock: %{a: 6367}}}]

11:37:13.301 [warning] :a Timeout for request: 1872

11:37:13.301 [warning] :a Timeout for request: 1872, but request not found.

11:37:13.302 [info] lb receive put from :client_a

11:37:13.302 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1913, observer: :observer}

11:37:13.303 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1911, key: "1", object: 193, sender: :a, type: :put_log}

11:37:13.303 [info] Receive response of 1911 from a with context: %KvStore.Context{vector_clock: %{a: 6367}}

11:37:13.303 [info] Send request {:get, "2"}

11:37:13.303 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 239, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1912}

11:37:13.304 [info] lb receive get from :client_b (1913)

11:37:13.304 [info] New objects are [%KvStore.CacheEntry{object: 239, context: %KvStore.Context{vector_clock: %{a: 6371}}}]

11:37:13.304 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1914, observer: :observer}

11:37:13.305 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 1913}

11:37:13.306 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1912, key: "3", object: 239, sender: :a, type: :put_log}

11:37:13.306 [info] Receive response of 1912 from a with context: %KvStore.Context{vector_clock: %{a: 6371}}

11:37:13.306 [info] generate requests

11:37:13.306 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 77, context: %KvStore.Context{vector_clock: %{a: 6353}}}]

11:37:13.306 [info] Send request {:get, "2"}

11:37:13.307 [info] lb receive get from :client_a (1914)

11:37:13.307 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 77, context: %KvStore.Context{vector_clock: %{a: 6353}}}], type: :get_response, req_id: 1913}}

11:37:13.307 [info] Latest entries: [%KvStore.CacheEntry{object: 77, context: %KvStore.Context{vector_clock: %{a: 6353}}}]

11:37:13.307 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1915, observer: :observer}

11:37:13.308 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 1914}

11:37:13.308 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1913, key: "2", object: [%KvStore.CacheEntry{object: 77, context: %KvStore.Context{vector_clock: %{a: 6353}}}], sender: :a, type: :get_log}

11:37:13.308 [info] Receive response of 1913 from a with [%KvStore.CacheEntry{object: 77, context: %KvStore.Context{vector_clock: %{a: 6353}}}]

11:37:13.308 [info] generate requests

11:37:13.308 [info] Send request {:get, "4"}

11:37:13.309 [info] lb receive get from :client_b (1915)

11:37:13.309 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 77, context: %KvStore.Context{vector_clock: %{a: 6353}}}]

11:37:13.309 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1916, observer: :observer}

11:37:13.310 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 77, context: %KvStore.Context{vector_clock: %{a: 6353}}}], type: :get_response, req_id: 1914}}

11:37:13.310 [info] Latest entries: [%KvStore.CacheEntry{object: 77, context: %KvStore.Context{vector_clock: %{a: 6353}}}]

11:37:13.310 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 1915}

11:37:13.311 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1914, key: "2", object: [%KvStore.CacheEntry{object: 77, context: %KvStore.Context{vector_clock: %{a: 6353}}}], sender: :a, type: :get_log}

11:37:13.311 [info] Receive response of 1914 from a with [%KvStore.CacheEntry{object: 77, context: %KvStore.Context{vector_clock: %{a: 6353}}}]

11:37:13.311 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 60, context: %KvStore.Context{vector_clock: %{a: 6313}}}]

11:37:13.311 [info] Send request {:put, "5", 630, []}

11:37:13.312 [info] lb receive put from :client_a

11:37:13.312 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 60, context: %KvStore.Context{vector_clock: %{a: 6313}}}], type: :get_response, req_id: 1915}}

11:37:13.312 [info] Latest entries: [%KvStore.CacheEntry{object: 60, context: %KvStore.Context{vector_clock: %{a: 6313}}}]

11:37:13.312 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1917, observer: :observer}

11:37:13.313 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1915, key: "4", object: [%KvStore.CacheEntry{object: 60, context: %KvStore.Context{vector_clock: %{a: 6313}}}], sender: :a, type: :get_log}

11:37:13.313 [info] Receive response of 1915 from a with [%KvStore.CacheEntry{object: 60, context: %KvStore.Context{vector_clock: %{a: 6313}}}]

11:37:13.313 [info] Send request {:get, "3"}

11:37:13.313 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 630, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1916}

11:37:13.314 [info] lb receive get from :client_b (1917)

11:37:13.314 [info] New objects are [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.314 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1918, observer: :observer}

11:37:13.314 [warning] :a Timeout for request: 1877

11:37:13.314 [warning] :a Timeout for request: 1877, but request not found.

11:37:13.315 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 1917}

11:37:13.316 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1916, key: "5", object: 630, sender: :a, type: :put_log}

11:37:13.316 [info] Receive response of 1916 from a with context: %KvStore.Context{vector_clock: %{a: 6383}}

11:37:13.316 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 239, context: %KvStore.Context{vector_clock: %{a: 6371}}}]

11:37:13.316 [info] Send request {:get, "3"}

11:37:13.316 [warning] :a Timeout for request: 1878

11:37:13.316 [warning] :a Timeout for request: 1878, but request not found.

11:37:13.317 [info] lb receive get from :client_a (1918)

11:37:13.317 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 239, context: %KvStore.Context{vector_clock: %{a: 6371}}}], type: :get_response, req_id: 1917}}

11:37:13.317 [info] Latest entries: [%KvStore.CacheEntry{object: 239, context: %KvStore.Context{vector_clock: %{a: 6371}}}]

11:37:13.317 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1919, observer: :observer}

11:37:13.318 [info] Receive response of 1917 from a with [%KvStore.CacheEntry{object: 239, context: %KvStore.Context{vector_clock: %{a: 6371}}}]

11:37:13.318 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 1918}

11:37:13.318 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1917, key: "3", object: [%KvStore.CacheEntry{object: 239, context: %KvStore.Context{vector_clock: %{a: 6371}}}], sender: :a, type: :get_log}

11:37:13.318 [info] Send request {:put, "4", 224, []}

11:37:13.319 [info] lb receive put from :client_b

11:37:13.319 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 239, context: %KvStore.Context{vector_clock: %{a: 6371}}}]

11:37:13.319 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1920, observer: :observer}

11:37:13.319 [warning] :a Timeout for request: 1879

11:37:13.319 [warning] :a Timeout for request: 1879, but request not found.

11:37:13.320 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 224, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1919}

11:37:13.320 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 239, context: %KvStore.Context{vector_clock: %{a: 6371}}}], type: :get_response, req_id: 1918}}

11:37:13.320 [info] Latest entries: [%KvStore.CacheEntry{object: 239, context: %KvStore.Context{vector_clock: %{a: 6371}}}]

11:37:13.321 [info] Receive response of 1918 from a with [%KvStore.CacheEntry{object: 239, context: %KvStore.Context{vector_clock: %{a: 6371}}}]

11:37:13.321 [info] generate requests

11:37:13.321 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1918, key: "3", object: [%KvStore.CacheEntry{object: 239, context: %KvStore.Context{vector_clock: %{a: 6371}}}], sender: :a, type: :get_log}

11:37:13.321 [info] New objects are [%KvStore.CacheEntry{object: 224, context: %KvStore.Context{vector_clock: %{a: 6394}}}]

11:37:13.321 [info] Send request {:put, "2", 480, []}

11:37:13.321 [warning] :a Timeout for request: 1880

11:37:13.321 [warning] :a Timeout for request: 1880, but request not found.

11:37:13.322 [info] lb receive put from :client_a

11:37:13.322 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1921, observer: :observer}

11:37:13.323 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1919, key: "4", object: 224, sender: :a, type: :put_log}

11:37:13.323 [info] Receive response of 1919 from a with context: %KvStore.Context{vector_clock: %{a: 6394}}

11:37:13.323 [info] generate requests

11:37:13.323 [info] Send request {:put, "3", 144, []}

11:37:13.323 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 480, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1920}

11:37:13.324 [info] lb receive put from :client_b

11:37:13.324 [info] New objects are [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.324 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1922, observer: :observer}

11:37:13.325 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 144, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1921}

11:37:13.326 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1920, key: "2", object: 480, sender: :a, type: :put_log}

11:37:13.326 [info] Receive response of 1920 from a with context: %KvStore.Context{vector_clock: %{a: 6399}}

11:37:13.326 [info] New objects are [%KvStore.CacheEntry{object: 144, context: %KvStore.Context{vector_clock: %{a: 6402}}}]

11:37:13.326 [info] Send request {:get, "5"}

11:37:13.327 [info] lb receive get from :client_a (1922)

11:37:13.327 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1923, observer: :observer}

11:37:13.328 [info] Receive response of 1921 from a with context: %KvStore.Context{vector_clock: %{a: 6402}}

11:37:13.328 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1921, key: "3", object: 144, sender: :a, type: :put_log}

11:37:13.328 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 1922}

11:37:13.328 [info] Send request {:get, "2"}

11:37:13.329 [info] lb receive get from :client_b (1923)

11:37:13.329 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.329 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1924, observer: :observer}

11:37:13.330 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}], type: :get_response, req_id: 1922}}

11:37:13.330 [info] Latest entries: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.330 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 1923}

11:37:13.331 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.331 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1922, key: "5", object: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}], sender: :a, type: :get_log}

11:37:13.331 [info] Receive response of 1922 from a with [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.331 [info] Send request {:get, "2"}

11:37:13.332 [info] lb receive get from :client_a (1924)

11:37:13.332 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}], type: :get_response, req_id: 1923}}

11:37:13.332 [info] Latest entries: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.332 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1925, observer: :observer}

11:37:13.333 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 1924}

11:37:13.333 [info] Receive response of 1923 from a with [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.333 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1923, key: "2", object: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}], sender: :a, type: :get_log}

11:37:13.333 [info] Send request {:get, "3"}

11:37:13.334 [info] lb receive get from :client_b (1925)

11:37:13.334 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.334 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1926, observer: :observer}

11:37:13.335 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 1925}

11:37:13.335 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}], type: :get_response, req_id: 1924}}

11:37:13.335 [info] Latest entries: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.336 [info] Receive response of 1924 from a with [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.336 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1924, key: "2", object: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}], sender: :a, type: :get_log}

11:37:13.336 [info] generate requests

11:37:13.336 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 144, context: %KvStore.Context{vector_clock: %{a: 6402}}}]

11:37:13.336 [info] Send request {:get, "2"}

11:37:13.337 [info] lb receive get from :client_a (1926)

11:37:13.337 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 144, context: %KvStore.Context{vector_clock: %{a: 6402}}}], type: :get_response, req_id: 1925}}

11:37:13.337 [info] Latest entries: [%KvStore.CacheEntry{object: 144, context: %KvStore.Context{vector_clock: %{a: 6402}}}]

11:37:13.337 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1927, observer: :observer}

11:37:13.338 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 1926}

11:37:13.338 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1925, key: "3", object: [%KvStore.CacheEntry{object: 144, context: %KvStore.Context{vector_clock: %{a: 6402}}}], sender: :a, type: :get_log}

11:37:13.338 [info] Receive response of 1925 from a with [%KvStore.CacheEntry{object: 144, context: %KvStore.Context{vector_clock: %{a: 6402}}}]

11:37:13.338 [info] generate requests

11:37:13.338 [info] Send request {:get, "3"}

11:37:13.339 [info] lb receive get from :client_b (1927)

11:37:13.339 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.339 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1928, observer: :observer}

11:37:13.339 [warning] :a Timeout for request: 1887

11:37:13.339 [warning] :a Timeout for request: 1887, but request not found.

11:37:13.340 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 1927}

11:37:13.340 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}], type: :get_response, req_id: 1926}}

11:37:13.340 [info] Latest entries: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.341 [info] Receive response of 1926 from a with [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.341 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 144, context: %KvStore.Context{vector_clock: %{a: 6402}}}]

11:37:13.341 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1926, key: "2", object: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}], sender: :a, type: :get_log}

11:37:13.341 [warning] :a Timeout for request: 1888

11:37:13.341 [info] Send request {:put, "4", 72, []}

11:37:13.341 [warning] :a Timeout for request: 1888, but request not found.

11:37:13.342 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 144, context: %KvStore.Context{vector_clock: %{a: 6402}}}], type: :get_response, req_id: 1927}}

11:37:13.342 [info] lb receive put from :client_a

11:37:13.342 [info] Latest entries: [%KvStore.CacheEntry{object: 144, context: %KvStore.Context{vector_clock: %{a: 6402}}}]

11:37:13.342 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1929, observer: :observer}

11:37:13.343 [info] Receive response of 1927 from a with [%KvStore.CacheEntry{object: 144, context: %KvStore.Context{vector_clock: %{a: 6402}}}]

11:37:13.343 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1927, key: "3", object: [%KvStore.CacheEntry{object: 144, context: %KvStore.Context{vector_clock: %{a: 6402}}}], sender: :a, type: :get_log}

11:37:13.343 [info] Send request {:get, "2"}

11:37:13.343 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 72, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1928}

11:37:13.344 [info] lb receive get from :client_b (1929)

11:37:13.344 [info] New objects are [%KvStore.CacheEntry{object: 72, context: %KvStore.Context{vector_clock: %{a: 6425}}}]

11:37:13.344 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1930, observer: :observer}

11:37:13.345 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 1929}

11:37:13.346 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1928, key: "4", object: 72, sender: :a, type: :put_log}

11:37:13.346 [info] Receive response of 1928 from a with context: %KvStore.Context{vector_clock: %{a: 6425}}

11:37:13.346 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.346 [info] Send request {:get, "3"}

11:37:13.347 [info] lb receive get from :client_a (1930)

11:37:13.347 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}], type: :get_response, req_id: 1929}}

11:37:13.347 [info] Latest entries: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.347 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1931, observer: :observer}

11:37:13.348 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 1930}

11:37:13.348 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1929, key: "2", object: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}], sender: :a, type: :get_log}

11:37:13.348 [info] Receive response of 1929 from a with [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.348 [info] Send request {:put, "3", 637, []}

11:37:13.349 [info] lb receive put from :client_b

11:37:13.349 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 144, context: %KvStore.Context{vector_clock: %{a: 6402}}}]

11:37:13.349 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1932, observer: :observer}

11:37:13.350 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 637, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1931}

11:37:13.350 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 144, context: %KvStore.Context{vector_clock: %{a: 6402}}}], type: :get_response, req_id: 1930}}

11:37:13.350 [info] Latest entries: [%KvStore.CacheEntry{object: 144, context: %KvStore.Context{vector_clock: %{a: 6402}}}]

11:37:13.351 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1930, key: "3", object: [%KvStore.CacheEntry{object: 144, context: %KvStore.Context{vector_clock: %{a: 6402}}}], sender: :a, type: :get_log}

11:37:13.351 [info] Receive response of 1930 from a with [%KvStore.CacheEntry{object: 144, context: %KvStore.Context{vector_clock: %{a: 6402}}}]

11:37:13.351 [info] generate requests

11:37:13.351 [info] New objects are [%KvStore.CacheEntry{object: 637, context: %KvStore.Context{vector_clock: %{a: 6433}}}]

11:37:13.351 [info] Send request {:get, "5"}

11:37:13.352 [info] lb receive get from :client_a (1932)

11:37:13.352 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1933, observer: :observer}

11:37:13.353 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 1932}

11:37:13.353 [info] Receive response of 1931 from a with context: %KvStore.Context{vector_clock: %{a: 6433}}

11:37:13.353 [info] generate requests

11:37:13.353 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1931, key: "3", object: 637, sender: :a, type: :put_log}

11:37:13.353 [info] Send request {:put, "4", 233, []}

11:37:13.354 [info] lb receive put from :client_b

11:37:13.354 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.354 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1934, observer: :observer}

11:37:13.354 [warning] :a Timeout for request: 1893

11:37:13.354 [warning] :a Timeout for request: 1893, but request not found.

11:37:13.355 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 233, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1933}

11:37:13.355 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}], type: :get_response, req_id: 1932}}

11:37:13.355 [info] Latest entries: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.356 [info] New objects are [%KvStore.CacheEntry{object: 233, context: %KvStore.Context{vector_clock: %{a: 6440}}}]

11:37:13.356 [info] Receive response of 1932 from a with [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.356 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1932, key: "5", object: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}], sender: :a, type: :get_log}

11:37:13.356 [info] Send request {:put, "1", 9, []}

11:37:13.357 [info] lb receive put from :client_a

11:37:13.357 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1935, observer: :observer}

11:37:13.358 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1933, key: "4", object: 233, sender: :a, type: :put_log}

11:37:13.358 [info] Receive response of 1933 from a with context: %KvStore.Context{vector_clock: %{a: 6440}}

11:37:13.358 [info] Send request {:get, "5"}

11:37:13.358 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 9, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1934}

11:37:13.359 [info] lb receive get from :client_b (1935)

11:37:13.359 [info] New objects are [%KvStore.CacheEntry{object: 9, context: %KvStore.Context{vector_clock: %{a: 6444}}}]

11:37:13.359 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1936, observer: :observer}

11:37:13.360 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 1935}

11:37:13.361 [info] Receive response of 1934 from a with context: %KvStore.Context{vector_clock: %{a: 6444}}

11:37:13.361 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1934, key: "1", object: 9, sender: :a, type: :put_log}

11:37:13.361 [info] Send request {:get, "5"}

11:37:13.361 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.361 [warning] :a Timeout for request: 1896

11:37:13.361 [warning] :a Timeout for request: 1896, but request not found.

11:37:13.362 [info] lb receive get from :client_a (1936)

11:37:13.362 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}], type: :get_response, req_id: 1935}}

11:37:13.362 [info] Latest entries: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.362 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1937, observer: :observer}

11:37:13.363 [info] Receive response of 1935 from a with [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.363 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 1936}

11:37:13.363 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1935, key: "5", object: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}], sender: :a, type: :get_log}

11:37:13.363 [info] Send request {:get, "2"}

11:37:13.364 [info] lb receive get from :client_b (1937)

11:37:13.364 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.364 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1938, observer: :observer}

11:37:13.365 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 1937}

11:37:13.365 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}], type: :get_response, req_id: 1936}}

11:37:13.365 [info] Latest entries: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.366 [info] Receive response of 1936 from a with [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.366 [info] generate requests

11:37:13.366 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1936, key: "5", object: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}], sender: :a, type: :get_log}

11:37:13.366 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.366 [info] Send request {:get, "1"}

11:37:13.367 [info] lb receive get from :client_a (1938)

11:37:13.367 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}], type: :get_response, req_id: 1937}}

11:37:13.367 [info] Latest entries: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.367 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1939, observer: :observer}

11:37:13.368 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 1938}

11:37:13.368 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1937, key: "2", object: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}], sender: :a, type: :get_log}

11:37:13.368 [info] Receive response of 1937 from a with [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.368 [info] generate requests

11:37:13.368 [info] Send request {:get, "3"}

11:37:13.369 [info] lb receive get from :client_b (1939)

11:37:13.369 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 9, context: %KvStore.Context{vector_clock: %{a: 6444}}}]

11:37:13.369 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1940, observer: :observer}

11:37:13.370 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 9, context: %KvStore.Context{vector_clock: %{a: 6444}}}], type: :get_response, req_id: 1938}}

11:37:13.370 [info] Latest entries: [%KvStore.CacheEntry{object: 9, context: %KvStore.Context{vector_clock: %{a: 6444}}}]

11:37:13.370 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 1939}

11:37:13.371 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1938, key: "1", object: [%KvStore.CacheEntry{object: 9, context: %KvStore.Context{vector_clock: %{a: 6444}}}], sender: :a, type: :get_log}

11:37:13.371 [info] Receive response of 1938 from a with [%KvStore.CacheEntry{object: 9, context: %KvStore.Context{vector_clock: %{a: 6444}}}]

11:37:13.371 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 637, context: %KvStore.Context{vector_clock: %{a: 6433}}}]

11:37:13.371 [info] Send request {:put, "1", 315, []}

11:37:13.372 [info] lb receive put from :client_a

11:37:13.372 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 637, context: %KvStore.Context{vector_clock: %{a: 6433}}}], type: :get_response, req_id: 1939}}

11:37:13.372 [info] Latest entries: [%KvStore.CacheEntry{object: 637, context: %KvStore.Context{vector_clock: %{a: 6433}}}]

11:37:13.372 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1941, observer: :observer}

11:37:13.373 [info] Receive response of 1939 from a with [%KvStore.CacheEntry{object: 637, context: %KvStore.Context{vector_clock: %{a: 6433}}}]

11:37:13.373 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1939, key: "3", object: [%KvStore.CacheEntry{object: 637, context: %KvStore.Context{vector_clock: %{a: 6433}}}], sender: :a, type: :get_log}

11:37:13.373 [info] Send request {:get, "5"}

11:37:13.373 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 315, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1940}

11:37:13.374 [info] New objects are [%KvStore.CacheEntry{object: 315, context: %KvStore.Context{vector_clock: %{a: 6463}}}]

11:37:13.374 [info] lb receive get from :client_b (1941)

11:37:13.374 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1942, observer: :observer}

11:37:13.374 [warning] :a Timeout for request: 1901

11:37:13.374 [warning] :a Timeout for request: 1901, but request not found.

11:37:13.375 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 1941}

11:37:13.376 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1940, key: "1", object: 315, sender: :a, type: :put_log}

11:37:13.376 [info] Receive response of 1940 from a with context: %KvStore.Context{vector_clock: %{a: 6463}}

11:37:13.376 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.376 [info] Send request {:get, "4"}

11:37:13.376 [warning] :a Timeout for request: 1902

11:37:13.376 [warning] :a Timeout for request: 1902, but request not found.

11:37:13.377 [info] lb receive get from :client_a (1942)

11:37:13.377 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}], type: :get_response, req_id: 1941}}

11:37:13.377 [info] Latest entries: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.377 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1943, observer: :observer}

11:37:13.378 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 1942}

11:37:13.378 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1941, key: "5", object: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}], sender: :a, type: :get_log}

11:37:13.378 [info] Receive response of 1941 from a with [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.378 [info] Send request {:put, "3", 501, []}

11:37:13.379 [info] lb receive put from :client_b

11:37:13.379 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 233, context: %KvStore.Context{vector_clock: %{a: 6440}}}]

11:37:13.379 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1944, observer: :observer}

11:37:13.380 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 233, context: %KvStore.Context{vector_clock: %{a: 6440}}}], type: :get_response, req_id: 1942}}

11:37:13.380 [info] Latest entries: [%KvStore.CacheEntry{object: 233, context: %KvStore.Context{vector_clock: %{a: 6440}}}]

11:37:13.380 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 501, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1943}

11:37:13.381 [info] Receive response of 1942 from a with [%KvStore.CacheEntry{object: 233, context: %KvStore.Context{vector_clock: %{a: 6440}}}]

11:37:13.381 [info] New objects are [%KvStore.CacheEntry{object: 501, context: %KvStore.Context{vector_clock: %{a: 6474}}}]

11:37:13.381 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1942, key: "4", object: [%KvStore.CacheEntry{object: 233, context: %KvStore.Context{vector_clock: %{a: 6440}}}], sender: :a, type: :get_log}

11:37:13.381 [info] generate requests

11:37:13.381 [info] Send request {:put, "3", 777, []}

11:37:13.382 [info] lb receive put from :client_a

11:37:13.382 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1945, observer: :observer}

11:37:13.383 [info] Receive response of 1943 from a with context: %KvStore.Context{vector_clock: %{a: 6474}}

11:37:13.383 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1943, key: "3", object: 501, sender: :a, type: :put_log}

11:37:13.383 [info] generate requests

11:37:13.383 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 777, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1944}

11:37:13.383 [info] Send request {:put, "4", 143, []}

11:37:13.386 [info] lb receive put from :client_b

11:37:13.386 [info] New objects are [%KvStore.CacheEntry{object: 777, context: %KvStore.Context{vector_clock: %{a: 6477}}}]

11:37:13.386 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1946, observer: :observer}

11:37:13.387 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 143, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1945}

11:37:13.388 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1944, key: "3", object: 777, sender: :a, type: :put_log}

11:37:13.388 [info] New objects are [%KvStore.CacheEntry{object: 143, context: %KvStore.Context{vector_clock: %{a: 6480}}}]

11:37:13.388 [info] Receive response of 1944 from a with context: %KvStore.Context{vector_clock: %{a: 6477}}

11:37:13.388 [info] Send request {:get, "3"}

11:37:13.389 [info] lb receive get from :client_a (1946)

11:37:13.389 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1947, observer: :observer}

11:37:13.389 [warning] :a Timeout for request: 1907

11:37:13.389 [warning] :a Timeout for request: 1907, but request not found.

11:37:13.390 [info] Receive response of 1945 from a with context: %KvStore.Context{vector_clock: %{a: 6480}}

11:37:13.390 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 1946}

11:37:13.390 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1945, key: "4", object: 143, sender: :a, type: :put_log}

11:37:13.390 [info] Send request {:get, "5"}

11:37:13.391 [info] lb receive get from :client_b (1947)

11:37:13.391 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 777, context: %KvStore.Context{vector_clock: %{a: 6477}}}]

11:37:13.391 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1948, observer: :observer}

11:37:13.391 [warning] :a Timeout for request: 1908

11:37:13.391 [warning] :a Timeout for request: 1908, but request not found.

11:37:13.392 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 777, context: %KvStore.Context{vector_clock: %{a: 6477}}}], type: :get_response, req_id: 1946}}

11:37:13.392 [info] Latest entries: [%KvStore.CacheEntry{object: 777, context: %KvStore.Context{vector_clock: %{a: 6477}}}]

11:37:13.392 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 1947}

11:37:13.393 [info] Receive response of 1946 from a with [%KvStore.CacheEntry{object: 777, context: %KvStore.Context{vector_clock: %{a: 6477}}}]

11:37:13.393 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1946, key: "3", object: [%KvStore.CacheEntry{object: 777, context: %KvStore.Context{vector_clock: %{a: 6477}}}], sender: :a, type: :get_log}

11:37:13.393 [info] Send request {:get, "5"}

11:37:13.393 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.394 [info] lb receive get from :client_a (1948)

11:37:13.394 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}], type: :get_response, req_id: 1947}}

11:37:13.394 [info] Latest entries: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.394 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1949, observer: :observer}

11:37:13.395 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 1948}

11:37:13.395 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1947, key: "5", object: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}], sender: :a, type: :get_log}

11:37:13.395 [info] Receive response of 1947 from a with [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.395 [info] Send request {:get, "2"}

11:37:13.396 [info] lb receive get from :client_b (1949)

11:37:13.396 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.396 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1950, observer: :observer}

11:37:13.397 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 1949}

11:37:13.397 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}], type: :get_response, req_id: 1948}}

11:37:13.397 [info] Latest entries: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.398 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1948, key: "5", object: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}], sender: :a, type: :get_log}

11:37:13.398 [info] Receive response of 1948 from a with [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.398 [info] generate requests

11:37:13.398 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.398 [info] Send request {:put, "1", 230, []}

11:37:13.399 [info] lb receive put from :client_a

11:37:13.399 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}], type: :get_response, req_id: 1949}}

11:37:13.399 [info] Latest entries: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.399 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1951, observer: :observer}

11:37:13.400 [info] Receive response of 1949 from a with [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.400 [info] generate requests

11:37:13.400 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1949, key: "2", object: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}], sender: :a, type: :get_log}

11:37:13.400 [info] Send request {:get, "1"}

11:37:13.400 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 230, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1950}

11:37:13.401 [info] lb receive get from :client_b (1951)

11:37:13.401 [info] New objects are [%KvStore.CacheEntry{object: 230, context: %KvStore.Context{vector_clock: %{a: 6497}}}]

11:37:13.401 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1952, observer: :observer}

11:37:13.401 [warning] :a Timeout for request: 1912

11:37:13.401 [warning] :a Timeout for request: 1912, but request not found.

11:37:13.402 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 1951}

11:37:13.403 [info] Receive response of 1950 from a with context: %KvStore.Context{vector_clock: %{a: 6497}}

11:37:13.403 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1950, key: "1", object: 230, sender: :a, type: :put_log}

11:37:13.403 [info] Send request {:get, "5"}

11:37:13.403 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 230, context: %KvStore.Context{vector_clock: %{a: 6497}}}]

11:37:13.404 [info] lb receive get from :client_a (1952)

11:37:13.404 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 230, context: %KvStore.Context{vector_clock: %{a: 6497}}}], type: :get_response, req_id: 1951}}

11:37:13.404 [info] Latest entries: [%KvStore.CacheEntry{object: 230, context: %KvStore.Context{vector_clock: %{a: 6497}}}]

11:37:13.404 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1953, observer: :observer}

11:37:13.404 [warning] :a Timeout for request: 1913

11:37:13.404 [warning] :a Timeout for request: 1913, but request not found.

11:37:13.405 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 1952}

11:37:13.405 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1951, key: "1", object: [%KvStore.CacheEntry{object: 230, context: %KvStore.Context{vector_clock: %{a: 6497}}}], sender: :a, type: :get_log}

11:37:13.405 [info] Receive response of 1951 from a with [%KvStore.CacheEntry{object: 230, context: %KvStore.Context{vector_clock: %{a: 6497}}}]

11:37:13.405 [info] Send request {:put, "4", 315, []}

11:37:13.406 [info] lb receive put from :client_b

11:37:13.406 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.406 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1954, observer: :observer}

11:37:13.407 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}], type: :get_response, req_id: 1952}}

11:37:13.407 [info] Latest entries: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.407 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 315, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1953}

11:37:13.408 [info] New objects are [%KvStore.CacheEntry{object: 315, context: %KvStore.Context{vector_clock: %{a: 6508}}}]

11:37:13.408 [info] Receive response of 1952 from a with [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}]

11:37:13.408 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1952, key: "5", object: [%KvStore.CacheEntry{object: 630, context: %KvStore.Context{vector_clock: %{a: 6383}}}], sender: :a, type: :get_log}

11:37:13.408 [info] Send request {:get, "2"}

11:37:13.409 [info] lb receive get from :client_a (1954)

11:37:13.409 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1955, observer: :observer}

11:37:13.410 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1953, key: "4", object: 315, sender: :a, type: :put_log}

11:37:13.410 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 1954}

11:37:13.410 [info] Receive response of 1953 from a with context: %KvStore.Context{vector_clock: %{a: 6508}}

11:37:13.410 [info] Send request {:get, "1"}

11:37:13.412 [info] lb receive get from :client_b (1955)

11:37:13.412 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.412 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1956, observer: :observer}

11:37:13.413 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 1955}

11:37:13.413 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}], type: :get_response, req_id: 1954}}

11:37:13.413 [info] Latest entries: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.414 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1954, key: "2", object: [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}], sender: :a, type: :get_log}

11:37:13.414 [info] Receive response of 1954 from a with [%KvStore.CacheEntry{object: 480, context: %KvStore.Context{vector_clock: %{a: 6399}}}]

11:37:13.414 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 230, context: %KvStore.Context{vector_clock: %{a: 6497}}}]

11:37:13.414 [info] generate requests

11:37:13.414 [warning] :a Timeout for request: 1917

11:37:13.414 [warning] :a Timeout for request: 1917, but request not found.

11:37:13.414 [info] Send request {:get, "4"}

11:37:13.415 [info] lb receive get from :client_a (1956)

11:37:13.415 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 230, context: %KvStore.Context{vector_clock: %{a: 6497}}}], type: :get_response, req_id: 1955}}

11:37:13.415 [info] Latest entries: [%KvStore.CacheEntry{object: 230, context: %KvStore.Context{vector_clock: %{a: 6497}}}]

11:37:13.415 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1957, observer: :observer}

11:37:13.416 [info] Receive response of 1955 from a with [%KvStore.CacheEntry{object: 230, context: %KvStore.Context{vector_clock: %{a: 6497}}}]

11:37:13.416 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 1956}

11:37:13.416 [info] generate requests

11:37:13.416 [info] Send request {:get, "4"}

11:37:13.416 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1955, key: "1", object: [%KvStore.CacheEntry{object: 230, context: %KvStore.Context{vector_clock: %{a: 6497}}}], sender: :a, type: :get_log}

11:37:13.417 [info] lb receive get from :client_b (1957)

11:37:13.417 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 315, context: %KvStore.Context{vector_clock: %{a: 6508}}}]

11:37:13.417 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1958, observer: :observer}

11:37:13.418 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 315, context: %KvStore.Context{vector_clock: %{a: 6508}}}], type: :get_response, req_id: 1956}}

11:37:13.418 [info] Latest entries: [%KvStore.CacheEntry{object: 315, context: %KvStore.Context{vector_clock: %{a: 6508}}}]

11:37:13.418 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 1957}

11:37:13.419 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1956, key: "4", object: [%KvStore.CacheEntry{object: 315, context: %KvStore.Context{vector_clock: %{a: 6508}}}], sender: :a, type: :get_log}

11:37:13.419 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 315, context: %KvStore.Context{vector_clock: %{a: 6508}}}]

11:37:13.419 [info] Receive response of 1956 from a with [%KvStore.CacheEntry{object: 315, context: %KvStore.Context{vector_clock: %{a: 6508}}}]

11:37:13.419 [info] Send request {:put, "2", 471, []}

11:37:13.420 [info] lb receive put from :client_a

11:37:13.420 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 315, context: %KvStore.Context{vector_clock: %{a: 6508}}}], type: :get_response, req_id: 1957}}

11:37:13.420 [info] Latest entries: [%KvStore.CacheEntry{object: 315, context: %KvStore.Context{vector_clock: %{a: 6508}}}]

11:37:13.420 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1959, observer: :observer}

11:37:13.421 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1957, key: "4", object: [%KvStore.CacheEntry{object: 315, context: %KvStore.Context{vector_clock: %{a: 6508}}}], sender: :a, type: :get_log}

11:37:13.421 [info] Receive response of 1957 from a with [%KvStore.CacheEntry{object: 315, context: %KvStore.Context{vector_clock: %{a: 6508}}}]

11:37:13.421 [info] Send request {:get, "2"}

11:37:13.421 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 471, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 1958}

11:37:13.421 [warning] :a Timeout for request: 1920

11:37:13.421 [warning] :a Timeout for request: 1920, but request not found.

11:37:13.422 [info] lb receive get from :client_b (1959)

11:37:13.422 [info] New objects are [%KvStore.CacheEntry{object: 471, context: %KvStore.Context{vector_clock: %{a: 6524}}}]

11:37:13.422 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1960, observer: :observer}

11:37:13.423 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 1959}

11:37:13.424 [info] Receive response of 1958 from a with context: %KvStore.Context{vector_clock: %{a: 6524}}

11:37:13.424 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 471, context: %KvStore.Context{vector_clock: %{a: 6524}}}]

11:37:13.424 [info] Send request {:get, "1"}

11:37:13.424 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1958, key: "2", object: 471, sender: :a, type: :put_log}

11:37:13.424 [warning] :a Timeout for request: 1921

11:37:13.424 [warning] :a Timeout for request: 1921, but request not found.

11:37:13.425 [info] lb receive get from :client_a (1960)

11:37:13.425 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 471, context: %KvStore.Context{vector_clock: %{a: 6524}}}], type: :get_response, req_id: 1959}}

11:37:13.425 [info] Latest entries: [%KvStore.CacheEntry{object: 471, context: %KvStore.Context{vector_clock: %{a: 6524}}}]

11:37:13.426 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1961, observer: :observer}

11:37:13.426 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 1960}

11:37:13.426 [info] Receive response of 1959 from a with [%KvStore.CacheEntry{object: 471, context: %KvStore.Context{vector_clock: %{a: 6524}}}]

11:37:13.426 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1959, key: "2", object: [%KvStore.CacheEntry{object: 471, context: %KvStore.Context{vector_clock: %{a: 6524}}}], sender: :a, type: :get_log}

11:37:13.426 [info] Send request {:put, "4", 935, []}

11:37:13.426 [warning] :a Timeout for request: 1922

11:37:13.426 [warning] :a Timeout for request: 1922, but request not found.

11:37:13.427 [info] lb receive put from :client_b

11:37:13.427 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 230, context: %KvStore.Context{vector_clock: %{a: 6497}}}]

11:37:13.427 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1962, observer: :observer}

11:37:13.428 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 935, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 1961}

11:37:13.428 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 230, context: %KvStore.Context{vector_clock: %{a: 6497}}}], type: :get_response, req_id: 1960}}

11:37:13.428 [info] Latest entries: [%KvStore.CacheEntry{object: 230, context: %KvStore.Context{vector_clock: %{a: 6497}}}]

11:37:13.429 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1960, key: "1", object: [%KvStore.CacheEntry{object: 230, context: %KvStore.Context{vector_clock: %{a: 6497}}}], sender: :a, type: :get_log}

11:37:13.429 [info] New objects are [%KvStore.CacheEntry{object: 935, context: %KvStore.Context{vector_clock: %{a: 6535}}}]

11:37:13.429 [info] Receive response of 1960 from a with [%KvStore.CacheEntry{object: 230, context: %KvStore.Context{vector_clock: %{a: 6497}}}]

11:37:13.429 [info] generate requests

11:37:13.429 [info] Send request {:get, "4"}

11:37:13.430 [info] lb receive get from :client_a (1962)

11:37:13.430 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1963, observer: :observer}

11:37:13.431 [info] Receive response of 1961 from a with context: %KvStore.Context{vector_clock: %{a: 6535}}

11:37:13.431 [info] generate requests

11:37:13.431 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 1962}

11:37:13.431 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 1961, key: "4", object: 935, sender: :a, type: :put_log}

11:37:13.431 [info] Send request {:get, "1"}

11:37:13.432 [info] lb receive get from :client_b (1963)

11:37:13.432 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 935, context: %KvStore.Context{vector_clock: %{a: 6535}}}]

11:37:13.432 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1964, observer: :observer}

11:37:13.433 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 1963}

11:37:13.433 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 935, context: %KvStore.Context{vector_clock: %{a: 6535}}}], type: :get_response, req_id: 1962}}

11:37:13.433 [info] Latest entries: [%KvStore.CacheEntry{object: 935, context: %KvStore.Context{vector_clock: %{a: 6535}}}]

11:37:13.434 [info] Receive response of 1962 from a with [%KvStore.CacheEntry{object: 935, context: %KvStore.Context{vector_clock: %{a: 6535}}}]

11:37:13.434 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 1962, key: "4", object: [%KvStore.CacheEntry{object: 935, context: %KvStore.Context{vector_clock: %{a: 6535}}}], sender: :a, type: :get_log}

11:37:13.434 [info] Send request {:get, "2"}

11:37:13.434 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 230, context: %KvStore.Context{vector_clock: %{a: 6497}}}]

11:37:13.435 [info] lb receive get from :client_a (1964)

11:37:13.435 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 230, context: %KvStore.Context{vector_clock: %{a: 6497}}}], type: :get_response, req_id: 1963}}

11:37:13.435 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 1965, observer: :observer}

11:37:13.435 [info] Latest entries: [%KvStore.CacheEntry{object: 230, context: %KvStore.Context{vector_clock: %{a: 6497}}}]

11:37:14.299 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 2302}

11:37:14.299 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 797, context: %KvStore.Context{vector_clock: %{a: 7644}}}], type: :get_response, req_id: 2301}}

11:37:14.299 [info] Latest entries: [%KvStore.CacheEntry{object: 797, context: %KvStore.Context{vector_clock: %{a: 7644}}}]

11:37:14.300 [info] Receive response of 2301 from a with [%KvStore.CacheEntry{object: 797, context: %KvStore.Context{vector_clock: %{a: 7644}}}]

11:37:14.300 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2301, key: "1", object: [%KvStore.CacheEntry{object: 797, context: %KvStore.Context{vector_clock: %{a: 7644}}}], sender: :a, type: :get_log}

11:37:14.300 [info] Send request {:get, "5"}

11:37:14.300 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.301 [info] lb receive get from :client_b (2303)

11:37:14.301 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}], type: :get_response, req_id: 2302}}

11:37:14.301 [info] Latest entries: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.301 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2304, observer: :observer}

11:37:14.302 [info] Receive response of 2302 from a with [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.302 [info] generate requests

11:37:14.302 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2302, key: "2", object: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}], sender: :a, type: :get_log}

11:37:14.302 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 2303}

11:37:14.302 [info] Send request {:get, "2"}

11:37:14.302 [warning] :a Timeout for request: 2264

11:37:14.302 [warning] :a Timeout for request: 2264, but request not found.

11:37:14.303 [info] lb receive get from :client_a (2304)

11:37:14.303 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 805, context: %KvStore.Context{vector_clock: %{a: 7667}}}]

11:37:14.303 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2305, observer: :observer}

11:37:14.304 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 2304}

11:37:14.304 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 805, context: %KvStore.Context{vector_clock: %{a: 7667}}}], type: :get_response, req_id: 2303}}

11:37:14.304 [info] Latest entries: [%KvStore.CacheEntry{object: 805, context: %KvStore.Context{vector_clock: %{a: 7667}}}]

11:37:14.305 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.305 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2303, key: "5", object: [%KvStore.CacheEntry{object: 805, context: %KvStore.Context{vector_clock: %{a: 7667}}}], sender: :a, type: :get_log}

11:37:14.305 [info] Receive response of 2303 from a with [%KvStore.CacheEntry{object: 805, context: %KvStore.Context{vector_clock: %{a: 7667}}}]

11:37:14.305 [info] generate requests

11:37:14.305 [info] Send request {:put, "3", 38, []}

11:37:14.306 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}], type: :get_response, req_id: 2304}}

11:37:14.306 [info] Latest entries: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.306 [info] lb receive put from :client_b

11:37:14.307 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2306, observer: :observer}

11:37:14.307 [info] Receive response of 2304 from a with [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.307 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2304, key: "2", object: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}], sender: :a, type: :get_log}

11:37:14.307 [info] Send request {:put, "4", 579, []}

11:37:14.307 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 38, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 2305}

11:37:14.308 [info] lb receive put from :client_a

11:37:14.308 [info] New objects are [%KvStore.CacheEntry{object: 38, context: %KvStore.Context{vector_clock: %{a: 7683}}}]

11:37:14.308 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2307, observer: :observer}

11:37:14.309 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 579, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 2306}

11:37:14.309 [warning] :a Timeout for request: 2267

11:37:14.309 [warning] :a Timeout for request: 2267, but request not found.

11:37:14.310 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2305, key: "3", object: 38, sender: :a, type: :put_log}

11:37:14.310 [info] New objects are [%KvStore.CacheEntry{object: 579, context: %KvStore.Context{vector_clock: %{a: 7685}}}]

11:37:14.310 [info] Receive response of 2305 from a with context: %KvStore.Context{vector_clock: %{a: 7683}}

11:37:14.310 [info] Send request {:get, "2"}

11:37:14.311 [info] lb receive get from :client_b (2307)

11:37:14.311 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2308, observer: :observer}

11:37:14.312 [info] Receive response of 2306 from a with context: %KvStore.Context{vector_clock: %{a: 7685}}

11:37:14.312 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2306, key: "4", object: 579, sender: :a, type: :put_log}

11:37:14.312 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 2307}

11:37:14.312 [info] Send request {:get, "1"}

11:37:14.313 [info] lb receive get from :client_a (2308)

11:37:14.313 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.313 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2309, observer: :observer}

11:37:14.314 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 2308}

11:37:14.314 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}], type: :get_response, req_id: 2307}}

11:37:14.314 [info] Latest entries: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.315 [info] Receive response of 2307 from a with [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.315 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2307, key: "2", object: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}], sender: :a, type: :get_log}

11:37:14.315 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 797, context: %KvStore.Context{vector_clock: %{a: 7644}}}]

11:37:14.315 [info] Send request {:get, "1"}

11:37:14.316 [info] lb receive get from :client_b (2309)

11:37:14.316 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 797, context: %KvStore.Context{vector_clock: %{a: 7644}}}], type: :get_response, req_id: 2308}}

11:37:14.316 [info] Latest entries: [%KvStore.CacheEntry{object: 797, context: %KvStore.Context{vector_clock: %{a: 7644}}}]

11:37:14.316 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2310, observer: :observer}

11:37:14.317 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 2309}

11:37:14.317 [info] Receive response of 2308 from a with [%KvStore.CacheEntry{object: 797, context: %KvStore.Context{vector_clock: %{a: 7644}}}]

11:37:14.317 [info] generate requests

11:37:14.317 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2308, key: "1", object: [%KvStore.CacheEntry{object: 797, context: %KvStore.Context{vector_clock: %{a: 7644}}}], sender: :a, type: :get_log}

11:37:14.317 [info] Send request {:get, "4"}

11:37:14.318 [info] lb receive get from :client_a (2310)

11:37:14.318 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 797, context: %KvStore.Context{vector_clock: %{a: 7644}}}]

11:37:14.318 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2311, observer: :observer}

11:37:14.319 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 2310}

11:37:14.319 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 797, context: %KvStore.Context{vector_clock: %{a: 7644}}}], type: :get_response, req_id: 2309}}

11:37:14.319 [info] Latest entries: [%KvStore.CacheEntry{object: 797, context: %KvStore.Context{vector_clock: %{a: 7644}}}]

11:37:14.320 [info] Receive response of 2309 from a with [%KvStore.CacheEntry{object: 797, context: %KvStore.Context{vector_clock: %{a: 7644}}}]

11:37:14.320 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2309, key: "1", object: [%KvStore.CacheEntry{object: 797, context: %KvStore.Context{vector_clock: %{a: 7644}}}], sender: :a, type: :get_log}

11:37:14.320 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 579, context: %KvStore.Context{vector_clock: %{a: 7685}}}]

11:37:14.320 [info] generate requests

11:37:14.321 [info] Send request {:put, "4", 190, []}

11:37:14.321 [info] lb receive put from :client_b

11:37:14.321 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 579, context: %KvStore.Context{vector_clock: %{a: 7685}}}], type: :get_response, req_id: 2310}}

11:37:14.321 [info] Latest entries: [%KvStore.CacheEntry{object: 579, context: %KvStore.Context{vector_clock: %{a: 7685}}}]

11:37:14.321 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2312, observer: :observer}

11:37:14.322 [info] Receive response of 2310 from a with [%KvStore.CacheEntry{object: 579, context: %KvStore.Context{vector_clock: %{a: 7685}}}]

11:37:14.322 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2310, key: "4", object: [%KvStore.CacheEntry{object: 579, context: %KvStore.Context{vector_clock: %{a: 7685}}}], sender: :a, type: :get_log}

11:37:14.322 [info] Send request {:get, "1"}

11:37:14.322 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 190, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 2311}

11:37:14.322 [warning] :a Timeout for request: 2272

11:37:14.322 [warning] :a Timeout for request: 2272, but request not found.

11:37:14.323 [info] lb receive get from :client_a (2312)

11:37:14.323 [info] New objects are [%KvStore.CacheEntry{object: 190, context: %KvStore.Context{vector_clock: %{a: 7702}}}]

11:37:14.323 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2313, observer: :observer}

11:37:14.324 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 2312}

11:37:14.324 [warning] :a Timeout for request: 2273

11:37:14.324 [warning] :a Timeout for request: 2273, but request not found.

11:37:14.325 [info] Receive response of 2311 from a with context: %KvStore.Context{vector_clock: %{a: 7702}}

11:37:14.325 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2311, key: "4", object: 190, sender: :a, type: :put_log}

11:37:14.325 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 797, context: %KvStore.Context{vector_clock: %{a: 7644}}}]

11:37:14.325 [info] Send request {:get, "4"}

11:37:14.326 [info] lb receive get from :client_b (2313)

11:37:14.326 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 797, context: %KvStore.Context{vector_clock: %{a: 7644}}}], type: :get_response, req_id: 2312}}

11:37:14.326 [info] Latest entries: [%KvStore.CacheEntry{object: 797, context: %KvStore.Context{vector_clock: %{a: 7644}}}]

11:37:14.326 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2314, observer: :observer}

11:37:14.327 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 2313}

11:37:14.327 [info] Receive response of 2312 from a with [%KvStore.CacheEntry{object: 797, context: %KvStore.Context{vector_clock: %{a: 7644}}}]

11:37:14.327 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2312, key: "1", object: [%KvStore.CacheEntry{object: 797, context: %KvStore.Context{vector_clock: %{a: 7644}}}], sender: :a, type: :get_log}

11:37:14.327 [info] Send request {:put, "1", 801, []}

11:37:14.328 [info] lb receive put from :client_a

11:37:14.328 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 190, context: %KvStore.Context{vector_clock: %{a: 7702}}}]

11:37:14.328 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2315, observer: :observer}

11:37:14.329 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 801, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 2314}

11:37:14.329 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 190, context: %KvStore.Context{vector_clock: %{a: 7702}}}], type: :get_response, req_id: 2313}}

11:37:14.329 [info] Latest entries: [%KvStore.CacheEntry{object: 190, context: %KvStore.Context{vector_clock: %{a: 7702}}}]

11:37:14.330 [info] Receive response of 2313 from a with [%KvStore.CacheEntry{object: 190, context: %KvStore.Context{vector_clock: %{a: 7702}}}]

11:37:14.330 [info] New objects are [%KvStore.CacheEntry{object: 801, context: %KvStore.Context{vector_clock: %{a: 7712}}}]

11:37:14.330 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2313, key: "4", object: [%KvStore.CacheEntry{object: 190, context: %KvStore.Context{vector_clock: %{a: 7702}}}], sender: :a, type: :get_log}

11:37:14.330 [info] Send request {:get, "2"}

11:37:14.331 [info] lb receive get from :client_b (2315)

11:37:14.331 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2316, observer: :observer}

11:37:14.332 [info] Receive response of 2314 from a with context: %KvStore.Context{vector_clock: %{a: 7712}}

11:37:14.332 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 2315}

11:37:14.332 [info] generate requests

11:37:14.332 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2314, key: "1", object: 801, sender: :a, type: :put_log}

11:37:14.332 [info] Send request {:put, "4", 407, []}

11:37:14.332 [warning] :a Timeout for request: 2276

11:37:14.332 [warning] :a Timeout for request: 2276, but request not found.

11:37:14.333 [info] lb receive put from :client_a

11:37:14.333 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.333 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2317, observer: :observer}

11:37:14.334 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 407, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 2316}

11:37:14.334 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}], type: :get_response, req_id: 2315}}

11:37:14.334 [info] Latest entries: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.335 [info] New objects are [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}]

11:37:14.335 [info] Receive response of 2315 from a with [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.335 [info] generate requests

11:37:14.335 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2315, key: "2", object: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}], sender: :a, type: :get_log}

11:37:14.335 [info] Send request {:get, "3"}

11:37:14.336 [info] lb receive get from :client_b (2317)

11:37:14.336 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2318, observer: :observer}

11:37:14.337 [info] Receive response of 2316 from a with context: %KvStore.Context{vector_clock: %{a: 7719}}

11:37:14.337 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 2317}

11:37:14.337 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2316, key: "4", object: 407, sender: :a, type: :put_log}

11:37:14.337 [info] Send request {:get, "4"}

11:37:14.338 [info] lb receive get from :client_a (2318)

11:37:14.338 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 38, context: %KvStore.Context{vector_clock: %{a: 7683}}}]

11:37:14.338 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2319, observer: :observer}

11:37:14.339 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 2318}

11:37:14.339 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 38, context: %KvStore.Context{vector_clock: %{a: 7683}}}], type: :get_response, req_id: 2317}}

11:37:14.339 [info] Latest entries: [%KvStore.CacheEntry{object: 38, context: %KvStore.Context{vector_clock: %{a: 7683}}}]

11:37:14.339 [warning] :a Timeout for request: 2279

11:37:14.339 [warning] :a Timeout for request: 2279, but request not found.

11:37:14.340 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2317, key: "3", object: [%KvStore.CacheEntry{object: 38, context: %KvStore.Context{vector_clock: %{a: 7683}}}], sender: :a, type: :get_log}

11:37:14.340 [info] Receive response of 2317 from a with [%KvStore.CacheEntry{object: 38, context: %KvStore.Context{vector_clock: %{a: 7683}}}]

11:37:14.340 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}]

11:37:14.340 [info] Send request {:get, "2"}

11:37:14.341 [info] lb receive get from :client_b (2319)

11:37:14.341 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}], type: :get_response, req_id: 2318}}

11:37:14.341 [info] Latest entries: [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}]

11:37:14.341 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2320, observer: :observer}

11:37:14.342 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 2319}

11:37:14.342 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2318, key: "4", object: [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}], sender: :a, type: :get_log}

11:37:14.342 [info] Receive response of 2318 from a with [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}]

11:37:14.342 [info] Send request {:get, "1"}

11:37:14.343 [info] lb receive get from :client_a (2320)

11:37:14.343 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.343 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2321, observer: :observer}

11:37:14.344 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 2320}

11:37:14.344 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}], type: :get_response, req_id: 2319}}

11:37:14.344 [info] Latest entries: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.345 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2319, key: "2", object: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}], sender: :a, type: :get_log}

11:37:14.345 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 801, context: %KvStore.Context{vector_clock: %{a: 7712}}}]

11:37:14.345 [info] Receive response of 2319 from a with [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.345 [info] Send request {:put, "1", 935, []}

11:37:14.346 [info] lb receive put from :client_b

11:37:14.346 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 801, context: %KvStore.Context{vector_clock: %{a: 7712}}}], type: :get_response, req_id: 2320}}

11:37:14.347 [info] Latest entries: [%KvStore.CacheEntry{object: 801, context: %KvStore.Context{vector_clock: %{a: 7712}}}]

11:37:14.347 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2322, observer: :observer}

11:37:14.347 [info] Receive response of 2320 from a with [%KvStore.CacheEntry{object: 801, context: %KvStore.Context{vector_clock: %{a: 7712}}}]

11:37:14.347 [info] generate requests

11:37:14.347 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2320, key: "1", object: [%KvStore.CacheEntry{object: 801, context: %KvStore.Context{vector_clock: %{a: 7712}}}], sender: :a, type: :get_log}

11:37:14.347 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 935, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 2321}

11:37:14.347 [warning] :a Timeout for request: 2282

11:37:14.347 [warning] :a Timeout for request: 2282, but request not found.

11:37:14.347 [info] Send request {:get, "5"}

11:37:14.348 [info] lb receive get from :client_a (2322)

11:37:14.348 [info] New objects are [%KvStore.CacheEntry{object: 935, context: %KvStore.Context{vector_clock: %{a: 7736}}}]

11:37:14.348 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2323, observer: :observer}

11:37:14.349 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 2322}

11:37:14.350 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2321, key: "1", object: 935, sender: :a, type: :put_log}

11:37:14.350 [info] Receive response of 2321 from a with context: %KvStore.Context{vector_clock: %{a: 7736}}

11:37:14.350 [info] generate requests

11:37:14.350 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 805, context: %KvStore.Context{vector_clock: %{a: 7667}}}]

11:37:14.350 [info] Send request {:put, "3", 33, []}

11:37:14.351 [info] lb receive put from :client_b

11:37:14.351 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 805, context: %KvStore.Context{vector_clock: %{a: 7667}}}], type: :get_response, req_id: 2322}}

11:37:14.351 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2324, observer: :observer}

11:37:14.351 [info] Latest entries: [%KvStore.CacheEntry{object: 805, context: %KvStore.Context{vector_clock: %{a: 7667}}}]

11:37:14.352 [info] Receive response of 2322 from a with [%KvStore.CacheEntry{object: 805, context: %KvStore.Context{vector_clock: %{a: 7667}}}]

11:37:14.352 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 33, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 2323}

11:37:14.352 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2322, key: "5", object: [%KvStore.CacheEntry{object: 805, context: %KvStore.Context{vector_clock: %{a: 7667}}}], sender: :a, type: :get_log}

11:37:14.352 [info] Send request {:put, "1", 821, []}

11:37:14.353 [info] lb receive put from :client_a

11:37:14.353 [info] New objects are [%KvStore.CacheEntry{object: 33, context: %KvStore.Context{vector_clock: %{a: 7743}}}]

11:37:14.353 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2325, observer: :observer}

11:37:14.354 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 821, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 2324}

11:37:14.354 [warning] :a Timeout for request: 2285

11:37:14.354 [warning] :a Timeout for request: 2285, but request not found.

11:37:14.355 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2323, key: "3", object: 33, sender: :a, type: :put_log}

11:37:14.355 [info] Receive response of 2323 from a with context: %KvStore.Context{vector_clock: %{a: 7743}}

11:37:14.355 [info] New objects are [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}]

11:37:14.355 [info] Send request {:get, "3"}

11:37:14.356 [info] lb receive get from :client_b (2325)

11:37:14.356 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2326, observer: :observer}

11:37:14.357 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 2325}

11:37:14.357 [info] Receive response of 2324 from a with context: %KvStore.Context{vector_clock: %{a: 7746}}

11:37:14.357 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2324, key: "1", object: 821, sender: :a, type: :put_log}

11:37:14.357 [info] Send request {:get, "1"}

11:37:14.358 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 33, context: %KvStore.Context{vector_clock: %{a: 7743}}}]

11:37:14.359 [info] lb receive get from :client_a (2326)

11:37:14.359 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2327, observer: :observer}

11:37:14.360 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 33, context: %KvStore.Context{vector_clock: %{a: 7743}}}], type: :get_response, req_id: 2325}}

11:37:14.360 [info] Latest entries: [%KvStore.CacheEntry{object: 33, context: %KvStore.Context{vector_clock: %{a: 7743}}}]

11:37:14.361 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 2326}

11:37:14.361 [info] Receive response of 2325 from a with [%KvStore.CacheEntry{object: 33, context: %KvStore.Context{vector_clock: %{a: 7743}}}]

11:37:14.361 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2325, key: "3", object: [%KvStore.CacheEntry{object: 33, context: %KvStore.Context{vector_clock: %{a: 7743}}}], sender: :a, type: :get_log}

11:37:14.361 [info] Send request {:get, "2"}

11:37:14.361 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}]

11:37:14.362 [info] lb receive get from :client_b (2327)

11:37:14.362 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}], type: :get_response, req_id: 2326}}

11:37:14.362 [info] Latest entries: [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}]

11:37:14.362 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2328, observer: :observer}

11:37:14.363 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 2327}

11:37:14.363 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2326, key: "1", object: [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}], sender: :a, type: :get_log}

11:37:14.363 [info] Receive response of 2326 from a with [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}]

11:37:14.363 [info] generate requests

11:37:14.363 [info] Send request {:get, "1"}

11:37:14.364 [info] lb receive get from :client_a (2328)

11:37:14.364 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.364 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2329, observer: :observer}

11:37:14.365 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}], type: :get_response, req_id: 2327}}

11:37:14.365 [info] Latest entries: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.365 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 2328}

11:37:14.366 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2327, key: "2", object: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}], sender: :a, type: :get_log}

11:37:14.366 [info] Receive response of 2327 from a with [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.366 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}]

11:37:14.366 [info] generate requests

11:37:14.366 [info] Send request {:put, "5", 419, []}

11:37:14.367 [info] lb receive put from :client_b

11:37:14.367 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}], type: :get_response, req_id: 2328}}

11:37:14.367 [info] Latest entries: [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}]

11:37:14.367 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2330, observer: :observer}

11:37:14.367 [warning] :a Timeout for request: 2290

11:37:14.367 [warning] :a Timeout for request: 2290, but request not found.

11:37:14.368 [info] Receive response of 2328 from a with [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}]

11:37:14.368 [info] Send request {:get, "4"}

11:37:14.368 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 419, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 2329}

11:37:14.368 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2328, key: "1", object: [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}], sender: :a, type: :get_log}

11:37:14.369 [info] lb receive get from :client_a (2330)

11:37:14.369 [info] New objects are [%KvStore.CacheEntry{object: 419, context: %KvStore.Context{vector_clock: %{a: 7763}}}]

11:37:14.369 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2331, observer: :observer}

11:37:14.369 [warning] :a Timeout for request: 2291

11:37:14.369 [warning] :a Timeout for request: 2291, but request not found.

11:37:14.370 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 2330}

11:37:14.371 [info] Receive response of 2329 from a with context: %KvStore.Context{vector_clock: %{a: 7763}}

11:37:14.371 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2329, key: "5", object: 419, sender: :a, type: :put_log}

11:37:14.371 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}]

11:37:14.371 [info] Send request {:get, "2"}

11:37:14.372 [info] lb receive get from :client_b (2331)

11:37:14.372 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}], type: :get_response, req_id: 2330}}

11:37:14.372 [info] Latest entries: [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}]

11:37:14.372 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2332, observer: :observer}

11:37:14.373 [info] Receive response of 2330 from a with [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}]

11:37:14.373 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2330, key: "4", object: [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}], sender: :a, type: :get_log}

11:37:14.373 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 2331}

11:37:14.373 [info] Send request {:put, "3", 182, []}

11:37:14.374 [info] lb receive put from :client_a

11:37:14.374 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.374 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2333, observer: :observer}

11:37:14.375 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}], type: :get_response, req_id: 2331}}

11:37:14.375 [info] Latest entries: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.375 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 182, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 2332}

11:37:14.376 [info] New objects are [%KvStore.CacheEntry{object: 182, context: %KvStore.Context{vector_clock: %{a: 7773}}}]

11:37:14.376 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2331, key: "2", object: [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}], sender: :a, type: :get_log}

11:37:14.376 [info] Receive response of 2331 from a with [%KvStore.CacheEntry{object: 756, context: %KvStore.Context{vector_clock: %{a: 7663}}}]

11:37:14.376 [info] Send request {:get, "4"}

11:37:14.377 [info] lb receive get from :client_b (2333)

11:37:14.377 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2334, observer: :observer}

11:37:14.377 [warning] :a Timeout for request: 2294

11:37:14.377 [warning] :a Timeout for request: 2294, but request not found.

11:37:14.378 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2332, key: "3", object: 182, sender: :a, type: :put_log}

11:37:14.378 [info] Receive response of 2332 from a with context: %KvStore.Context{vector_clock: %{a: 7773}}

11:37:14.378 [info] generate requests

11:37:14.378 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 2333}

11:37:14.378 [info] Send request {:put, "2", 144, []}

11:37:14.379 [info] lb receive put from :client_a

11:37:14.379 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}]

11:37:14.379 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2335, observer: :observer}

11:37:14.380 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 144, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 2334}

11:37:14.380 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}], type: :get_response, req_id: 2333}}

11:37:14.380 [info] Latest entries: [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}]

11:37:14.381 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2333, key: "4", object: [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}], sender: :a, type: :get_log}

11:37:14.381 [info] New objects are [%KvStore.CacheEntry{object: 144, context: %KvStore.Context{vector_clock: %{a: 7779}}}]

11:37:14.381 [info] Receive response of 2333 from a with [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}]

11:37:14.381 [info] generate requests

11:37:14.381 [info] Send request {:get, "3"}

11:37:14.382 [info] lb receive get from :client_b (2335)

11:37:14.382 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2336, observer: :observer}

11:37:14.383 [info] Receive response of 2334 from a with context: %KvStore.Context{vector_clock: %{a: 7779}}

11:37:14.383 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 2335}

11:37:14.383 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2334, key: "2", object: 144, sender: :a, type: :put_log}

11:37:14.383 [info] Send request {:get, "5"}

11:37:14.384 [info] lb receive get from :client_a (2336)

11:37:14.384 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 182, context: %KvStore.Context{vector_clock: %{a: 7773}}}]

11:37:14.384 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2337, observer: :observer}

11:37:14.385 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 2336}

11:37:14.385 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 182, context: %KvStore.Context{vector_clock: %{a: 7773}}}], type: :get_response, req_id: 2335}}

11:37:14.385 [info] Latest entries: [%KvStore.CacheEntry{object: 182, context: %KvStore.Context{vector_clock: %{a: 7773}}}]

11:37:14.386 [warning] :a Timeout for request: 2297

11:37:14.386 [warning] :a Timeout for request: 2297, but request not found.

11:37:14.386 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 419, context: %KvStore.Context{vector_clock: %{a: 7763}}}]

11:37:14.386 [info] Receive response of 2335 from a with [%KvStore.CacheEntry{object: 182, context: %KvStore.Context{vector_clock: %{a: 7773}}}]

11:37:14.387 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2335, key: "3", object: [%KvStore.CacheEntry{object: 182, context: %KvStore.Context{vector_clock: %{a: 7773}}}], sender: :a, type: :get_log}

11:37:14.387 [info] Send request {:put, "2", 914, []}

11:37:14.387 [info] lb receive put from :client_b

11:37:14.387 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 419, context: %KvStore.Context{vector_clock: %{a: 7763}}}], type: :get_response, req_id: 2336}}

11:37:14.387 [info] Latest entries: [%KvStore.CacheEntry{object: 419, context: %KvStore.Context{vector_clock: %{a: 7763}}}]

11:37:14.387 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2338, observer: :observer}

11:37:14.388 [info] Receive response of 2336 from a with [%KvStore.CacheEntry{object: 419, context: %KvStore.Context{vector_clock: %{a: 7763}}}]

11:37:14.388 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2336, key: "5", object: [%KvStore.CacheEntry{object: 419, context: %KvStore.Context{vector_clock: %{a: 7763}}}], sender: :a, type: :get_log}

11:37:14.388 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 914, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 2337}

11:37:14.388 [info] Send request {:get, "2"}

11:37:14.389 [info] lb receive get from :client_a (2338)

11:37:14.389 [info] New objects are [%KvStore.CacheEntry{object: 914, context: %KvStore.Context{vector_clock: %{a: 7790}}}]

11:37:14.389 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2339, observer: :observer}

11:37:14.390 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 2338}

11:37:14.391 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2337, key: "2", object: 914, sender: :a, type: :put_log}

11:37:14.391 [info] Receive response of 2337 from a with context: %KvStore.Context{vector_clock: %{a: 7790}}

11:37:14.391 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 914, context: %KvStore.Context{vector_clock: %{a: 7790}}}]

11:37:14.391 [info] Send request {:get, "4"}

11:37:14.392 [info] lb receive get from :client_b (2339)

11:37:14.392 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 914, context: %KvStore.Context{vector_clock: %{a: 7790}}}], type: :get_response, req_id: 2338}}

11:37:14.392 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2340, observer: :observer}

11:37:14.392 [info] Latest entries: [%KvStore.CacheEntry{object: 914, context: %KvStore.Context{vector_clock: %{a: 7790}}}]

11:37:14.393 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2338, key: "2", object: [%KvStore.CacheEntry{object: 914, context: %KvStore.Context{vector_clock: %{a: 7790}}}], sender: :a, type: :get_log}

11:37:14.393 [info] Receive response of 2338 from a with [%KvStore.CacheEntry{object: 914, context: %KvStore.Context{vector_clock: %{a: 7790}}}]

11:37:14.393 [info] generate requests

11:37:14.393 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 2339}

11:37:14.393 [info] Send request {:put, "2", 625, []}

11:37:14.393 [warning] :a Timeout for request: 2300

11:37:14.394 [warning] :a Timeout for request: 2300, but request not found.

11:37:14.394 [info] lb receive put from :client_a

11:37:14.394 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}]

11:37:14.394 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2341, observer: :observer}

11:37:14.395 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 625, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 2340}

11:37:14.395 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}], type: :get_response, req_id: 2339}}

11:37:14.395 [info] Latest entries: [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}]

11:37:14.396 [warning] :a Timeout for request: 2301

11:37:14.396 [warning] :a Timeout for request: 2301, but request not found.

11:37:14.396 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2339, key: "4", object: [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}], sender: :a, type: :get_log}

11:37:14.396 [info] New objects are [%KvStore.CacheEntry{object: 625, context: %KvStore.Context{vector_clock: %{a: 7799}}}]

11:37:14.396 [info] Receive response of 2339 from a with [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}]

11:37:14.397 [info] generate requests

11:37:14.397 [info] Send request {:get, "3"}

11:37:14.397 [info] lb receive get from :client_b (2341)

11:37:14.397 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2342, observer: :observer}

11:37:14.398 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 2341}

11:37:14.398 [info] Receive response of 2340 from a with context: %KvStore.Context{vector_clock: %{a: 7799}}

11:37:14.398 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2340, key: "2", object: 625, sender: :a, type: :put_log}

11:37:14.398 [info] Send request {:get, "1"}

11:37:14.399 [info] lb receive get from :client_a (2342)

11:37:14.399 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 182, context: %KvStore.Context{vector_clock: %{a: 7773}}}]

11:37:14.399 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2343, observer: :observer}

11:37:14.400 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 182, context: %KvStore.Context{vector_clock: %{a: 7773}}}], type: :get_response, req_id: 2341}}

11:37:14.400 [info] Latest entries: [%KvStore.CacheEntry{object: 182, context: %KvStore.Context{vector_clock: %{a: 7773}}}]

11:37:14.400 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 2342}

11:37:14.401 [info] Receive response of 2341 from a with [%KvStore.CacheEntry{object: 182, context: %KvStore.Context{vector_clock: %{a: 7773}}}]

11:37:14.401 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}]

11:37:14.401 [info] Send request {:put, "2", 967, []}

11:37:14.401 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2341, key: "3", object: [%KvStore.CacheEntry{object: 182, context: %KvStore.Context{vector_clock: %{a: 7773}}}], sender: :a, type: :get_log}

11:37:14.402 [info] lb receive put from :client_b

11:37:14.402 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2344, observer: :observer}

11:37:14.402 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}], type: :get_response, req_id: 2342}}

11:37:14.402 [info] Latest entries: [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}]

11:37:14.403 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2342, key: "1", object: [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}], sender: :a, type: :get_log}

11:37:14.403 [info] Receive response of 2342 from a with [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}]

11:37:14.403 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 967, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 2343}

11:37:14.403 [info] Send request {:get, "5"}

11:37:14.404 [info] New objects are [%KvStore.CacheEntry{object: 967, context: %KvStore.Context{vector_clock: %{a: 7810}}}]

11:37:14.404 [info] lb receive get from :client_a (2344)

11:37:14.404 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2345, observer: :observer}

11:37:14.405 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 2344}

11:37:14.408 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 419, context: %KvStore.Context{vector_clock: %{a: 7763}}}]

11:37:14.408 [info] Receive response of 2343 from a with context: %KvStore.Context{vector_clock: %{a: 7810}}

11:37:14.408 [info] Send request {:get, "5"}

11:37:14.409 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2343, key: "2", object: 967, sender: :a, type: :put_log}

11:37:14.409 [warning] :a Timeout for request: 2306

11:37:14.409 [warning] :a Timeout for request: 2306, but request not found.

11:37:14.409 [info] lb receive get from :client_b (2345)

11:37:14.409 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2346, observer: :observer}

11:37:14.409 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 419, context: %KvStore.Context{vector_clock: %{a: 7763}}}], type: :get_response, req_id: 2344}}

11:37:14.409 [info] Latest entries: [%KvStore.CacheEntry{object: 419, context: %KvStore.Context{vector_clock: %{a: 7763}}}]

11:37:14.410 [info] Receive response of 2344 from a with [%KvStore.CacheEntry{object: 419, context: %KvStore.Context{vector_clock: %{a: 7763}}}]

11:37:14.410 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 2345}

11:37:14.410 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2344, key: "5", object: [%KvStore.CacheEntry{object: 419, context: %KvStore.Context{vector_clock: %{a: 7763}}}], sender: :a, type: :get_log}

11:37:14.410 [info] generate requests

11:37:14.410 [warning] :a Timeout for request: 2307

11:37:14.410 [info] Send request {:get, "1"}

11:37:14.410 [warning] :a Timeout for request: 2307, but request not found.

11:37:14.411 [info] lb receive get from :client_a (2346)

11:37:14.411 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 419, context: %KvStore.Context{vector_clock: %{a: 7763}}}]

11:37:14.411 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2347, observer: :observer}

11:37:14.412 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 2346}

11:37:14.413 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 419, context: %KvStore.Context{vector_clock: %{a: 7763}}}], type: :get_response, req_id: 2345}}

11:37:14.413 [info] Latest entries: [%KvStore.CacheEntry{object: 419, context: %KvStore.Context{vector_clock: %{a: 7763}}}]

11:37:14.413 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}]

11:37:14.416 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}], type: :get_response, req_id: 2346}}

11:37:14.416 [info] Latest entries: [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}]

11:37:14.416 [info] Receive response of 2345 from a with [%KvStore.CacheEntry{object: 419, context: %KvStore.Context{vector_clock: %{a: 7763}}}]

11:37:14.416 [info] generate requests

11:37:14.416 [info] Send request {:get, "4"}

11:37:14.416 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2345, key: "5", object: [%KvStore.CacheEntry{object: 419, context: %KvStore.Context{vector_clock: %{a: 7763}}}], sender: :a, type: :get_log}

11:37:14.417 [info] lb receive get from :client_b (2347)

11:37:14.417 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2346, key: "1", object: [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}], sender: :a, type: :get_log}

11:37:14.417 [info] Receive response of 2346 from a with [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}]

11:37:14.417 [info] Send request {:put, "5", 968, []}

11:37:14.417 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2348, observer: :observer}

11:37:14.418 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 2347}

11:37:14.418 [info] lb receive put from :client_a

11:37:14.418 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2349, observer: :observer}

11:37:14.419 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 968, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 2348}

11:37:14.419 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}]

11:37:14.420 [info] New objects are [%KvStore.CacheEntry{object: 968, context: %KvStore.Context{vector_clock: %{a: 7825}}}]

11:37:14.421 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}], type: :get_response, req_id: 2347}}

11:37:14.421 [info] Latest entries: [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}]

11:37:14.422 [info] Receive response of 2347 from a with [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}]

11:37:14.422 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2347, key: "4", object: [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}], sender: :a, type: :get_log}

11:37:14.422 [info] Send request {:get, "2"}

11:37:14.423 [info] Receive response of 2348 from a with context: %KvStore.Context{vector_clock: %{a: 7825}}

11:37:14.423 [info] Send request {:get, "2"}

11:37:14.423 [warning] :a Timeout for request: 2312

11:37:14.423 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2348, key: "5", object: 968, sender: :a, type: :put_log}

11:37:14.423 [info] lb receive get from :client_b (2349)

11:37:14.423 [warning] :a Timeout for request: 2312, but request not found.

11:37:14.423 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2350, observer: :observer}

11:37:14.424 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 2349}

11:37:14.424 [info] lb receive get from :client_a (2350)

11:37:14.424 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2351, observer: :observer}

11:37:14.425 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 2350}

11:37:14.425 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 967, context: %KvStore.Context{vector_clock: %{a: 7810}}}]

11:37:14.426 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 967, context: %KvStore.Context{vector_clock: %{a: 7810}}}]

11:37:14.427 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 967, context: %KvStore.Context{vector_clock: %{a: 7810}}}], type: :get_response, req_id: 2349}}

11:37:14.427 [info] Latest entries: [%KvStore.CacheEntry{object: 967, context: %KvStore.Context{vector_clock: %{a: 7810}}}]

11:37:14.428 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 967, context: %KvStore.Context{vector_clock: %{a: 7810}}}], type: :get_response, req_id: 2350}}

11:37:14.428 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2349, key: "2", object: [%KvStore.CacheEntry{object: 967, context: %KvStore.Context{vector_clock: %{a: 7810}}}], sender: :a, type: :get_log}

11:37:14.428 [info] Receive response of 2349 from a with [%KvStore.CacheEntry{object: 967, context: %KvStore.Context{vector_clock: %{a: 7810}}}]

11:37:14.428 [info] Latest entries: [%KvStore.CacheEntry{object: 967, context: %KvStore.Context{vector_clock: %{a: 7810}}}]

11:37:14.428 [info] Send request {:put, "2", 970, []}

11:37:14.429 [info] Receive response of 2350 from a with [%KvStore.CacheEntry{object: 967, context: %KvStore.Context{vector_clock: %{a: 7810}}}]

11:37:14.429 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2350, key: "2", object: [%KvStore.CacheEntry{object: 967, context: %KvStore.Context{vector_clock: %{a: 7810}}}], sender: :a, type: :get_log}

11:37:14.429 [info] lb receive put from :client_b

11:37:14.429 [info] generate requests

11:37:14.429 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2352, observer: :observer}

11:37:14.429 [info] Send request {:get, "1"}

11:37:14.430 [info] lb receive get from :client_a (2352)

11:37:14.430 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 970, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 2351}

11:37:14.430 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2353, observer: :observer}

11:37:14.430 [warning] :a Timeout for request: 2315

11:37:14.430 [warning] :a Timeout for request: 2315, but request not found.

11:37:14.431 [info] New objects are [%KvStore.CacheEntry{object: 970, context: %KvStore.Context{vector_clock: %{a: 7837}}}]

11:37:14.431 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 2352}

11:37:14.433 [info] Receive response of 2351 from a with context: %KvStore.Context{vector_clock: %{a: 7837}}

11:37:14.433 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2351, key: "2", object: 970, sender: :a, type: :put_log}

11:37:14.433 [info] generate requests

11:37:14.433 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}]

11:37:14.433 [info] Send request {:put, "1", 101, []}

11:37:14.434 [info] lb receive put from :client_b

11:37:14.434 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}], type: :get_response, req_id: 2352}}

11:37:14.434 [info] Latest entries: [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}]

11:37:14.434 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2354, observer: :observer}

11:37:14.435 [info] Receive response of 2352 from a with [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}]

11:37:14.435 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2352, key: "1", object: [%KvStore.CacheEntry{object: 821, context: %KvStore.Context{vector_clock: %{a: 7746}}}], sender: :a, type: :get_log}

11:37:14.435 [info] Send request {:get, "4"}

11:37:14.435 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 101, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 2353}

11:37:14.435 [warning] :a Timeout for request: 2317

11:37:14.435 [warning] :a Timeout for request: 2317, but request not found.

11:37:14.436 [info] lb receive get from :client_a (2354)

11:37:14.436 [info] New objects are [%KvStore.CacheEntry{object: 101, context: %KvStore.Context{vector_clock: %{a: 7844}}}]

11:37:14.436 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2355, observer: :observer}

11:37:14.437 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 2354}

11:37:14.438 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}]

11:37:14.438 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2353, key: "1", object: 101, sender: :a, type: :put_log}

11:37:14.438 [info] Receive response of 2353 from a with context: %KvStore.Context{vector_clock: %{a: 7844}}

11:37:14.438 [info] Send request {:get, "5"}

11:37:14.439 [info] lb receive get from :client_b (2355)

11:37:14.439 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2356, observer: :observer}

11:37:14.439 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}], type: :get_response, req_id: 2354}}

11:37:14.439 [info] Latest entries: [%KvStore.CacheEntry{object: 407, context: %KvStore.Context{vector_clock: %{a: 7719}}}]

11:37:15.299 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 2695}

11:37:15.300 [info] Receive response of 2694 from a with context: %KvStore.Context{vector_clock: %{a: 8981}}

11:37:15.300 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2694, key: "1", object: 512, sender: :a, type: :put_log}

11:37:15.300 [info] Send request {:get, "1"}

11:37:15.300 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 966, context: %KvStore.Context{vector_clock: %{a: 8975}}}]

11:37:15.301 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 966, context: %KvStore.Context{vector_clock: %{a: 8975}}}], type: :get_response, req_id: 2695}}

11:37:15.301 [info] Latest entries: [%KvStore.CacheEntry{object: 966, context: %KvStore.Context{vector_clock: %{a: 8975}}}]

11:37:15.301 [info] lb receive get from :client_a (2696)

11:37:15.301 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2697, observer: :observer}

11:37:15.302 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 2696}

11:37:15.302 [info] Receive response of 2695 from a with [%KvStore.CacheEntry{object: 966, context: %KvStore.Context{vector_clock: %{a: 8975}}}]

11:37:15.302 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2695, key: "2", object: [%KvStore.CacheEntry{object: 966, context: %KvStore.Context{vector_clock: %{a: 8975}}}], sender: :a, type: :get_log}

11:37:15.302 [info] Send request {:put, "2", 603, []}

11:37:15.303 [info] lb receive put from :client_b

11:37:15.303 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 512, context: %KvStore.Context{vector_clock: %{a: 8981}}}]

11:37:15.303 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2698, observer: :observer}

11:37:15.304 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 603, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 2697}

11:37:15.304 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 512, context: %KvStore.Context{vector_clock: %{a: 8981}}}], type: :get_response, req_id: 2696}}

11:37:15.304 [info] Latest entries: [%KvStore.CacheEntry{object: 512, context: %KvStore.Context{vector_clock: %{a: 8981}}}]

11:37:15.305 [info] Receive response of 2696 from a with [%KvStore.CacheEntry{object: 512, context: %KvStore.Context{vector_clock: %{a: 8981}}}]

11:37:15.305 [info] New objects are [%KvStore.CacheEntry{object: 603, context: %KvStore.Context{vector_clock: %{a: 8990}}}]

11:37:15.305 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2696, key: "1", object: [%KvStore.CacheEntry{object: 512, context: %KvStore.Context{vector_clock: %{a: 8981}}}], sender: :a, type: :get_log}

11:37:15.305 [info] Send request {:get, "2"}

11:37:15.305 [warning] :a Timeout for request: 2658

11:37:15.305 [warning] :a Timeout for request: 2658, but request not found.

11:37:15.306 [info] lb receive get from :client_a (2698)

11:37:15.306 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2699, observer: :observer}

11:37:15.307 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2697, key: "2", object: 603, sender: :a, type: :put_log}

11:37:15.307 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 2698}

11:37:15.307 [info] Receive response of 2697 from a with context: %KvStore.Context{vector_clock: %{a: 8990}}

11:37:15.307 [info] Send request {:get, "5"}

11:37:15.308 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 603, context: %KvStore.Context{vector_clock: %{a: 8990}}}]

11:37:15.308 [info] lb receive get from :client_b (2699)

11:37:15.308 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2700, observer: :observer}

11:37:15.309 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 2699}

11:37:15.309 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 603, context: %KvStore.Context{vector_clock: %{a: 8990}}}], type: :get_response, req_id: 2698}}

11:37:15.309 [info] Latest entries: [%KvStore.CacheEntry{object: 603, context: %KvStore.Context{vector_clock: %{a: 8990}}}]

11:37:15.310 [info] Receive response of 2698 from a with [%KvStore.CacheEntry{object: 603, context: %KvStore.Context{vector_clock: %{a: 8990}}}]

11:37:15.310 [info] generate requests

11:37:15.310 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2698, key: "2", object: [%KvStore.CacheEntry{object: 603, context: %KvStore.Context{vector_clock: %{a: 8990}}}], sender: :a, type: :get_log}

11:37:15.310 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 359, context: %KvStore.Context{vector_clock: %{a: 8955}}}]

11:37:15.310 [info] Send request {:get, "5"}

11:37:15.310 [warning] :a Timeout for request: 2660

11:37:15.310 [warning] :a Timeout for request: 2660, but request not found.

11:37:15.311 [info] lb receive get from :client_a (2700)

11:37:15.311 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 359, context: %KvStore.Context{vector_clock: %{a: 8955}}}], type: :get_response, req_id: 2699}}

11:37:15.311 [info] Latest entries: [%KvStore.CacheEntry{object: 359, context: %KvStore.Context{vector_clock: %{a: 8955}}}]

11:37:15.311 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2701, observer: :observer}

11:37:15.312 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2699, key: "5", object: [%KvStore.CacheEntry{object: 359, context: %KvStore.Context{vector_clock: %{a: 8955}}}], sender: :a, type: :get_log}

11:37:15.312 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 2700}

11:37:15.312 [info] Receive response of 2699 from a with [%KvStore.CacheEntry{object: 359, context: %KvStore.Context{vector_clock: %{a: 8955}}}]

11:37:15.312 [info] generate requests

11:37:15.312 [info] Send request {:put, "1", 367, []}

11:37:15.313 [info] lb receive put from :client_b

11:37:15.313 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 359, context: %KvStore.Context{vector_clock: %{a: 8955}}}]

11:37:15.313 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2702, observer: :observer}

11:37:15.314 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 367, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 2701}

11:37:15.314 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 359, context: %KvStore.Context{vector_clock: %{a: 8955}}}], type: :get_response, req_id: 2700}}

11:37:15.314 [info] Latest entries: [%KvStore.CacheEntry{object: 359, context: %KvStore.Context{vector_clock: %{a: 8955}}}]

11:37:15.315 [info] New objects are [%KvStore.CacheEntry{object: 367, context: %KvStore.Context{vector_clock: %{a: 9004}}}]

11:37:15.315 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2700, key: "5", object: [%KvStore.CacheEntry{object: 359, context: %KvStore.Context{vector_clock: %{a: 8955}}}], sender: :a, type: :get_log}

11:37:15.315 [info] Receive response of 2700 from a with [%KvStore.CacheEntry{object: 359, context: %KvStore.Context{vector_clock: %{a: 8955}}}]

11:37:15.315 [info] Send request {:get, "1"}

11:37:15.316 [info] lb receive get from :client_a (2702)

11:37:15.316 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2703, observer: :observer}

11:37:15.317 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 2702}

11:37:15.317 [info] Receive response of 2701 from a with context: %KvStore.Context{vector_clock: %{a: 9004}}

11:37:15.317 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2701, key: "1", object: 367, sender: :a, type: :put_log}

11:37:15.317 [info] Send request {:get, "1"}

11:37:15.318 [info] lb receive get from :client_b (2703)

11:37:15.318 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 367, context: %KvStore.Context{vector_clock: %{a: 9004}}}]

11:37:15.318 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2704, observer: :observer}

11:37:15.318 [warning] :a Timeout for request: 2663

11:37:15.318 [warning] :a Timeout for request: 2663, but request not found.

11:37:15.319 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 2703}

11:37:15.319 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 367, context: %KvStore.Context{vector_clock: %{a: 9004}}}], type: :get_response, req_id: 2702}}

11:37:15.319 [info] Latest entries: [%KvStore.CacheEntry{object: 367, context: %KvStore.Context{vector_clock: %{a: 9004}}}]

11:37:15.320 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 367, context: %KvStore.Context{vector_clock: %{a: 9004}}}]

11:37:15.320 [info] Receive response of 2702 from a with [%KvStore.CacheEntry{object: 367, context: %KvStore.Context{vector_clock: %{a: 9004}}}]

11:37:15.320 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2702, key: "1", object: [%KvStore.CacheEntry{object: 367, context: %KvStore.Context{vector_clock: %{a: 9004}}}], sender: :a, type: :get_log}

11:37:15.320 [info] Send request {:put, "4", 923, []}

11:37:15.321 [info] lb receive put from :client_a

11:37:15.321 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 367, context: %KvStore.Context{vector_clock: %{a: 9004}}}], type: :get_response, req_id: 2703}}

11:37:15.321 [info] Latest entries: [%KvStore.CacheEntry{object: 367, context: %KvStore.Context{vector_clock: %{a: 9004}}}]

11:37:15.321 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2705, observer: :observer}

11:37:15.322 [info] Receive response of 2703 from a with [%KvStore.CacheEntry{object: 367, context: %KvStore.Context{vector_clock: %{a: 9004}}}]

11:37:15.322 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2703, key: "1", object: [%KvStore.CacheEntry{object: 367, context: %KvStore.Context{vector_clock: %{a: 9004}}}], sender: :a, type: :get_log}

11:37:15.322 [info] Send request {:get, "4"}

11:37:15.322 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 923, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 2704}

11:37:15.323 [info] lb receive get from :client_b (2705)

11:37:15.323 [info] New objects are [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}]

11:37:15.323 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2706, observer: :observer}

11:37:15.324 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 2705}

11:37:15.325 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2704, key: "4", object: 923, sender: :a, type: :put_log}

11:37:15.325 [info] Receive response of 2704 from a with context: %KvStore.Context{vector_clock: %{a: 9015}}

11:37:15.325 [info] generate requests

11:37:15.325 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}]

11:37:15.325 [info] Send request {:get, "3"}

11:37:15.326 [info] lb receive get from :client_a (2706)

11:37:15.326 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}], type: :get_response, req_id: 2705}}

11:37:15.326 [info] Latest entries: [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}]

11:37:15.326 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2707, observer: :observer}

11:37:15.327 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 2706}

11:37:15.327 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2705, key: "4", object: [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}], sender: :a, type: :get_log}

11:37:15.327 [info] Receive response of 2705 from a with [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}]

11:37:15.327 [info] generate requests

11:37:15.327 [info] Send request {:put, "3", 255, []}

11:37:15.328 [info] lb receive put from :client_b

11:37:15.328 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 8932}}}]

11:37:15.328 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2708, observer: :observer}

11:37:15.329 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 255, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 2707}

11:37:15.329 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 8932}}}], type: :get_response, req_id: 2706}}

11:37:15.329 [info] Latest entries: [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 8932}}}]

11:37:15.330 [info] New objects are [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}]

11:37:15.330 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2706, key: "3", object: [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 8932}}}], sender: :a, type: :get_log}

11:37:15.330 [info] Receive response of 2706 from a with [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 8932}}}]

11:37:15.330 [info] Send request {:get, "2"}

11:37:15.331 [info] lb receive get from :client_a (2708)

11:37:15.331 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2709, observer: :observer}

11:37:15.332 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2707, key: "3", object: 255, sender: :a, type: :put_log}

11:37:15.332 [info] Receive response of 2707 from a with context: %KvStore.Context{vector_clock: %{a: 9023}}

11:37:15.332 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 2708}

11:37:15.332 [info] Send request {:get, "3"}

11:37:15.333 [info] lb receive get from :client_b (2709)

11:37:15.333 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 603, context: %KvStore.Context{vector_clock: %{a: 8990}}}]

11:37:15.333 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2710, observer: :observer}

11:37:15.333 [warning] :a Timeout for request: 2669

11:37:15.333 [warning] :a Timeout for request: 2669, but request not found.

11:37:15.334 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 2709}

11:37:15.334 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 603, context: %KvStore.Context{vector_clock: %{a: 8990}}}], type: :get_response, req_id: 2708}}

11:37:15.334 [info] Latest entries: [%KvStore.CacheEntry{object: 603, context: %KvStore.Context{vector_clock: %{a: 8990}}}]

11:37:15.335 [info] Receive response of 2708 from a with [%KvStore.CacheEntry{object: 603, context: %KvStore.Context{vector_clock: %{a: 8990}}}]

11:37:15.335 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2708, key: "2", object: [%KvStore.CacheEntry{object: 603, context: %KvStore.Context{vector_clock: %{a: 8990}}}], sender: :a, type: :get_log}

11:37:15.335 [info] Send request {:put, "2", 241, []}

11:37:15.335 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}]

11:37:15.335 [warning] :a Timeout for request: 2670

11:37:15.335 [warning] :a Timeout for request: 2670, but request not found.

11:37:15.336 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}], type: :get_response, req_id: 2709}}

11:37:15.336 [info] Latest entries: [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}]

11:37:15.336 [info] lb receive put from :client_a

11:37:15.336 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2711, observer: :observer}

11:37:15.337 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2709, key: "3", object: [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}], sender: :a, type: :get_log}

11:37:15.337 [info] Receive response of 2709 from a with [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}]

11:37:15.337 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 241, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 2710}

11:37:15.337 [info] Send request {:get, "4"}

11:37:15.338 [info] New objects are [%KvStore.CacheEntry{object: 241, context: %KvStore.Context{vector_clock: %{a: 9035}}}]

11:37:15.338 [info] lb receive get from :client_b (2711)

11:37:15.338 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2712, observer: :observer}

11:37:15.339 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 2711}

11:37:15.340 [info] Receive response of 2710 from a with context: %KvStore.Context{vector_clock: %{a: 9035}}

11:37:15.340 [info] generate requests

11:37:15.340 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2710, key: "2", object: 241, sender: :a, type: :put_log}

11:37:15.340 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}]

11:37:15.340 [info] Send request {:get, "2"}

11:37:15.341 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}], type: :get_response, req_id: 2711}}

11:37:15.341 [info] lb receive get from :client_a (2712)

11:37:15.341 [info] Latest entries: [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}]

11:37:15.341 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2713, observer: :observer}

11:37:15.342 [info] Receive response of 2711 from a with [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}]

11:37:15.342 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 2712}

11:37:15.342 [info] generate requests

11:37:15.342 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2711, key: "4", object: [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}], sender: :a, type: :get_log}

11:37:15.342 [info] Send request {:get, "2"}

11:37:15.343 [info] lb receive get from :client_b (2713)

11:37:15.343 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 241, context: %KvStore.Context{vector_clock: %{a: 9035}}}]

11:37:15.343 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2714, observer: :observer}

11:37:15.344 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 2713}

11:37:15.344 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 241, context: %KvStore.Context{vector_clock: %{a: 9035}}}], type: :get_response, req_id: 2712}}

11:37:15.344 [info] Latest entries: [%KvStore.CacheEntry{object: 241, context: %KvStore.Context{vector_clock: %{a: 9035}}}]

11:37:15.345 [info] Receive response of 2712 from a with [%KvStore.CacheEntry{object: 241, context: %KvStore.Context{vector_clock: %{a: 9035}}}]

11:37:15.345 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2712, key: "2", object: [%KvStore.CacheEntry{object: 241, context: %KvStore.Context{vector_clock: %{a: 9035}}}], sender: :a, type: :get_log}

11:37:15.345 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 241, context: %KvStore.Context{vector_clock: %{a: 9035}}}]

11:37:15.345 [info] Send request {:get, "4"}

11:37:15.346 [info] lb receive get from :client_a (2714)

11:37:15.346 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 241, context: %KvStore.Context{vector_clock: %{a: 9035}}}], type: :get_response, req_id: 2713}}

11:37:15.346 [info] Latest entries: [%KvStore.CacheEntry{object: 241, context: %KvStore.Context{vector_clock: %{a: 9035}}}]

11:37:15.346 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2715, observer: :observer}

11:37:15.347 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2713, key: "2", object: [%KvStore.CacheEntry{object: 241, context: %KvStore.Context{vector_clock: %{a: 9035}}}], sender: :a, type: :get_log}

11:37:15.347 [info] Receive response of 2713 from a with [%KvStore.CacheEntry{object: 241, context: %KvStore.Context{vector_clock: %{a: 9035}}}]

11:37:15.347 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 2714}

11:37:15.347 [info] Send request {:put, "5", 443, []}

11:37:15.348 [info] lb receive put from :client_b

11:37:15.348 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}]

11:37:15.348 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2716, observer: :observer}

11:37:15.348 [warning] :a Timeout for request: 2675

11:37:15.348 [warning] :a Timeout for request: 2675, but request not found.

11:37:15.349 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 443, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 2715}

11:37:15.349 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}], type: :get_response, req_id: 2714}}

11:37:15.349 [info] Latest entries: [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}]

11:37:15.350 [info] Receive response of 2714 from a with [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}]

11:37:15.350 [info] New objects are [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}]

11:37:15.350 [info] Send request {:put, "2", 291, []}

11:37:15.350 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2714, key: "4", object: [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}], sender: :a, type: :get_log}

11:37:15.350 [warning] :a Timeout for request: 2676

11:37:15.350 [warning] :a Timeout for request: 2676, but request not found.

11:37:15.351 [info] lb receive put from :client_a

11:37:15.351 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2717, observer: :observer}

11:37:15.352 [info] Receive response of 2715 from a with context: %KvStore.Context{vector_clock: %{a: 9050}}

11:37:15.352 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2715, key: "5", object: 443, sender: :a, type: :put_log}

11:37:15.352 [info] Send request {:get, "5"}

11:37:15.352 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 291, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 2716}

11:37:15.353 [info] lb receive get from :client_b (2717)

11:37:15.353 [info] New objects are [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 9055}}}]

11:37:15.353 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2718, observer: :observer}

11:37:15.354 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 2717}

11:37:15.355 [info] Receive response of 2716 from a with context: %KvStore.Context{vector_clock: %{a: 9055}}

11:37:15.355 [info] generate requests

11:37:15.355 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2716, key: "2", object: 291, sender: :a, type: :put_log}

11:37:15.355 [info] Send request {:get, "4"}

11:37:15.355 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}]

11:37:15.356 [info] lb receive get from :client_a (2718)

11:37:15.356 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}], type: :get_response, req_id: 2717}}

11:37:15.356 [info] Latest entries: [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}]

11:37:15.356 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2719, observer: :observer}

11:37:15.357 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2717, key: "5", object: [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}], sender: :a, type: :get_log}

11:37:15.357 [info] Receive response of 2717 from a with [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}]

11:37:15.357 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 2718}

11:37:15.357 [info] generate requests

11:37:15.357 [info] Send request {:get, "3"}

11:37:15.358 [info] lb receive get from :client_b (2719)

11:37:15.358 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}]

11:37:15.358 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2720, observer: :observer}

11:37:15.358 [warning] :a Timeout for request: 2679

11:37:15.358 [warning] :a Timeout for request: 2679, but request not found.

11:37:15.359 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 2719}

11:37:15.359 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}], type: :get_response, req_id: 2718}}

11:37:15.359 [info] Latest entries: [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}]

11:37:15.360 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2718, key: "4", object: [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}], sender: :a, type: :get_log}

11:37:15.360 [info] Receive response of 2718 from a with [%KvStore.CacheEntry{object: 923, context: %KvStore.Context{vector_clock: %{a: 9015}}}]

11:37:15.360 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}]

11:37:15.360 [info] Send request {:get, "5"}

11:37:15.360 [warning] :a Timeout for request: 2680

11:37:15.360 [warning] :a Timeout for request: 2680, but request not found.

11:37:15.361 [info] lb receive get from :client_a (2720)

11:37:15.361 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}], type: :get_response, req_id: 2719}}

11:37:15.361 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2721, observer: :observer}

11:37:15.361 [info] Latest entries: [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}]

11:37:15.362 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2719, key: "3", object: [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}], sender: :a, type: :get_log}

11:37:15.362 [info] Receive response of 2719 from a with [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}]

11:37:15.362 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 2720}

11:37:15.362 [info] Send request {:get, "2"}

11:37:15.363 [info] lb receive get from :client_b (2721)

11:37:15.363 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}]

11:37:15.363 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2722, observer: :observer}

11:37:15.364 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}], type: :get_response, req_id: 2720}}

11:37:15.364 [info] Latest entries: [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}]

11:37:15.364 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 2721}

11:37:15.365 [info] Receive response of 2720 from a with [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}]

11:37:15.365 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2720, key: "5", object: [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}], sender: :a, type: :get_log}

11:37:15.365 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 9055}}}]

11:37:15.365 [info] Send request {:put, "4", 701, []}

11:37:15.366 [info] lb receive put from :client_a

11:37:15.366 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 9055}}}], type: :get_response, req_id: 2721}}

11:37:15.366 [info] Latest entries: [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 9055}}}]

11:37:15.366 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2723, observer: :observer}

11:37:15.367 [info] Receive response of 2721 from a with [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 9055}}}]

11:37:15.367 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2721, key: "2", object: [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 9055}}}], sender: :a, type: :get_log}

11:37:15.367 [info] Send request {:put, "4", 991, []}

11:37:15.367 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 701, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 2722}

11:37:15.368 [info] New objects are [%KvStore.CacheEntry{object: 701, context: %KvStore.Context{vector_clock: %{a: 9075}}}]

11:37:15.368 [info] lb receive put from :client_b

11:37:15.368 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2724, observer: :observer}

11:37:15.369 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 991, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 2723}

11:37:15.370 [info] New objects are [%KvStore.CacheEntry{object: 991, context: %KvStore.Context{vector_clock: %{a: 9077}}}]

11:37:15.370 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2722, key: "4", object: 701, sender: :a, type: :put_log}

11:37:15.370 [info] Receive response of 2722 from a with context: %KvStore.Context{vector_clock: %{a: 9075}}

11:37:15.370 [info] generate requests

11:37:15.370 [info] Send request {:get, "3"}

11:37:15.371 [info] lb receive get from :client_a (2724)

11:37:15.371 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2725, observer: :observer}

11:37:15.372 [info] Receive response of 2723 from a with context: %KvStore.Context{vector_clock: %{a: 9077}}

11:37:15.372 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 2724}

11:37:15.372 [info] generate requests

11:37:15.372 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2723, key: "4", object: 991, sender: :a, type: :put_log}

11:37:15.372 [info] Send request {:get, "3"}

11:37:15.373 [info] lb receive get from :client_b (2725)

11:37:15.373 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}]

11:37:15.373 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2726, observer: :observer}

11:37:15.374 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 2725}

11:37:15.374 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}], type: :get_response, req_id: 2724}}

11:37:15.374 [info] Latest entries: [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}]

11:37:15.375 [info] Receive response of 2724 from a with [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}]

11:37:15.375 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}]

11:37:15.375 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2724, key: "3", object: [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}], sender: :a, type: :get_log}

11:37:15.375 [warning] :a Timeout for request: 2686

11:37:15.375 [info] Send request {:put, "1", 205, []}

11:37:15.375 [warning] :a Timeout for request: 2686, but request not found.

11:37:15.376 [info] lb receive put from :client_a

11:37:15.376 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}], type: :get_response, req_id: 2725}}

11:37:15.376 [info] Latest entries: [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}]

11:37:15.376 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2727, observer: :observer}

11:37:15.377 [info] Receive response of 2725 from a with [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}]

11:37:15.377 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2725, key: "3", object: [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}], sender: :a, type: :get_log}

11:37:15.377 [info] Send request {:get, "5"}

11:37:15.377 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 205, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 2726}

11:37:15.378 [info] lb receive get from :client_b (2727)

11:37:15.378 [info] New objects are [%KvStore.CacheEntry{object: 205, context: %KvStore.Context{vector_clock: %{a: 9088}}}]

11:37:15.378 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2728, observer: :observer}

11:37:15.378 [warning] :a Timeout for request: 2687

11:37:15.378 [warning] :a Timeout for request: 2687, but request not found.

11:37:15.379 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 2727}

11:37:15.380 [info] Receive response of 2726 from a with context: %KvStore.Context{vector_clock: %{a: 9088}}

11:37:15.380 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2726, key: "1", object: 205, sender: :a, type: :put_log}

11:37:15.380 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}]

11:37:15.380 [info] Send request {:get, "3"}

11:37:15.381 [info] lb receive get from :client_a (2728)

11:37:15.381 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}], type: :get_response, req_id: 2727}}

11:37:15.381 [info] Latest entries: [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}]

11:37:15.381 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2729, observer: :observer}

11:37:15.382 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 2728}

11:37:15.382 [info] Receive response of 2727 from a with [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}]

11:37:15.382 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2727, key: "5", object: [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}], sender: :a, type: :get_log}

11:37:15.382 [info] Send request {:put, "3", 832, []}

11:37:15.383 [info] lb receive put from :client_b

11:37:15.383 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}]

11:37:15.383 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2730, observer: :observer}

11:37:15.384 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 832, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 2729}

11:37:15.384 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}], type: :get_response, req_id: 2728}}

11:37:15.384 [info] Latest entries: [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}]

11:37:15.385 [info] Receive response of 2728 from a with [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}]

11:37:15.385 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2728, key: "3", object: [%KvStore.CacheEntry{object: 255, context: %KvStore.Context{vector_clock: %{a: 9023}}}], sender: :a, type: :get_log}

11:37:15.385 [info] New objects are [%KvStore.CacheEntry{object: 832, context: %KvStore.Context{vector_clock: %{a: 9097}}}]

11:37:15.385 [info] generate requests

11:37:15.385 [info] Send request {:get, "3"}

11:37:15.385 [warning] :a Timeout for request: 2690

11:37:15.385 [warning] :a Timeout for request: 2690, but request not found.

11:37:15.386 [info] lb receive get from :client_a (2730)

11:37:15.386 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2731, observer: :observer}

11:37:15.387 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 2730}

11:37:15.387 [info] Receive response of 2729 from a with context: %KvStore.Context{vector_clock: %{a: 9097}}

11:37:15.387 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2729, key: "3", object: 832, sender: :a, type: :put_log}

11:37:15.387 [info] generate requests

11:37:15.387 [info] Send request {:get, "4"}

11:37:15.388 [info] lb receive get from :client_b (2731)

11:37:15.388 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 832, context: %KvStore.Context{vector_clock: %{a: 9097}}}]

11:37:15.388 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2732, observer: :observer}

11:37:15.389 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 832, context: %KvStore.Context{vector_clock: %{a: 9097}}}], type: :get_response, req_id: 2730}}

11:37:15.389 [info] Latest entries: [%KvStore.CacheEntry{object: 832, context: %KvStore.Context{vector_clock: %{a: 9097}}}]

11:37:15.389 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 2731}

11:37:15.390 [info] Receive response of 2730 from a with [%KvStore.CacheEntry{object: 832, context: %KvStore.Context{vector_clock: %{a: 9097}}}]

11:37:15.390 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 991, context: %KvStore.Context{vector_clock: %{a: 9077}}}]

11:37:15.390 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2730, key: "3", object: [%KvStore.CacheEntry{object: 832, context: %KvStore.Context{vector_clock: %{a: 9097}}}], sender: :a, type: :get_log}

11:37:15.390 [info] Send request {:put, "1", 952, []}

11:37:15.391 [info] lb receive put from :client_a

11:37:15.391 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 991, context: %KvStore.Context{vector_clock: %{a: 9077}}}], type: :get_response, req_id: 2731}}

11:37:15.391 [info] Latest entries: [%KvStore.CacheEntry{object: 991, context: %KvStore.Context{vector_clock: %{a: 9077}}}]

11:37:15.391 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2733, observer: :observer}

11:37:15.392 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2731, key: "4", object: [%KvStore.CacheEntry{object: 991, context: %KvStore.Context{vector_clock: %{a: 9077}}}], sender: :a, type: :get_log}

11:37:15.392 [info] Receive response of 2731 from a with [%KvStore.CacheEntry{object: 991, context: %KvStore.Context{vector_clock: %{a: 9077}}}]

11:37:15.392 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 952, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 2732}

11:37:15.392 [info] Send request {:put, "4", 305, []}

11:37:15.393 [info] New objects are [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 9108}}}]

11:37:15.393 [info] lb receive put from :client_b

11:37:15.393 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2734, observer: :observer}

11:37:15.393 [warning] :a Timeout for request: 2693

11:37:15.393 [warning] :a Timeout for request: 2693, but request not found.

11:37:15.394 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 305, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 2733}

11:37:15.395 [info] Receive response of 2732 from a with context: %KvStore.Context{vector_clock: %{a: 9108}}

11:37:15.395 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2732, key: "1", object: 952, sender: :a, type: :put_log}

11:37:15.395 [info] New objects are [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 9111}}}]

11:37:15.395 [info] Send request {:get, "4"}

11:37:15.396 [info] lb receive get from :client_a (2734)

11:37:15.396 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2735, observer: :observer}

11:37:15.397 [info] Receive response of 2733 from a with context: %KvStore.Context{vector_clock: %{a: 9111}}

11:37:15.397 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 2734}

11:37:15.397 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2733, key: "4", object: 305, sender: :a, type: :put_log}

11:37:15.397 [info] Send request {:get, "4"}

11:37:15.398 [info] lb receive get from :client_b (2735)

11:37:15.398 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 9111}}}]

11:37:15.398 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2736, observer: :observer}

11:37:15.398 [warning] :a Timeout for request: 2695

11:37:15.398 [warning] :a Timeout for request: 2695, but request not found.

11:37:15.399 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 9111}}}], type: :get_response, req_id: 2734}}

11:37:15.399 [info] Latest entries: [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 9111}}}]

11:37:15.399 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 2735}

11:37:15.400 [info] Receive response of 2734 from a with [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 9111}}}]

11:37:15.400 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 9111}}}]

11:37:15.400 [info] generate requests

11:37:15.400 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2734, key: "4", object: [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 9111}}}], sender: :a, type: :get_log}

11:37:15.400 [info] Send request {:get, "2"}

11:37:15.401 [info] lb receive get from :client_a (2736)

11:37:15.401 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 9111}}}], type: :get_response, req_id: 2735}}

11:37:15.401 [info] Latest entries: [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 9111}}}]

11:37:15.401 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2737, observer: :observer}

11:37:15.402 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 2736}

11:37:15.402 [info] Receive response of 2735 from a with [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 9111}}}]

11:37:15.402 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2735, key: "4", object: [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 9111}}}], sender: :a, type: :get_log}

11:37:15.402 [info] generate requests

11:37:15.402 [info] Send request {:get, "5"}

11:37:15.403 [info] lb receive get from :client_b (2737)

11:37:15.403 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 9055}}}]

11:37:15.403 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2738, observer: :observer}

11:37:15.404 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 2737}

11:37:15.404 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 9055}}}], type: :get_response, req_id: 2736}}

11:37:15.404 [info] Latest entries: [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 9055}}}]

11:37:15.405 [info] Receive response of 2736 from a with [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 9055}}}]

11:37:15.405 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2736, key: "2", object: [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 9055}}}], sender: :a, type: :get_log}

11:37:15.405 [info] Send request {:get, "3"}

11:37:15.405 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}]

11:37:15.405 [warning] :a Timeout for request: 2698

11:37:15.405 [warning] :a Timeout for request: 2698, but request not found.

11:37:15.406 [info] lb receive get from :client_a (2738)

11:37:15.406 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}], type: :get_response, req_id: 2737}}

11:37:15.406 [info] Latest entries: [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}]

11:37:15.406 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2739, observer: :observer}

11:37:15.407 [info] Receive response of 2737 from a with [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}]

11:37:15.407 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 2738}

11:37:15.407 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2737, key: "5", object: [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}], sender: :a, type: :get_log}

11:37:15.407 [info] Send request {:get, "5"}

11:37:15.408 [info] lb receive get from :client_b (2739)

11:37:15.408 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 832, context: %KvStore.Context{vector_clock: %{a: 9097}}}]

11:37:15.408 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2740, observer: :observer}

11:37:15.409 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 832, context: %KvStore.Context{vector_clock: %{a: 9097}}}], type: :get_response, req_id: 2738}}

11:37:15.409 [info] Latest entries: [%KvStore.CacheEntry{object: 832, context: %KvStore.Context{vector_clock: %{a: 9097}}}]

11:37:15.409 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 2739}

11:37:15.410 [info] Receive response of 2738 from a with [%KvStore.CacheEntry{object: 832, context: %KvStore.Context{vector_clock: %{a: 9097}}}]

11:37:15.410 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}]

11:37:15.410 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2738, key: "3", object: [%KvStore.CacheEntry{object: 832, context: %KvStore.Context{vector_clock: %{a: 9097}}}], sender: :a, type: :get_log}

11:37:15.410 [info] Send request {:put, "2", 525, []}

11:37:15.411 [info] lb receive put from :client_a

11:37:15.411 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}], type: :get_response, req_id: 2739}}

11:37:15.411 [info] Latest entries: [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}]

11:37:15.411 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2741, observer: :observer}

11:37:15.412 [info] Receive response of 2739 from a with [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}]

11:37:15.412 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 525, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 2740}

11:37:15.412 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2739, key: "5", object: [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}], sender: :a, type: :get_log}

11:37:15.412 [info] Send request {:put, "3", 169, []}

11:37:15.413 [info] lb receive put from :client_b

11:37:15.413 [info] New objects are [%KvStore.CacheEntry{object: 525, context: %KvStore.Context{vector_clock: %{a: 9135}}}]

11:37:15.413 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2742, observer: :observer}

11:37:15.415 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 169, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 2741}

11:37:15.415 [warning] :a Timeout for request: 2702

11:37:15.415 [warning] :a Timeout for request: 2702, but request not found.

11:37:15.416 [info] New objects are [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 9137}}}]

11:37:15.416 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2740, key: "2", object: 525, sender: :a, type: :put_log}

11:37:15.416 [info] Receive response of 2740 from a with context: %KvStore.Context{vector_clock: %{a: 9135}}

11:37:15.416 [info] generate requests

11:37:15.416 [info] Send request {:get, "3"}

11:37:15.417 [info] lb receive get from :client_a (2742)

11:37:15.417 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2743, observer: :observer}

11:37:15.418 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2741, key: "3", object: 169, sender: :a, type: :put_log}

11:37:15.418 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 2742}

11:37:15.418 [info] Receive response of 2741 from a with context: %KvStore.Context{vector_clock: %{a: 9137}}

11:37:15.418 [info] generate requests

11:37:15.418 [info] Send request {:get, "5"}

11:37:15.419 [info] lb receive get from :client_b (2743)

11:37:15.419 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 9137}}}]

11:37:15.419 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2744, observer: :observer}

11:37:15.420 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 2743}

11:37:15.420 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 9137}}}], type: :get_response, req_id: 2742}}

11:37:15.420 [info] Latest entries: [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 9137}}}]

11:37:15.421 [info] Receive response of 2742 from a with [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 9137}}}]

11:37:15.421 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}]

11:37:15.421 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2742, key: "3", object: [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 9137}}}], sender: :a, type: :get_log}

11:37:15.421 [info] Send request {:get, "2"}

11:37:15.422 [info] lb receive get from :client_a (2744)

11:37:15.422 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}], type: :get_response, req_id: 2743}}

11:37:15.422 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2745, observer: :observer}

11:37:15.422 [info] Latest entries: [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}]

11:37:15.423 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 2744}

11:37:15.423 [info] Receive response of 2743 from a with [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}]

11:37:15.423 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2743, key: "5", object: [%KvStore.CacheEntry{object: 443, context: %KvStore.Context{vector_clock: %{a: 9050}}}], sender: :a, type: :get_log}

11:37:15.423 [info] Send request {:put, "1", 824, []}

11:37:15.423 [warning] :a Timeout for request: 2705

11:37:15.423 [warning] :a Timeout for request: 2705, but request not found.

11:37:15.424 [info] lb receive put from :client_b

11:37:15.424 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 525, context: %KvStore.Context{vector_clock: %{a: 9135}}}]

11:37:15.424 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2746, observer: :observer}

11:37:15.425 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 525, context: %KvStore.Context{vector_clock: %{a: 9135}}}], type: :get_response, req_id: 2744}}

11:37:15.425 [info] Latest entries: [%KvStore.CacheEntry{object: 525, context: %KvStore.Context{vector_clock: %{a: 9135}}}]

11:37:15.425 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 824, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 2745}

11:37:15.426 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2744, key: "2", object: [%KvStore.CacheEntry{object: 525, context: %KvStore.Context{vector_clock: %{a: 9135}}}], sender: :a, type: :get_log}

11:37:15.426 [info] New objects are [%KvStore.CacheEntry{object: 824, context: %KvStore.Context{vector_clock: %{a: 9152}}}]

11:37:15.426 [info] Receive response of 2744 from a with [%KvStore.CacheEntry{object: 525, context: %KvStore.Context{vector_clock: %{a: 9135}}}]

11:37:15.426 [info] Send request {:put, "3", 144, []}

11:37:15.427 [info] lb receive put from :client_a

11:37:15.427 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2747, observer: :observer}

11:37:15.428 [info] Receive response of 2745 from a with context: %KvStore.Context{vector_clock: %{a: 9152}}

11:37:15.428 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2745, key: "1", object: 824, sender: :a, type: :put_log}

11:37:15.428 [info] Send request {:get, "4"}

11:37:15.428 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 144, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 2746}

11:37:15.429 [info] lb receive get from :client_b (2747)

11:37:15.429 [info] New objects are [%KvStore.CacheEntry{object: 144, context: %KvStore.Context{vector_clock: %{a: 9155}}}]

11:37:15.429 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2748, observer: :observer}

11:37:15.430 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 2747}

11:37:15.430 [warning] :a Timeout for request: 2708

11:37:15.430 [warning] :a Timeout for request: 2708, but request not found.

11:37:15.431 [info] Receive response of 2746 from a with context: %KvStore.Context{vector_clock: %{a: 9155}}

11:37:15.431 [info] generate requests

11:37:15.431 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 9111}}}]

11:37:15.431 [info] Send request {:put, "2", 489, []}

11:37:15.431 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 2746, key: "3", object: 144, sender: :a, type: :put_log}

11:37:15.432 [info] lb receive put from :client_a

11:37:15.432 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 9111}}}], type: :get_response, req_id: 2747}}

11:37:15.432 [info] Latest entries: [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 9111}}}]

11:37:15.432 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 2749, observer: :observer}

11:37:15.433 [info] Receive response of 2747 from a with [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 9111}}}]

11:37:15.433 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 2747, key: "4", object: [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 9111}}}], sender: :a, type: :get_log}

11:37:15.433 [info] generate requests

11:37:15.433 [info] Send request {:put, "2", 487, []}

11:37:15.433 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 489, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 2748}

11:37:16.299 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3088, observer: :observer}

11:37:16.300 [info] Receive response of 3086 from a with context: %KvStore.Context{vector_clock: %{a: 10291}}

11:37:16.300 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3086, key: "3", object: 588, sender: :a, type: :put_log}

11:37:16.300 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 3087}

11:37:16.300 [info] Send request {:get, "2"}

11:37:16.301 [info] lb receive get from :client_a (3088)

11:37:16.301 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 280, context: %KvStore.Context{vector_clock: %{a: 10261}}}]

11:37:16.301 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3089, observer: :observer}

11:37:16.302 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 3088}

11:37:16.302 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 280, context: %KvStore.Context{vector_clock: %{a: 10261}}}], type: :get_response, req_id: 3087}}

11:37:16.302 [info] Latest entries: [%KvStore.CacheEntry{object: 280, context: %KvStore.Context{vector_clock: %{a: 10261}}}]

11:37:16.303 [info] Receive response of 3087 from a with [%KvStore.CacheEntry{object: 280, context: %KvStore.Context{vector_clock: %{a: 10261}}}]

11:37:16.303 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3087, key: "5", object: [%KvStore.CacheEntry{object: 280, context: %KvStore.Context{vector_clock: %{a: 10261}}}], sender: :a, type: :get_log}

11:37:16.303 [info] Send request {:put, "1", 206, []}

11:37:16.303 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.304 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}], type: :get_response, req_id: 3088}}

11:37:16.304 [info] lb receive put from :client_b

11:37:16.304 [info] Latest entries: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.304 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3090, observer: :observer}

11:37:16.305 [info] Receive response of 3088 from a with [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.305 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 206, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3089}

11:37:16.305 [info] generate requests

11:37:16.305 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3088, key: "2", object: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}], sender: :a, type: :get_log}

11:37:16.305 [info] Send request {:get, "2"}

11:37:16.306 [info] New objects are [%KvStore.CacheEntry{object: 206, context: %KvStore.Context{vector_clock: %{a: 10300}}}]

11:37:16.306 [info] lb receive get from :client_a (3090)

11:37:16.306 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3091, observer: :observer}

11:37:16.307 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 3090}

11:37:16.307 [warning] :a Timeout for request: 3052

11:37:16.307 [warning] :a Timeout for request: 3052, but request not found.

11:37:16.308 [info] Receive response of 3089 from a with context: %KvStore.Context{vector_clock: %{a: 10300}}

11:37:16.308 [info] generate requests

11:37:16.308 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3089, key: "1", object: 206, sender: :a, type: :put_log}

11:37:16.308 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.308 [info] Send request {:get, "2"}

11:37:16.309 [info] lb receive get from :client_b (3091)

11:37:16.309 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}], type: :get_response, req_id: 3090}}

11:37:16.309 [info] Latest entries: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.309 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3092, observer: :observer}

11:37:16.309 [warning] :a Timeout for request: 3053

11:37:16.309 [warning] :a Timeout for request: 3053, but request not found.

11:37:16.310 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 3091}

11:37:16.310 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3090, key: "2", object: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}], sender: :a, type: :get_log}

11:37:16.310 [info] Receive response of 3090 from a with [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.310 [info] Send request {:put, "1", 842, []}

11:37:16.311 [info] lb receive put from :client_a

11:37:16.311 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.311 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3093, observer: :observer}

11:37:16.312 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 842, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3092}

11:37:16.312 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}], type: :get_response, req_id: 3091}}

11:37:16.312 [info] Latest entries: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.313 [info] Receive response of 3091 from a with [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.313 [info] New objects are [%KvStore.CacheEntry{object: 842, context: %KvStore.Context{vector_clock: %{a: 10310}}}]

11:37:16.313 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3091, key: "2", object: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}], sender: :a, type: :get_log}

11:37:16.313 [info] Send request {:get, "1"}

11:37:16.314 [info] lb receive get from :client_b (3093)

11:37:16.314 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3094, observer: :observer}

11:37:16.315 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3092, key: "1", object: 842, sender: :a, type: :put_log}

11:37:16.315 [info] Receive response of 3092 from a with context: %KvStore.Context{vector_clock: %{a: 10310}}

11:37:16.315 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 3093}

11:37:16.315 [info] Send request {:get, "1"}

11:37:16.316 [info] lb receive get from :client_a (3094)

11:37:16.316 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 842, context: %KvStore.Context{vector_clock: %{a: 10310}}}]

11:37:16.316 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3095, observer: :observer}

11:37:16.317 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 842, context: %KvStore.Context{vector_clock: %{a: 10310}}}], type: :get_response, req_id: 3093}}

11:37:16.317 [info] Latest entries: [%KvStore.CacheEntry{object: 842, context: %KvStore.Context{vector_clock: %{a: 10310}}}]

11:37:16.317 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 3094}

11:37:16.318 [info] Receive response of 3093 from a with [%KvStore.CacheEntry{object: 842, context: %KvStore.Context{vector_clock: %{a: 10310}}}]

11:37:16.318 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3093, key: "1", object: [%KvStore.CacheEntry{object: 842, context: %KvStore.Context{vector_clock: %{a: 10310}}}], sender: :a, type: :get_log}

11:37:16.318 [info] Send request {:put, "3", 632, []}

11:37:16.318 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 842, context: %KvStore.Context{vector_clock: %{a: 10310}}}]

11:37:16.318 [warning] :a Timeout for request: 3056

11:37:16.318 [warning] :a Timeout for request: 3056, but request not found.

11:37:16.319 [info] lb receive put from :client_b

11:37:16.319 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 842, context: %KvStore.Context{vector_clock: %{a: 10310}}}], type: :get_response, req_id: 3094}}

11:37:16.319 [info] Latest entries: [%KvStore.CacheEntry{object: 842, context: %KvStore.Context{vector_clock: %{a: 10310}}}]

11:37:16.319 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3096, observer: :observer}

11:37:16.320 [info] Receive response of 3094 from a with [%KvStore.CacheEntry{object: 842, context: %KvStore.Context{vector_clock: %{a: 10310}}}]

11:37:16.320 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3094, key: "1", object: [%KvStore.CacheEntry{object: 842, context: %KvStore.Context{vector_clock: %{a: 10310}}}], sender: :a, type: :get_log}

11:37:16.320 [info] generate requests

11:37:16.320 [info] Send request {:put, "5", 41, []}

11:37:16.320 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 632, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3095}

11:37:16.321 [info] lb receive put from :client_a

11:37:16.321 [info] New objects are [%KvStore.CacheEntry{object: 632, context: %KvStore.Context{vector_clock: %{a: 10321}}}]

11:37:16.321 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3097, observer: :observer}

11:37:16.323 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 41, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3096}

11:37:16.324 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3095, key: "3", object: 632, sender: :a, type: :put_log}

11:37:16.324 [info] Receive response of 3095 from a with context: %KvStore.Context{vector_clock: %{a: 10321}}

11:37:16.324 [info] generate requests

11:37:16.324 [info] Send request {:get, "1"}

11:37:16.324 [info] New objects are [%KvStore.CacheEntry{object: 41, context: %KvStore.Context{vector_clock: %{a: 10324}}}]

11:37:16.325 [info] lb receive get from :client_b (3097)

11:37:16.325 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3098, observer: :observer}

11:37:16.325 [warning] :a Timeout for request: 3059

11:37:16.325 [warning] :a Timeout for request: 3059, but request not found.

11:37:16.326 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3096, key: "5", object: 41, sender: :a, type: :put_log}

11:37:16.326 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 3097}

11:37:16.326 [info] Receive response of 3096 from a with context: %KvStore.Context{vector_clock: %{a: 10324}}

11:37:16.326 [info] Send request {:get, "3"}

11:37:16.327 [info] lb receive get from :client_a (3098)

11:37:16.327 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 842, context: %KvStore.Context{vector_clock: %{a: 10310}}}]

11:37:16.327 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3099, observer: :observer}

11:37:16.328 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 3098}

11:37:16.328 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 842, context: %KvStore.Context{vector_clock: %{a: 10310}}}], type: :get_response, req_id: 3097}}

11:37:16.328 [info] Latest entries: [%KvStore.CacheEntry{object: 842, context: %KvStore.Context{vector_clock: %{a: 10310}}}]

11:37:16.329 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3097, key: "1", object: [%KvStore.CacheEntry{object: 842, context: %KvStore.Context{vector_clock: %{a: 10310}}}], sender: :a, type: :get_log}

11:37:16.329 [info] Receive response of 3097 from a with [%KvStore.CacheEntry{object: 842, context: %KvStore.Context{vector_clock: %{a: 10310}}}]

11:37:16.329 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 632, context: %KvStore.Context{vector_clock: %{a: 10321}}}]

11:37:16.329 [info] Send request {:get, "4"}

11:37:16.330 [info] lb receive get from :client_b (3099)

11:37:16.330 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 632, context: %KvStore.Context{vector_clock: %{a: 10321}}}], type: :get_response, req_id: 3098}}

11:37:16.330 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3100, observer: :observer}

11:37:16.330 [info] Latest entries: [%KvStore.CacheEntry{object: 632, context: %KvStore.Context{vector_clock: %{a: 10321}}}]

11:37:16.330 [warning] :a Timeout for request: 3061

11:37:16.330 [warning] :a Timeout for request: 3061, but request not found.

11:37:16.331 [info] Receive response of 3098 from a with [%KvStore.CacheEntry{object: 632, context: %KvStore.Context{vector_clock: %{a: 10321}}}]

11:37:16.331 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3098, key: "3", object: [%KvStore.CacheEntry{object: 632, context: %KvStore.Context{vector_clock: %{a: 10321}}}], sender: :a, type: :get_log}

11:37:16.331 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 3099}

11:37:16.331 [info] Send request {:get, "2"}

11:37:16.332 [info] lb receive get from :client_a (3100)

11:37:16.332 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}]

11:37:16.332 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3101, observer: :observer}

11:37:16.333 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 3100}

11:37:16.333 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}], type: :get_response, req_id: 3099}}

11:37:16.333 [info] Latest entries: [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}]

11:37:16.334 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3099, key: "4", object: [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}], sender: :a, type: :get_log}

11:37:16.334 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.334 [info] Receive response of 3099 from a with [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}]

11:37:16.334 [info] Send request {:put, "1", 841, []}

11:37:16.335 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}], type: :get_response, req_id: 3100}}

11:37:16.336 [info] lb receive put from :client_b

11:37:16.335 [info] Latest entries: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.336 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3102, observer: :observer}

11:37:16.336 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3100, key: "2", object: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}], sender: :a, type: :get_log}

11:37:16.336 [info] Receive response of 3100 from a with [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.336 [info] generate requests

11:37:16.336 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 841, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3101}

11:37:16.336 [info] Send request {:put, "5", 666, []}

11:37:16.337 [info] lb receive put from :client_a

11:37:16.337 [info] New objects are [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.337 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3103, observer: :observer}

11:37:16.338 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 666, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3102}

11:37:16.338 [warning] :a Timeout for request: 3064

11:37:16.338 [warning] :a Timeout for request: 3064, but request not found.

11:37:16.339 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3101, key: "1", object: 841, sender: :a, type: :put_log}

11:37:16.339 [info] New objects are [%KvStore.CacheEntry{object: 666, context: %KvStore.Context{vector_clock: %{a: 10343}}}]

11:37:16.339 [info] Receive response of 3101 from a with context: %KvStore.Context{vector_clock: %{a: 10341}}

11:37:16.339 [info] generate requests

11:37:16.339 [info] Send request {:get, "1"}

11:37:16.340 [info] lb receive get from :client_b (3103)

11:37:16.340 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3104, observer: :observer}

11:37:16.341 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 3103}

11:37:16.341 [info] Receive response of 3102 from a with context: %KvStore.Context{vector_clock: %{a: 10343}}

11:37:16.341 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3102, key: "5", object: 666, sender: :a, type: :put_log}

11:37:16.341 [info] Send request {:get, "1"}

11:37:16.342 [info] lb receive get from :client_a (3104)

11:37:16.342 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.342 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3105, observer: :observer}

11:37:16.343 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 3104}

11:37:16.343 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}], type: :get_response, req_id: 3103}}

11:37:16.343 [info] Latest entries: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.344 [info] Receive response of 3103 from a with [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.344 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3103, key: "1", object: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}], sender: :a, type: :get_log}

11:37:16.344 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.344 [info] Send request {:put, "3", 837, []}

11:37:16.345 [info] lb receive put from :client_b

11:37:16.345 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}], type: :get_response, req_id: 3104}}

11:37:16.345 [info] Latest entries: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.345 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3106, observer: :observer}

11:37:16.346 [info] Receive response of 3104 from a with [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.346 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3104, key: "1", object: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}], sender: :a, type: :get_log}

11:37:16.346 [info] Send request {:get, "1"}

11:37:16.346 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 837, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3105}

11:37:16.347 [info] New objects are [%KvStore.CacheEntry{object: 837, context: %KvStore.Context{vector_clock: %{a: 10354}}}]

11:37:16.347 [info] lb receive get from :client_a (3106)

11:37:16.347 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3107, observer: :observer}

11:37:16.349 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 3106}

11:37:16.350 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3105, key: "3", object: 837, sender: :a, type: :put_log}

11:37:16.350 [info] Receive response of 3105 from a with context: %KvStore.Context{vector_clock: %{a: 10354}}

11:37:16.350 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.350 [info] Send request {:get, "3"}

11:37:16.351 [info] lb receive get from :client_b (3107)

11:37:16.351 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}], type: :get_response, req_id: 3106}}

11:37:16.351 [info] Latest entries: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.351 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3108, observer: :observer}

11:37:16.352 [info] Receive response of 3106 from a with [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.352 [info] generate requests

11:37:16.352 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 3107}

11:37:16.352 [info] Send request {:get, "1"}

11:37:16.352 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3106, key: "1", object: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}], sender: :a, type: :get_log}

11:37:16.353 [info] lb receive get from :client_a (3108)

11:37:16.353 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 837, context: %KvStore.Context{vector_clock: %{a: 10354}}}]

11:37:16.353 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3109, observer: :observer}

11:37:16.354 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 837, context: %KvStore.Context{vector_clock: %{a: 10354}}}], type: :get_response, req_id: 3107}}

11:37:16.354 [info] Latest entries: [%KvStore.CacheEntry{object: 837, context: %KvStore.Context{vector_clock: %{a: 10354}}}]

11:37:16.354 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 3108}

11:37:16.355 [info] Receive response of 3107 from a with [%KvStore.CacheEntry{object: 837, context: %KvStore.Context{vector_clock: %{a: 10354}}}]

11:37:16.355 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3107, key: "3", object: [%KvStore.CacheEntry{object: 837, context: %KvStore.Context{vector_clock: %{a: 10354}}}], sender: :a, type: :get_log}

11:37:16.355 [info] generate requests

11:37:16.355 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.355 [info] Send request {:get, "1"}

11:37:16.355 [warning] :a Timeout for request: 3071

11:37:16.355 [warning] :a Timeout for request: 3071, but request not found.

11:37:16.356 [info] lb receive get from :client_b (3109)

11:37:16.356 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}], type: :get_response, req_id: 3108}}

11:37:16.356 [info] Latest entries: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.356 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3110, observer: :observer}

11:37:16.357 [info] Receive response of 3108 from a with [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.357 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 3109}

11:37:16.357 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3108, key: "1", object: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}], sender: :a, type: :get_log}

11:37:16.357 [info] Send request {:get, "4"}

11:37:16.358 [info] lb receive get from :client_a (3110)

11:37:16.358 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.358 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3111, observer: :observer}

11:37:16.358 [warning] :a Timeout for request: 3072

11:37:16.358 [warning] :a Timeout for request: 3072, but request not found.

11:37:16.359 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 3110}

11:37:16.359 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}], type: :get_response, req_id: 3109}}

11:37:16.359 [info] Latest entries: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.360 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3109, key: "1", object: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}], sender: :a, type: :get_log}

11:37:16.360 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}]

11:37:16.360 [info] Receive response of 3109 from a with [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.360 [info] Send request {:put, "5", 320, []}

11:37:16.361 [info] lb receive put from :client_b

11:37:16.361 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}], type: :get_response, req_id: 3110}}

11:37:16.361 [info] Latest entries: [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}]

11:37:16.361 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3112, observer: :observer}

11:37:16.362 [info] Receive response of 3110 from a with [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}]

11:37:16.362 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3110, key: "4", object: [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}], sender: :a, type: :get_log}

11:37:16.362 [info] Send request {:put, "3", 158, []}

11:37:16.362 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 320, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3111}

11:37:16.363 [info] lb receive put from :client_a

11:37:16.363 [info] New objects are [%KvStore.CacheEntry{object: 320, context: %KvStore.Context{vector_clock: %{a: 10374}}}]

11:37:16.363 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3113, observer: :observer}

11:37:16.364 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 158, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3112}

11:37:16.366 [info] Receive response of 3111 from a with context: %KvStore.Context{vector_clock: %{a: 10374}}

11:37:16.366 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3111, key: "5", object: 320, sender: :a, type: :put_log}

11:37:16.366 [info] New objects are [%KvStore.CacheEntry{object: 158, context: %KvStore.Context{vector_clock: %{a: 10376}}}]

11:37:16.366 [info] Send request {:get, "2"}

11:37:16.366 [warning] :a Timeout for request: 3075

11:37:16.366 [warning] :a Timeout for request: 3075, but request not found.

11:37:16.366 [info] lb receive get from :client_b (3113)

11:37:16.366 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3114, observer: :observer}

11:37:16.367 [info] Receive response of 3112 from a with context: %KvStore.Context{vector_clock: %{a: 10376}}

11:37:16.367 [info] generate requests

11:37:16.367 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3112, key: "3", object: 158, sender: :a, type: :put_log}

11:37:16.367 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 3113}

11:37:16.367 [info] Send request {:put, "3", 184, []}

11:37:16.368 [info] lb receive put from :client_a

11:37:16.368 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.368 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3115, observer: :observer}

11:37:16.369 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 184, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3114}

11:37:16.369 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}], type: :get_response, req_id: 3113}}

11:37:16.369 [info] Latest entries: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.370 [info] Receive response of 3113 from a with [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.370 [info] New objects are [%KvStore.CacheEntry{object: 184, context: %KvStore.Context{vector_clock: %{a: 10383}}}]

11:37:16.370 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3113, key: "2", object: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}], sender: :a, type: :get_log}

11:37:16.370 [info] generate requests

11:37:16.370 [info] Send request {:get, "3"}

11:37:16.371 [info] lb receive get from :client_b (3115)

11:37:16.371 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3116, observer: :observer}

11:37:16.372 [info] Receive response of 3114 from a with context: %KvStore.Context{vector_clock: %{a: 10383}}

11:37:16.372 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 3115}

11:37:16.372 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3114, key: "3", object: 184, sender: :a, type: :put_log}

11:37:16.372 [info] Send request {:get, "5"}

11:37:16.373 [info] lb receive get from :client_a (3116)

11:37:16.373 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 184, context: %KvStore.Context{vector_clock: %{a: 10383}}}]

11:37:16.374 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3117, observer: :observer}

11:37:16.377 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 3116}

11:37:16.377 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 184, context: %KvStore.Context{vector_clock: %{a: 10383}}}], type: :get_response, req_id: 3115}}

11:37:16.377 [info] Latest entries: [%KvStore.CacheEntry{object: 184, context: %KvStore.Context{vector_clock: %{a: 10383}}}]

11:37:16.377 [warning] :a Timeout for request: 3078

11:37:16.377 [warning] :a Timeout for request: 3078, but request not found.

11:37:16.378 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3115, key: "3", object: [%KvStore.CacheEntry{object: 184, context: %KvStore.Context{vector_clock: %{a: 10383}}}], sender: :a, type: :get_log}

11:37:16.378 [info] Receive response of 3115 from a with [%KvStore.CacheEntry{object: 184, context: %KvStore.Context{vector_clock: %{a: 10383}}}]

11:37:16.378 [info] Send request {:get, "4"}

11:37:16.378 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 320, context: %KvStore.Context{vector_clock: %{a: 10374}}}]

11:37:16.379 [info] lb receive get from :client_b (3117)

11:37:16.379 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3118, observer: :observer}

11:37:16.379 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 320, context: %KvStore.Context{vector_clock: %{a: 10374}}}], type: :get_response, req_id: 3116}}

11:37:16.379 [info] Latest entries: [%KvStore.CacheEntry{object: 320, context: %KvStore.Context{vector_clock: %{a: 10374}}}]

11:37:16.380 [info] Receive response of 3116 from a with [%KvStore.CacheEntry{object: 320, context: %KvStore.Context{vector_clock: %{a: 10374}}}]

11:37:16.380 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3116, key: "5", object: [%KvStore.CacheEntry{object: 320, context: %KvStore.Context{vector_clock: %{a: 10374}}}], sender: :a, type: :get_log}

11:37:16.380 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 3117}

11:37:16.380 [info] Send request {:get, "4"}

11:37:16.381 [info] lb receive get from :client_a (3118)

11:37:16.381 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}]

11:37:16.381 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3119, observer: :observer}

11:37:16.382 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 3118}

11:37:16.382 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}], type: :get_response, req_id: 3117}}

11:37:16.382 [info] Latest entries: [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}]

11:37:16.383 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3117, key: "4", object: [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}], sender: :a, type: :get_log}

11:37:16.383 [info] Receive response of 3117 from a with [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}]

11:37:16.383 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}]

11:37:16.383 [info] Send request {:put, "4", 278, []}

11:37:16.384 [info] lb receive put from :client_b

11:37:16.384 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}], type: :get_response, req_id: 3118}}

11:37:16.384 [info] Latest entries: [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}]

11:37:16.384 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3120, observer: :observer}

11:37:16.385 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3118, key: "4", object: [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}], sender: :a, type: :get_log}

11:37:16.385 [info] Receive response of 3118 from a with [%KvStore.CacheEntry{object: 58, context: %KvStore.Context{vector_clock: %{a: 10274}}}]

11:37:16.385 [info] generate requests

11:37:16.385 [info] Send request {:get, "5"}

11:37:16.385 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 278, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3119}

11:37:16.385 [warning] :a Timeout for request: 3082

11:37:16.385 [warning] :a Timeout for request: 3082, but request not found.

11:37:16.386 [info] lb receive get from :client_a (3120)

11:37:16.386 [info] New objects are [%KvStore.CacheEntry{object: 278, context: %KvStore.Context{vector_clock: %{a: 10400}}}]

11:37:16.386 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3121, observer: :observer}

11:37:16.387 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 3120}

11:37:16.387 [warning] :a Timeout for request: 3083

11:37:16.387 [warning] :a Timeout for request: 3083, but request not found.

11:37:16.388 [info] Receive response of 3119 from a with context: %KvStore.Context{vector_clock: %{a: 10400}}

11:37:16.388 [info] generate requests

11:37:16.388 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3119, key: "4", object: 278, sender: :a, type: :put_log}

11:37:16.388 [info] Send request {:put, "4", 648, []}

11:37:16.388 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 320, context: %KvStore.Context{vector_clock: %{a: 10374}}}]

11:37:16.389 [info] lb receive put from :client_b

11:37:16.389 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 320, context: %KvStore.Context{vector_clock: %{a: 10374}}}], type: :get_response, req_id: 3120}}

11:37:16.390 [info] Latest entries: [%KvStore.CacheEntry{object: 320, context: %KvStore.Context{vector_clock: %{a: 10374}}}]

11:37:16.390 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3122, observer: :observer}

11:37:16.390 [info] Receive response of 3120 from a with [%KvStore.CacheEntry{object: 320, context: %KvStore.Context{vector_clock: %{a: 10374}}}]

11:37:16.390 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3120, key: "5", object: [%KvStore.CacheEntry{object: 320, context: %KvStore.Context{vector_clock: %{a: 10374}}}], sender: :a, type: :get_log}

11:37:16.390 [info] Send request {:put, "5", 40, []}

11:37:16.390 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 648, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3121}

11:37:16.391 [info] lb receive put from :client_a

11:37:16.391 [info] New objects are [%KvStore.CacheEntry{object: 648, context: %KvStore.Context{vector_clock: %{a: 10408}}}]

11:37:16.391 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3123, observer: :observer}

11:37:16.392 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 40, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3122}

11:37:16.393 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3121, key: "4", object: 648, sender: :a, type: :put_log}

11:37:16.393 [info] Receive response of 3121 from a with context: %KvStore.Context{vector_clock: %{a: 10408}}

11:37:16.393 [info] New objects are [%KvStore.CacheEntry{object: 40, context: %KvStore.Context{vector_clock: %{a: 10410}}}]

11:37:16.393 [info] Send request {:get, "2"}

11:37:16.394 [info] lb receive get from :client_b (3123)

11:37:16.394 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3124, observer: :observer}

11:37:16.395 [info] Receive response of 3122 from a with context: %KvStore.Context{vector_clock: %{a: 10410}}

11:37:16.395 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3122, key: "5", object: 40, sender: :a, type: :put_log}

11:37:16.395 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 3123}

11:37:16.395 [info] Send request {:get, "1"}

11:37:16.396 [info] lb receive get from :client_a (3124)

11:37:16.396 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.396 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3125, observer: :observer}

11:37:16.397 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}], type: :get_response, req_id: 3123}}

11:37:16.397 [info] Latest entries: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.397 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 3124}

11:37:16.398 [info] Receive response of 3123 from a with [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.398 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.398 [info] Send request {:get, "5"}

11:37:16.398 [warning] :a Timeout for request: 3087

11:37:16.398 [warning] :a Timeout for request: 3087, but request not found.

11:37:16.398 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3123, key: "2", object: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}], sender: :a, type: :get_log}

11:37:16.399 [info] lb receive get from :client_b (3125)

11:37:16.399 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}], type: :get_response, req_id: 3124}}

11:37:16.399 [info] Latest entries: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.399 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3126, observer: :observer}

11:37:16.400 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 3125}

11:37:16.400 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3124, key: "1", object: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}], sender: :a, type: :get_log}

11:37:16.400 [info] Receive response of 3124 from a with [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.400 [info] generate requests

11:37:16.400 [info] Send request {:get, "1"}

11:37:16.401 [info] lb receive get from :client_a (3126)

11:37:16.401 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 40, context: %KvStore.Context{vector_clock: %{a: 10410}}}]

11:37:16.401 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3127, observer: :observer}

11:37:16.402 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 40, context: %KvStore.Context{vector_clock: %{a: 10410}}}], type: :get_response, req_id: 3125}}

11:37:16.402 [info] Latest entries: [%KvStore.CacheEntry{object: 40, context: %KvStore.Context{vector_clock: %{a: 10410}}}]

11:37:16.402 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 3126}

11:37:16.403 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.403 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3125, key: "5", object: [%KvStore.CacheEntry{object: 40, context: %KvStore.Context{vector_clock: %{a: 10410}}}], sender: :a, type: :get_log}

11:37:16.403 [info] Receive response of 3125 from a with [%KvStore.CacheEntry{object: 40, context: %KvStore.Context{vector_clock: %{a: 10410}}}]

11:37:16.403 [info] generate requests

11:37:16.403 [info] Send request {:get, "3"}

11:37:16.404 [info] lb receive get from :client_b (3127)

11:37:16.404 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}], type: :get_response, req_id: 3126}}

11:37:16.404 [info] Latest entries: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.404 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3128, observer: :observer}

11:37:16.405 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 3127}

11:37:16.405 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3126, key: "1", object: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}], sender: :a, type: :get_log}

11:37:16.405 [info] Receive response of 3126 from a with [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.405 [info] Send request {:get, "5"}

11:37:16.406 [info] lb receive get from :client_a (3128)

11:37:16.406 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 184, context: %KvStore.Context{vector_clock: %{a: 10383}}}]

11:37:16.406 [warning] :a Timeout for request: 3090

11:37:16.406 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3129, observer: :observer}

11:37:16.406 [warning] :a Timeout for request: 3090, but request not found.

11:37:16.407 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 3128}

11:37:16.407 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 184, context: %KvStore.Context{vector_clock: %{a: 10383}}}], type: :get_response, req_id: 3127}}

11:37:16.407 [info] Latest entries: [%KvStore.CacheEntry{object: 184, context: %KvStore.Context{vector_clock: %{a: 10383}}}]

11:37:16.408 [info] Receive response of 3127 from a with [%KvStore.CacheEntry{object: 184, context: %KvStore.Context{vector_clock: %{a: 10383}}}]

11:37:16.408 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 40, context: %KvStore.Context{vector_clock: %{a: 10410}}}]

11:37:16.408 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3127, key: "3", object: [%KvStore.CacheEntry{object: 184, context: %KvStore.Context{vector_clock: %{a: 10383}}}], sender: :a, type: :get_log}

11:37:16.408 [info] Send request {:get, "2"}

11:37:16.409 [info] lb receive get from :client_b (3129)

11:37:16.409 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 40, context: %KvStore.Context{vector_clock: %{a: 10410}}}], type: :get_response, req_id: 3128}}

11:37:16.409 [info] Latest entries: [%KvStore.CacheEntry{object: 40, context: %KvStore.Context{vector_clock: %{a: 10410}}}]

11:37:16.409 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3130, observer: :observer}

11:37:16.410 [info] Receive response of 3128 from a with [%KvStore.CacheEntry{object: 40, context: %KvStore.Context{vector_clock: %{a: 10410}}}]

11:37:16.410 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 3129}

11:37:16.410 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3128, key: "5", object: [%KvStore.CacheEntry{object: 40, context: %KvStore.Context{vector_clock: %{a: 10410}}}], sender: :a, type: :get_log}

11:37:16.410 [info] Send request {:put, "3", 289, []}

11:37:16.411 [info] lb receive put from :client_a

11:37:16.411 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.411 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3131, observer: :observer}

11:37:16.412 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}], type: :get_response, req_id: 3129}}

11:37:16.412 [info] Latest entries: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.412 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 289, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3130}

11:37:16.413 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3129, key: "2", object: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}], sender: :a, type: :get_log}

11:37:16.413 [info] Receive response of 3129 from a with [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}]

11:37:16.413 [info] New objects are [%KvStore.CacheEntry{object: 289, context: %KvStore.Context{vector_clock: %{a: 10437}}}]

11:37:16.413 [info] Send request {:put, "2", 89, []}

11:37:16.413 [warning] :a Timeout for request: 3093

11:37:16.413 [warning] :a Timeout for request: 3093, but request not found.

11:37:16.414 [info] lb receive put from :client_b

11:37:16.414 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3132, observer: :observer}

11:37:16.415 [info] Receive response of 3130 from a with context: %KvStore.Context{vector_clock: %{a: 10437}}

11:37:16.415 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3130, key: "3", object: 289, sender: :a, type: :put_log}

11:37:16.415 [info] generate requests

11:37:16.415 [info] Send request {:get, "1"}

11:37:16.415 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 89, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3131}

11:37:16.416 [info] lb receive get from :client_a (3132)

11:37:16.416 [info] New objects are [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 10441}}}]

11:37:16.416 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3133, observer: :observer}

11:37:16.417 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 3132}

11:37:16.418 [info] Receive response of 3131 from a with context: %KvStore.Context{vector_clock: %{a: 10441}}

11:37:16.418 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3131, key: "2", object: 89, sender: :a, type: :put_log}

11:37:16.418 [info] generate requests

11:37:16.418 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.418 [info] Send request {:put, "3", 345, []}

11:37:16.419 [info] lb receive put from :client_b

11:37:16.419 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}], type: :get_response, req_id: 3132}}

11:37:16.419 [info] Latest entries: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.419 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3134, observer: :observer}

11:37:16.420 [info] Receive response of 3132 from a with [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.420 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3132, key: "1", object: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}], sender: :a, type: :get_log}

11:37:16.420 [info] Send request {:put, "5", 167, []}

11:37:16.420 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 345, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3133}

11:37:16.421 [info] lb receive put from :client_a

11:37:16.421 [info] New objects are [%KvStore.CacheEntry{object: 345, context: %KvStore.Context{vector_clock: %{a: 10447}}}]

11:37:16.421 [warning] :a Timeout for request: 3096

11:37:16.421 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3135, observer: :observer}

11:37:16.421 [warning] :a Timeout for request: 3096, but request not found.

11:37:16.422 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 167, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3134}

11:37:16.423 [info] Receive response of 3133 from a with context: %KvStore.Context{vector_clock: %{a: 10447}}

11:37:16.423 [info] New objects are [%KvStore.CacheEntry{object: 167, context: %KvStore.Context{vector_clock: %{a: 10450}}}]

11:37:16.423 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3133, key: "3", object: 345, sender: :a, type: :put_log}

11:37:16.423 [info] Send request {:get, "5"}

11:37:16.424 [info] lb receive get from :client_b (3135)

11:37:16.424 [warning] :a Timeout for request: 3097

11:37:16.424 [warning] :a Timeout for request: 3097, but request not found.

11:37:16.424 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3136, observer: :observer}

11:37:16.425 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3134, key: "5", object: 167, sender: :a, type: :put_log}

11:37:16.425 [info] Receive response of 3134 from a with context: %KvStore.Context{vector_clock: %{a: 10450}}

11:37:16.425 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 3135}

11:37:16.425 [info] Send request {:get, "1"}

11:37:16.426 [info] lb receive get from :client_a (3136)

11:37:16.426 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 167, context: %KvStore.Context{vector_clock: %{a: 10450}}}]

11:37:16.426 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3137, observer: :observer}

11:37:16.427 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 167, context: %KvStore.Context{vector_clock: %{a: 10450}}}], type: :get_response, req_id: 3135}}

11:37:16.427 [info] Latest entries: [%KvStore.CacheEntry{object: 167, context: %KvStore.Context{vector_clock: %{a: 10450}}}]

11:37:16.427 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 3136}

11:37:16.428 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.428 [info] Receive response of 3135 from a with [%KvStore.CacheEntry{object: 167, context: %KvStore.Context{vector_clock: %{a: 10450}}}]

11:37:16.428 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3135, key: "5", object: [%KvStore.CacheEntry{object: 167, context: %KvStore.Context{vector_clock: %{a: 10450}}}], sender: :a, type: :get_log}

11:37:16.428 [info] Send request {:get, "5"}

11:37:16.429 [info] lb receive get from :client_b (3137)

11:37:16.429 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}], type: :get_response, req_id: 3136}}

11:37:16.429 [info] Latest entries: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.429 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3138, observer: :observer}

11:37:16.430 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3136, key: "1", object: [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}], sender: :a, type: :get_log}

11:37:16.430 [info] Receive response of 3136 from a with [%KvStore.CacheEntry{object: 841, context: %KvStore.Context{vector_clock: %{a: 10341}}}]

11:37:16.430 [info] generate requests

11:37:16.430 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 3137}

11:37:16.430 [info] Send request {:get, "2"}

11:37:16.431 [info] lb receive get from :client_a (3138)

11:37:16.431 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 167, context: %KvStore.Context{vector_clock: %{a: 10450}}}]

11:37:16.431 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3139, observer: :observer}

11:37:16.432 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 3138}

11:37:16.432 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 167, context: %KvStore.Context{vector_clock: %{a: 10450}}}], type: :get_response, req_id: 3137}}

11:37:16.432 [info] Latest entries: [%KvStore.CacheEntry{object: 167, context: %KvStore.Context{vector_clock: %{a: 10450}}}]

11:37:16.433 [info] Receive response of 3137 from a with [%KvStore.CacheEntry{object: 167, context: %KvStore.Context{vector_clock: %{a: 10450}}}]

11:37:16.433 [info] generate requests

11:37:16.433 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 10441}}}]

11:37:16.433 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3137, key: "5", object: [%KvStore.CacheEntry{object: 167, context: %KvStore.Context{vector_clock: %{a: 10450}}}], sender: :a, type: :get_log}

11:37:16.433 [info] Send request {:put, "3", 283, []}

11:37:16.434 [info] lb receive put from :client_b

11:37:16.434 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 10441}}}], type: :get_response, req_id: 3138}}

11:37:16.434 [info] Latest entries: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 10441}}}]

11:37:16.434 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3140, observer: :observer}

11:37:16.435 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3138, key: "2", object: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 10441}}}], sender: :a, type: :get_log}

11:37:16.435 [info] Receive response of 3138 from a with [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 10441}}}]

11:37:16.435 [info] Send request {:get, "4"}

11:37:16.435 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 283, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3139}

11:37:16.436 [info] lb receive get from :client_a (3140)

11:37:16.436 [info] New objects are [%KvStore.CacheEntry{object: 283, context: %KvStore.Context{vector_clock: %{a: 10467}}}]

11:37:16.436 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3141, observer: :observer}

11:37:16.437 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 3140}

11:37:16.437 [warning] :a Timeout for request: 3102

11:37:16.437 [warning] :a Timeout for request: 3102, but request not found.

11:37:16.438 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 648, context: %KvStore.Context{vector_clock: %{a: 10408}}}]

11:37:16.438 [info] Receive response of 3139 from a with context: %KvStore.Context{vector_clock: %{a: 10467}}

11:37:16.438 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3139, key: "3", object: 283, sender: :a, type: :put_log}

11:37:16.438 [info] Send request {:get, "5"}

11:37:17.300 [info] lb receive get from :client_a (3478)

11:37:17.300 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3479, observer: :observer}

11:37:17.301 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3477, key: "3", object: 17, sender: :a, type: :put_log}

11:37:17.301 [info] Receive response of 3477 from a with context: %KvStore.Context{vector_clock: %{a: 11596}}

11:37:17.301 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 3478}

11:37:17.301 [info] Send request {:get, "2"}

11:37:17.302 [info] lb receive get from :client_b (3479)

11:37:17.302 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 217, context: %KvStore.Context{vector_clock: %{a: 11592}}}]

11:37:17.302 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3480, observer: :observer}

11:37:17.303 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 217, context: %KvStore.Context{vector_clock: %{a: 11592}}}], type: :get_response, req_id: 3478}}

11:37:17.303 [info] Latest entries: [%KvStore.CacheEntry{object: 217, context: %KvStore.Context{vector_clock: %{a: 11592}}}]

11:37:17.303 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 3479}

11:37:17.304 [info] Receive response of 3478 from a with [%KvStore.CacheEntry{object: 217, context: %KvStore.Context{vector_clock: %{a: 11592}}}]

11:37:17.304 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3478, key: "2", object: [%KvStore.CacheEntry{object: 217, context: %KvStore.Context{vector_clock: %{a: 11592}}}], sender: :a, type: :get_log}

11:37:17.304 [info] generate requests

11:37:17.304 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 217, context: %KvStore.Context{vector_clock: %{a: 11592}}}]

11:37:17.304 [info] Send request {:get, "2"}

11:37:17.305 [info] lb receive get from :client_a (3480)

11:37:17.305 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 217, context: %KvStore.Context{vector_clock: %{a: 11592}}}], type: :get_response, req_id: 3479}}

11:37:17.305 [info] Latest entries: [%KvStore.CacheEntry{object: 217, context: %KvStore.Context{vector_clock: %{a: 11592}}}]

11:37:17.305 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3481, observer: :observer}

11:37:17.306 [info] Receive response of 3479 from a with [%KvStore.CacheEntry{object: 217, context: %KvStore.Context{vector_clock: %{a: 11592}}}]

11:37:17.306 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 3480}

11:37:17.306 [info] generate requests

11:37:17.306 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3479, key: "2", object: [%KvStore.CacheEntry{object: 217, context: %KvStore.Context{vector_clock: %{a: 11592}}}], sender: :a, type: :get_log}

11:37:17.306 [info] Send request {:put, "4", 486, []}

11:37:17.306 [warning] :a Timeout for request: 3441

11:37:17.306 [warning] :a Timeout for request: 3441, but request not found.

11:37:17.307 [info] lb receive put from :client_b

11:37:17.307 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 217, context: %KvStore.Context{vector_clock: %{a: 11592}}}]

11:37:17.307 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3482, observer: :observer}

11:37:17.308 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 486, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3481}

11:37:17.308 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 217, context: %KvStore.Context{vector_clock: %{a: 11592}}}], type: :get_response, req_id: 3480}}

11:37:17.308 [info] Latest entries: [%KvStore.CacheEntry{object: 217, context: %KvStore.Context{vector_clock: %{a: 11592}}}]

11:37:17.309 [info] Receive response of 3480 from a with [%KvStore.CacheEntry{object: 217, context: %KvStore.Context{vector_clock: %{a: 11592}}}]

11:37:17.309 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3480, key: "2", object: [%KvStore.CacheEntry{object: 217, context: %KvStore.Context{vector_clock: %{a: 11592}}}], sender: :a, type: :get_log}

11:37:17.309 [info] New objects are [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.309 [info] Send request {:put, "2", 718, []}

11:37:17.310 [info] lb receive put from :client_a

11:37:17.310 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3483, observer: :observer}

11:37:17.311 [info] Receive response of 3481 from a with context: %KvStore.Context{vector_clock: %{a: 11608}}

11:37:17.311 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3481, key: "4", object: 486, sender: :a, type: :put_log}

11:37:17.311 [info] Send request {:get, "2"}

11:37:17.311 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 718, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3482}

11:37:17.312 [info] lb receive get from :client_b (3483)

11:37:17.312 [info] New objects are [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}]

11:37:17.313 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3484, observer: :observer}

11:37:17.313 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 3483}

11:37:17.313 [warning] :a Timeout for request: 3444

11:37:17.313 [warning] :a Timeout for request: 3444, but request not found.

11:37:17.314 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3482, key: "2", object: 718, sender: :a, type: :put_log}

11:37:17.314 [info] Receive response of 3482 from a with context: %KvStore.Context{vector_clock: %{a: 11612}}

11:37:17.314 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}]

11:37:17.314 [info] Send request {:get, "2"}

11:37:17.315 [info] lb receive get from :client_a (3484)

11:37:17.315 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}], type: :get_response, req_id: 3483}}

11:37:17.315 [info] Latest entries: [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}]

11:37:17.315 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3485, observer: :observer}

11:37:17.316 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 3484}

11:37:17.316 [info] Receive response of 3483 from a with [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}]

11:37:17.316 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3483, key: "2", object: [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}], sender: :a, type: :get_log}

11:37:17.316 [info] Send request {:get, "4"}

11:37:17.317 [info] lb receive get from :client_b (3485)

11:37:17.317 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}]

11:37:17.317 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3486, observer: :observer}

11:37:17.318 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}], type: :get_response, req_id: 3484}}

11:37:17.318 [info] Latest entries: [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}]

11:37:17.318 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 3485}

11:37:17.319 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3484, key: "2", object: [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}], sender: :a, type: :get_log}

11:37:17.319 [info] Receive response of 3484 from a with [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}]

11:37:17.319 [info] generate requests

11:37:17.319 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.319 [info] Send request {:get, "4"}

11:37:17.320 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}], type: :get_response, req_id: 3485}}

11:37:17.320 [info] lb receive get from :client_a (3486)

11:37:17.320 [info] Latest entries: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.320 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3487, observer: :observer}

11:37:17.321 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3485, key: "4", object: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}], sender: :a, type: :get_log}

11:37:17.321 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 3486}

11:37:17.321 [info] Receive response of 3485 from a with [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.321 [info] generate requests

11:37:17.321 [warning] :a Timeout for request: 3447

11:37:17.321 [warning] :a Timeout for request: 3447, but request not found.

11:37:17.321 [info] Send request {:get, "1"}

11:37:17.322 [info] lb receive get from :client_b (3487)

11:37:17.322 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.322 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3488, observer: :observer}

11:37:17.323 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 3487}

11:37:17.323 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}], type: :get_response, req_id: 3486}}

11:37:17.323 [info] Latest entries: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.324 [info] Receive response of 3486 from a with [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.324 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3486, key: "4", object: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}], sender: :a, type: :get_log}

11:37:17.324 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 551, context: %KvStore.Context{vector_clock: %{a: 11569}}}]

11:37:17.324 [info] Send request {:get, "3"}

11:37:17.325 [info] lb receive get from :client_a (3488)

11:37:17.325 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 551, context: %KvStore.Context{vector_clock: %{a: 11569}}}], type: :get_response, req_id: 3487}}

11:37:17.325 [info] Latest entries: [%KvStore.CacheEntry{object: 551, context: %KvStore.Context{vector_clock: %{a: 11569}}}]

11:37:17.325 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3489, observer: :observer}

11:37:17.326 [info] Receive response of 3487 from a with [%KvStore.CacheEntry{object: 551, context: %KvStore.Context{vector_clock: %{a: 11569}}}]

11:37:17.326 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 3488}

11:37:17.326 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3487, key: "1", object: [%KvStore.CacheEntry{object: 551, context: %KvStore.Context{vector_clock: %{a: 11569}}}], sender: :a, type: :get_log}

11:37:17.326 [info] Send request {:put, "1", 510, []}

11:37:17.327 [info] lb receive put from :client_b

11:37:17.327 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 17, context: %KvStore.Context{vector_clock: %{a: 11596}}}]

11:37:17.327 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3490, observer: :observer}

11:37:17.328 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 510, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3489}

11:37:17.328 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 17, context: %KvStore.Context{vector_clock: %{a: 11596}}}], type: :get_response, req_id: 3488}}

11:37:17.328 [info] Latest entries: [%KvStore.CacheEntry{object: 17, context: %KvStore.Context{vector_clock: %{a: 11596}}}]

11:37:17.328 [warning] :a Timeout for request: 3450

11:37:17.328 [warning] :a Timeout for request: 3450, but request not found.

11:37:17.329 [info] New objects are [%KvStore.CacheEntry{object: 510, context: %KvStore.Context{vector_clock: %{a: 11634}}}]

11:37:17.329 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3488, key: "3", object: [%KvStore.CacheEntry{object: 17, context: %KvStore.Context{vector_clock: %{a: 11596}}}], sender: :a, type: :get_log}

11:37:17.329 [info] Receive response of 3488 from a with [%KvStore.CacheEntry{object: 17, context: %KvStore.Context{vector_clock: %{a: 11596}}}]

11:37:17.329 [info] Send request {:put, "5", 751, []}

11:37:17.330 [info] lb receive put from :client_a

11:37:17.330 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3491, observer: :observer}

11:37:17.331 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3489, key: "1", object: 510, sender: :a, type: :put_log}

11:37:17.331 [info] Receive response of 3489 from a with context: %KvStore.Context{vector_clock: %{a: 11634}}

11:37:17.331 [info] Send request {:get, "2"}

11:37:17.331 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 751, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3490}

11:37:17.332 [info] lb receive get from :client_b (3491)

11:37:17.332 [info] New objects are [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}]

11:37:17.332 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3492, observer: :observer}

11:37:17.333 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 3491}

11:37:17.334 [info] Receive response of 3490 from a with context: %KvStore.Context{vector_clock: %{a: 11639}}

11:37:17.334 [info] generate requests

11:37:17.334 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}]

11:37:17.334 [info] Send request {:put, "3", 840, []}

11:37:17.334 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3490, key: "5", object: 751, sender: :a, type: :put_log}

11:37:17.335 [info] lb receive put from :client_a

11:37:17.335 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}], type: :get_response, req_id: 3491}}

11:37:17.335 [info] Latest entries: [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}]

11:37:17.335 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3493, observer: :observer}

11:37:17.336 [info] Receive response of 3491 from a with [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}]

11:37:17.336 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3491, key: "2", object: [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}], sender: :a, type: :get_log}

11:37:17.336 [info] generate requests

11:37:17.336 [info] Send request {:get, "2"}

11:37:17.336 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 840, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3492}

11:37:17.336 [warning] :a Timeout for request: 3453

11:37:17.336 [warning] :a Timeout for request: 3453, but request not found.

11:37:17.337 [info] lb receive get from :client_b (3493)

11:37:17.337 [info] New objects are [%KvStore.CacheEntry{object: 840, context: %KvStore.Context{vector_clock: %{a: 11645}}}]

11:37:17.337 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3494, observer: :observer}

11:37:17.338 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 3493}

11:37:17.338 [warning] :a Timeout for request: 3454

11:37:17.338 [warning] :a Timeout for request: 3454, but request not found.

11:37:17.339 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3492, key: "3", object: 840, sender: :a, type: :put_log}

11:37:17.339 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}]

11:37:17.339 [info] Receive response of 3492 from a with context: %KvStore.Context{vector_clock: %{a: 11645}}

11:37:17.339 [info] Send request {:get, "2"}

11:37:17.340 [info] lb receive get from :client_a (3494)

11:37:17.340 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}], type: :get_response, req_id: 3493}}

11:37:17.340 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3495, observer: :observer}

11:37:17.340 [info] Latest entries: [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}]

11:37:17.341 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 3494}

11:37:17.341 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3493, key: "2", object: [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}], sender: :a, type: :get_log}

11:37:17.341 [info] Receive response of 3493 from a with [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}]

11:37:17.341 [info] Send request {:get, "3"}

11:37:17.342 [info] lb receive get from :client_b (3495)

11:37:17.342 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}]

11:37:17.342 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3496, observer: :observer}

11:37:17.343 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}], type: :get_response, req_id: 3494}}

11:37:17.343 [info] Latest entries: [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}]

11:37:17.343 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 3495}

11:37:17.344 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3494, key: "2", object: [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}], sender: :a, type: :get_log}

11:37:17.344 [info] Receive response of 3494 from a with [%KvStore.CacheEntry{object: 718, context: %KvStore.Context{vector_clock: %{a: 11612}}}]

11:37:17.344 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 840, context: %KvStore.Context{vector_clock: %{a: 11645}}}]

11:37:17.344 [info] Send request {:get, "5"}

11:37:17.345 [info] lb receive get from :client_a (3496)

11:37:17.345 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 840, context: %KvStore.Context{vector_clock: %{a: 11645}}}], type: :get_response, req_id: 3495}}

11:37:17.345 [info] Latest entries: [%KvStore.CacheEntry{object: 840, context: %KvStore.Context{vector_clock: %{a: 11645}}}]

11:37:17.345 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3497, observer: :observer}

11:37:17.346 [info] Receive response of 3495 from a with [%KvStore.CacheEntry{object: 840, context: %KvStore.Context{vector_clock: %{a: 11645}}}]

11:37:17.346 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3495, key: "3", object: [%KvStore.CacheEntry{object: 840, context: %KvStore.Context{vector_clock: %{a: 11645}}}], sender: :a, type: :get_log}

11:37:17.346 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 3496}

11:37:17.346 [info] Send request {:put, "3", 662, []}

11:37:17.347 [info] lb receive put from :client_b

11:37:17.347 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}]

11:37:17.347 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3498, observer: :observer}

11:37:17.348 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 662, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3497}

11:37:17.348 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}], type: :get_response, req_id: 3496}}

11:37:17.348 [info] Latest entries: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}]

11:37:17.349 [info] Receive response of 3496 from a with [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}]

11:37:17.349 [info] New objects are [%KvStore.CacheEntry{object: 662, context: %KvStore.Context{vector_clock: %{a: 11661}}}]

11:37:17.349 [info] generate requests

11:37:17.349 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3496, key: "5", object: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}], sender: :a, type: :get_log}

11:37:17.349 [info] Send request {:get, "4"}

11:37:17.351 [info] lb receive get from :client_a (3498)

11:37:17.351 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3499, observer: :observer}

11:37:17.352 [info] Receive response of 3497 from a with context: %KvStore.Context{vector_clock: %{a: 11661}}

11:37:17.352 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3497, key: "3", object: 662, sender: :a, type: :put_log}

11:37:17.352 [info] generate requests

11:37:17.352 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 3498}

11:37:17.352 [info] Send request {:put, "1", 605, []}

11:37:17.352 [warning] :a Timeout for request: 3459

11:37:17.352 [warning] :a Timeout for request: 3459, but request not found.

11:37:17.353 [info] lb receive put from :client_b

11:37:17.353 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.353 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3500, observer: :observer}

11:37:17.354 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 605, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3499}

11:37:17.354 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}], type: :get_response, req_id: 3498}}

11:37:17.354 [info] Latest entries: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.355 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3498, key: "4", object: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}], sender: :a, type: :get_log}

11:37:17.355 [info] Receive response of 3498 from a with [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.355 [info] New objects are [%KvStore.CacheEntry{object: 605, context: %KvStore.Context{vector_clock: %{a: 11668}}}]

11:37:17.355 [info] Send request {:get, "3"}

11:37:17.356 [info] lb receive get from :client_a (3500)

11:37:17.356 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3501, observer: :observer}

11:37:17.357 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3499, key: "1", object: 605, sender: :a, type: :put_log}

11:37:17.357 [info] Receive response of 3499 from a with context: %KvStore.Context{vector_clock: %{a: 11668}}

11:37:17.357 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 3500}

11:37:17.357 [info] Send request {:get, "4"}

11:37:17.358 [info] lb receive get from :client_b (3501)

11:37:17.358 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 662, context: %KvStore.Context{vector_clock: %{a: 11661}}}]

11:37:17.358 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3502, observer: :observer}

11:37:17.359 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 662, context: %KvStore.Context{vector_clock: %{a: 11661}}}], type: :get_response, req_id: 3500}}

11:37:17.359 [info] Latest entries: [%KvStore.CacheEntry{object: 662, context: %KvStore.Context{vector_clock: %{a: 11661}}}]

11:37:17.359 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 3501}

11:37:17.359 [warning] :a Timeout for request: 3462

11:37:17.359 [warning] :a Timeout for request: 3462, but request not found.

11:37:17.360 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3500, key: "3", object: [%KvStore.CacheEntry{object: 662, context: %KvStore.Context{vector_clock: %{a: 11661}}}], sender: :a, type: :get_log}

11:37:17.360 [info] Receive response of 3500 from a with [%KvStore.CacheEntry{object: 662, context: %KvStore.Context{vector_clock: %{a: 11661}}}]

11:37:17.360 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.360 [info] Send request {:put, "2", 641, []}

11:37:17.361 [info] lb receive put from :client_a

11:37:17.361 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}], type: :get_response, req_id: 3501}}

11:37:17.361 [info] Latest entries: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.361 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3503, observer: :observer}

11:37:17.362 [info] Receive response of 3501 from a with [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.362 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3501, key: "4", object: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}], sender: :a, type: :get_log}

11:37:17.362 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 641, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3502}

11:37:17.362 [info] Send request {:get, "3"}

11:37:17.363 [info] New objects are [%KvStore.CacheEntry{object: 641, context: %KvStore.Context{vector_clock: %{a: 11679}}}]

11:37:17.363 [info] lb receive get from :client_b (3503)

11:37:17.363 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3504, observer: :observer}

11:37:17.364 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 3503}

11:37:17.364 [warning] :a Timeout for request: 3464

11:37:17.364 [warning] :a Timeout for request: 3464, but request not found.

11:37:17.365 [info] Receive response of 3502 from a with context: %KvStore.Context{vector_clock: %{a: 11679}}

11:37:17.365 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3502, key: "2", object: 641, sender: :a, type: :put_log}

11:37:17.365 [info] generate requests

11:37:17.365 [info] Send request {:put, "3", 507, []}

11:37:17.365 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 662, context: %KvStore.Context{vector_clock: %{a: 11661}}}]

11:37:17.366 [info] lb receive put from :client_a

11:37:17.366 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 662, context: %KvStore.Context{vector_clock: %{a: 11661}}}], type: :get_response, req_id: 3503}}

11:37:17.366 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3505, observer: :observer}

11:37:17.366 [info] Latest entries: [%KvStore.CacheEntry{object: 662, context: %KvStore.Context{vector_clock: %{a: 11661}}}]

11:37:17.367 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3503, key: "3", object: [%KvStore.CacheEntry{object: 662, context: %KvStore.Context{vector_clock: %{a: 11661}}}], sender: :a, type: :get_log}

11:37:17.367 [info] Receive response of 3503 from a with [%KvStore.CacheEntry{object: 662, context: %KvStore.Context{vector_clock: %{a: 11661}}}]

11:37:17.367 [info] generate requests

11:37:17.367 [info] Send request {:get, "4"}

11:37:17.367 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 507, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3504}

11:37:17.368 [info] lb receive get from :client_b (3505)

11:37:17.368 [info] New objects are [%KvStore.CacheEntry{object: 507, context: %KvStore.Context{vector_clock: %{a: 11686}}}]

11:37:17.368 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3506, observer: :observer}

11:37:17.369 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 3505}

11:37:17.370 [info] Receive response of 3504 from a with context: %KvStore.Context{vector_clock: %{a: 11686}}

11:37:17.370 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.370 [info] Send request {:get, "4"}

11:37:17.370 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3504, key: "3", object: 507, sender: :a, type: :put_log}

11:37:17.371 [info] lb receive get from :client_a (3506)

11:37:17.371 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}], type: :get_response, req_id: 3505}}

11:37:17.371 [info] Latest entries: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.371 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3507, observer: :observer}

11:37:17.372 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3505, key: "4", object: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}], sender: :a, type: :get_log}

11:37:17.372 [info] Receive response of 3505 from a with [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.372 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 3506}

11:37:17.372 [info] Send request {:put, "1", 305, []}

11:37:17.372 [warning] :a Timeout for request: 3467

11:37:17.372 [warning] :a Timeout for request: 3467, but request not found.

11:37:17.373 [info] lb receive put from :client_b

11:37:17.373 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.373 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3508, observer: :observer}

11:37:17.374 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 305, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3507}

11:37:17.374 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}], type: :get_response, req_id: 3506}}

11:37:17.374 [info] Latest entries: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.375 [info] New objects are [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 11695}}}]

11:37:17.375 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3506, key: "4", object: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}], sender: :a, type: :get_log}

11:37:17.375 [info] Receive response of 3506 from a with [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.375 [info] Send request {:get, "1"}

11:37:17.376 [info] lb receive get from :client_a (3508)

11:37:17.376 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3509, observer: :observer}

11:37:17.377 [info] Receive response of 3507 from a with context: %KvStore.Context{vector_clock: %{a: 11695}}

11:37:17.377 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 3508}

11:37:17.377 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3507, key: "1", object: 305, sender: :a, type: :put_log}

11:37:17.377 [info] Send request {:get, "1"}

11:37:17.377 [warning] :a Timeout for request: 3469

11:37:17.377 [warning] :a Timeout for request: 3469, but request not found.

11:37:17.379 [info] lb receive get from :client_b (3509)

11:37:17.379 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 11695}}}]

11:37:17.379 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3510, observer: :observer}

11:37:17.379 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 11695}}}], type: :get_response, req_id: 3508}}

11:37:17.379 [info] Latest entries: [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 11695}}}]

11:37:17.379 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 3509}

11:37:17.379 [warning] :a Timeout for request: 3470

11:37:17.379 [warning] :a Timeout for request: 3470, but request not found.

11:37:17.380 [info] Receive response of 3508 from a with [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 11695}}}]

11:37:17.380 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3508, key: "1", object: [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 11695}}}], sender: :a, type: :get_log}

11:37:17.380 [info] generate requests

11:37:17.380 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 11695}}}]

11:37:17.380 [info] Send request {:get, "4"}

11:37:17.381 [info] lb receive get from :client_a (3510)

11:37:17.381 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 11695}}}], type: :get_response, req_id: 3509}}

11:37:17.381 [info] Latest entries: [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 11695}}}]

11:37:17.381 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3511, observer: :observer}

11:37:17.382 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 3510}

11:37:17.382 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3509, key: "1", object: [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 11695}}}], sender: :a, type: :get_log}

11:37:17.382 [info] Receive response of 3509 from a with [%KvStore.CacheEntry{object: 305, context: %KvStore.Context{vector_clock: %{a: 11695}}}]

11:37:17.382 [info] generate requests

11:37:17.382 [info] Send request {:get, "3"}

11:37:17.383 [info] lb receive get from :client_b (3511)

11:37:17.383 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.383 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3512, observer: :observer}

11:37:17.384 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}], type: :get_response, req_id: 3510}}

11:37:17.384 [info] Latest entries: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.385 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 3511}

11:37:17.385 [info] Receive response of 3510 from a with [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.385 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3510, key: "4", object: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}], sender: :a, type: :get_log}

11:37:17.385 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 507, context: %KvStore.Context{vector_clock: %{a: 11686}}}]

11:37:17.385 [info] Send request {:get, "2"}

11:37:17.386 [info] lb receive get from :client_a (3512)

11:37:17.386 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 507, context: %KvStore.Context{vector_clock: %{a: 11686}}}], type: :get_response, req_id: 3511}}

11:37:17.386 [info] Latest entries: [%KvStore.CacheEntry{object: 507, context: %KvStore.Context{vector_clock: %{a: 11686}}}]

11:37:17.386 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3513, observer: :observer}

11:37:17.387 [info] Receive response of 3511 from a with [%KvStore.CacheEntry{object: 507, context: %KvStore.Context{vector_clock: %{a: 11686}}}]

11:37:17.387 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3511, key: "3", object: [%KvStore.CacheEntry{object: 507, context: %KvStore.Context{vector_clock: %{a: 11686}}}], sender: :a, type: :get_log}

11:37:17.387 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 3512}

11:37:17.387 [info] Send request {:get, "4"}

11:37:17.388 [info] lb receive get from :client_b (3513)

11:37:17.388 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 641, context: %KvStore.Context{vector_clock: %{a: 11679}}}]

11:37:17.388 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3514, observer: :observer}

11:37:17.389 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 3513}

11:37:17.389 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 641, context: %KvStore.Context{vector_clock: %{a: 11679}}}], type: :get_response, req_id: 3512}}

11:37:17.389 [info] Latest entries: [%KvStore.CacheEntry{object: 641, context: %KvStore.Context{vector_clock: %{a: 11679}}}]

11:37:17.390 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3512, key: "2", object: [%KvStore.CacheEntry{object: 641, context: %KvStore.Context{vector_clock: %{a: 11679}}}], sender: :a, type: :get_log}

11:37:17.390 [info] Receive response of 3512 from a with [%KvStore.CacheEntry{object: 641, context: %KvStore.Context{vector_clock: %{a: 11679}}}]

11:37:17.390 [info] Send request {:put, "2", 251, []}

11:37:17.390 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.391 [info] lb receive put from :client_a

11:37:17.391 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}], type: :get_response, req_id: 3513}}

11:37:17.391 [info] Latest entries: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.391 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3515, observer: :observer}

11:37:17.392 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3513, key: "4", object: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}], sender: :a, type: :get_log}

11:37:17.392 [info] Receive response of 3513 from a with [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}]

11:37:17.392 [info] Send request {:put, "3", 41, []}

11:37:17.392 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 251, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3514}

11:37:17.393 [info] New objects are [%KvStore.CacheEntry{object: 251, context: %KvStore.Context{vector_clock: %{a: 11719}}}]

11:37:17.393 [info] lb receive put from :client_b

11:37:17.393 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3516, observer: :observer}

11:37:17.394 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 41, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3515}

11:37:17.395 [info] New objects are [%KvStore.CacheEntry{object: 41, context: %KvStore.Context{vector_clock: %{a: 11721}}}]

11:37:17.395 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3514, key: "2", object: 251, sender: :a, type: :put_log}

11:37:17.395 [info] Receive response of 3514 from a with context: %KvStore.Context{vector_clock: %{a: 11719}}

11:37:17.395 [info] generate requests

11:37:17.395 [info] Send request {:put, "4", 853, []}

11:37:17.396 [info] lb receive put from :client_a

11:37:17.396 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3517, observer: :observer}

11:37:17.397 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3515, key: "3", object: 41, sender: :a, type: :put_log}

11:37:17.397 [info] Receive response of 3515 from a with context: %KvStore.Context{vector_clock: %{a: 11721}}

11:37:17.397 [info] generate requests

11:37:17.397 [info] Send request {:put, "4", 60, []}

11:37:17.397 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 853, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3516}

11:37:17.397 [warning] :a Timeout for request: 3477

11:37:17.397 [warning] :a Timeout for request: 3477, but request not found.

11:37:17.398 [info] New objects are [%KvStore.CacheEntry{object: 853, context: %KvStore.Context{vector_clock: %{a: 11725}}}]

11:37:17.398 [info] lb receive put from :client_b

11:37:17.398 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3518, observer: :observer}

11:37:17.399 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 60, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3517}

11:37:17.399 [warning] :a Timeout for request: 3478

11:37:17.399 [warning] :a Timeout for request: 3478, but request not found.

11:37:17.400 [info] Receive response of 3516 from a with context: %KvStore.Context{vector_clock: %{a: 11725}}

11:37:17.400 [info] New objects are [%KvStore.CacheEntry{object: 60, context: %KvStore.Context{vector_clock: %{a: 11729}}}]

11:37:17.400 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3516, key: "4", object: 853, sender: :a, type: :put_log}

11:37:17.400 [info] Send request {:get, "5"}

11:37:17.401 [info] lb receive get from :client_a (3518)

11:37:17.401 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3519, observer: :observer}

11:37:17.402 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3517, key: "4", object: 60, sender: :a, type: :put_log}

11:37:17.402 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 3518}

11:37:17.402 [info] Receive response of 3517 from a with context: %KvStore.Context{vector_clock: %{a: 11729}}

11:37:17.402 [info] Send request {:get, "5"}

11:37:17.403 [info] lb receive get from :client_b (3519)

11:37:17.403 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}]

11:37:17.403 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3520, observer: :observer}

11:37:17.404 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 3519}

11:37:17.404 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}], type: :get_response, req_id: 3518}}

11:37:17.404 [info] Latest entries: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}]

11:37:17.405 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3518, key: "5", object: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}], sender: :a, type: :get_log}

11:37:17.405 [info] Receive response of 3518 from a with [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}]

11:37:17.405 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}]

11:37:17.405 [info] Send request {:get, "5"}

11:37:17.406 [info] lb receive get from :client_a (3520)

11:37:17.406 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}], type: :get_response, req_id: 3519}}

11:37:17.406 [info] Latest entries: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}]

11:37:17.406 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3521, observer: :observer}

11:37:17.407 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 3520}

11:37:17.407 [info] Receive response of 3519 from a with [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}]

11:37:17.407 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3519, key: "5", object: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}], sender: :a, type: :get_log}

11:37:17.407 [info] Send request {:get, "2"}

11:37:17.408 [info] lb receive get from :client_b (3521)

11:37:17.408 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}]

11:37:17.408 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3522, observer: :observer}

11:37:17.409 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 3521}

11:37:17.409 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}], type: :get_response, req_id: 3520}}

11:37:17.409 [info] Latest entries: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}]

11:37:17.409 [warning] :a Timeout for request: 3482

11:37:17.409 [warning] :a Timeout for request: 3482, but request not found.

11:37:17.410 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3520, key: "5", object: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}], sender: :a, type: :get_log}

11:37:17.410 [info] Receive response of 3520 from a with [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}]

11:37:17.410 [info] generate requests

11:37:17.410 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 251, context: %KvStore.Context{vector_clock: %{a: 11719}}}]

11:37:17.410 [info] Send request {:put, "4", 887, []}

11:37:17.411 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 251, context: %KvStore.Context{vector_clock: %{a: 11719}}}], type: :get_response, req_id: 3521}}

11:37:17.411 [info] lb receive put from :client_a

11:37:17.411 [info] Latest entries: [%KvStore.CacheEntry{object: 251, context: %KvStore.Context{vector_clock: %{a: 11719}}}]

11:37:17.411 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3523, observer: :observer}

11:37:17.412 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3521, key: "2", object: [%KvStore.CacheEntry{object: 251, context: %KvStore.Context{vector_clock: %{a: 11719}}}], sender: :a, type: :get_log}

11:37:17.412 [info] Receive response of 3521 from a with [%KvStore.CacheEntry{object: 251, context: %KvStore.Context{vector_clock: %{a: 11719}}}]

11:37:17.412 [info] generate requests

11:37:17.412 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 887, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3522}

11:37:17.412 [info] Send request {:put, "1", 873, []}

11:37:17.412 [warning] :a Timeout for request: 3483

11:37:17.412 [warning] :a Timeout for request: 3483, but request not found.

11:37:17.413 [info] New objects are [%KvStore.CacheEntry{object: 887, context: %KvStore.Context{vector_clock: %{a: 11746}}}]

11:37:17.413 [info] lb receive put from :client_b

11:37:17.413 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3524, observer: :observer}

11:37:17.414 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 873, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3523}

11:37:17.415 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3522, key: "4", object: 887, sender: :a, type: :put_log}

11:37:17.415 [info] Receive response of 3522 from a with context: %KvStore.Context{vector_clock: %{a: 11746}}

11:37:17.415 [info] New objects are [%KvStore.CacheEntry{object: 873, context: %KvStore.Context{vector_clock: %{a: 11750}}}]

11:37:17.415 [info] Send request {:get, "2"}

11:37:17.416 [info] lb receive get from :client_a (3524)

11:37:17.416 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3525, observer: :observer}

11:37:17.417 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3523, key: "1", object: 873, sender: :a, type: :put_log}

11:37:17.417 [info] Receive response of 3523 from a with context: %KvStore.Context{vector_clock: %{a: 11750}}

11:37:17.417 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 3524}

11:37:17.417 [info] Send request {:get, "5"}

11:37:17.418 [info] lb receive get from :client_b (3525)

11:37:17.418 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 251, context: %KvStore.Context{vector_clock: %{a: 11719}}}]

11:37:17.418 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3526, observer: :observer}

11:37:17.419 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 3525}

11:37:17.419 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 251, context: %KvStore.Context{vector_clock: %{a: 11719}}}], type: :get_response, req_id: 3524}}

11:37:17.419 [info] Latest entries: [%KvStore.CacheEntry{object: 251, context: %KvStore.Context{vector_clock: %{a: 11719}}}]

11:37:17.420 [info] Receive response of 3524 from a with [%KvStore.CacheEntry{object: 251, context: %KvStore.Context{vector_clock: %{a: 11719}}}]

11:37:17.420 [info] Send request {:get, "3"}

11:37:17.420 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3524, key: "2", object: [%KvStore.CacheEntry{object: 251, context: %KvStore.Context{vector_clock: %{a: 11719}}}], sender: :a, type: :get_log}

11:37:17.420 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}]

11:37:17.421 [info] lb receive get from :client_a (3526)

11:37:17.421 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}], type: :get_response, req_id: 3525}}

11:37:17.421 [info] Latest entries: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}]

11:37:17.421 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3527, observer: :observer}

11:37:17.422 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3525, key: "5", object: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}], sender: :a, type: :get_log}

11:37:17.422 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 3526}

11:37:17.422 [info] Receive response of 3525 from a with [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}]

11:37:17.422 [info] Send request {:get, "3"}

11:37:17.423 [info] lb receive get from :client_b (3527)

11:37:17.423 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 41, context: %KvStore.Context{vector_clock: %{a: 11721}}}]

11:37:17.423 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3528, observer: :observer}

11:37:17.424 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 3527}

11:37:17.424 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 41, context: %KvStore.Context{vector_clock: %{a: 11721}}}], type: :get_response, req_id: 3526}}

11:37:17.424 [info] Latest entries: [%KvStore.CacheEntry{object: 41, context: %KvStore.Context{vector_clock: %{a: 11721}}}]

11:37:17.425 [info] Receive response of 3526 from a with [%KvStore.CacheEntry{object: 41, context: %KvStore.Context{vector_clock: %{a: 11721}}}]

11:37:17.425 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3526, key: "3", object: [%KvStore.CacheEntry{object: 41, context: %KvStore.Context{vector_clock: %{a: 11721}}}], sender: :a, type: :get_log}

11:37:17.425 [info] generate requests

11:37:17.425 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 41, context: %KvStore.Context{vector_clock: %{a: 11721}}}]

11:37:17.425 [info] Send request {:get, "2"}

11:37:17.426 [info] lb receive get from :client_a (3528)

11:37:17.426 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 41, context: %KvStore.Context{vector_clock: %{a: 11721}}}], type: :get_response, req_id: 3527}}

11:37:17.426 [info] Latest entries: [%KvStore.CacheEntry{object: 41, context: %KvStore.Context{vector_clock: %{a: 11721}}}]

11:37:17.426 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3529, observer: :observer}

11:37:17.427 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 3528}

11:37:17.427 [info] Receive response of 3527 from a with [%KvStore.CacheEntry{object: 41, context: %KvStore.Context{vector_clock: %{a: 11721}}}]

11:37:17.427 [info] generate requests

11:37:17.427 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3527, key: "3", object: [%KvStore.CacheEntry{object: 41, context: %KvStore.Context{vector_clock: %{a: 11721}}}], sender: :a, type: :get_log}

11:37:17.427 [info] Send request {:get, "3"}

11:37:17.428 [info] lb receive get from :client_b (3529)

11:37:17.428 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 251, context: %KvStore.Context{vector_clock: %{a: 11719}}}]

11:37:17.428 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3530, observer: :observer}

11:37:17.429 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 3529}

11:37:17.429 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 251, context: %KvStore.Context{vector_clock: %{a: 11719}}}], type: :get_response, req_id: 3528}}

11:37:17.429 [info] Latest entries: [%KvStore.CacheEntry{object: 251, context: %KvStore.Context{vector_clock: %{a: 11719}}}]

11:37:17.429 [warning] :a Timeout for request: 3490

11:37:17.429 [warning] :a Timeout for request: 3490, but request not found.

11:37:17.430 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3528, key: "2", object: [%KvStore.CacheEntry{object: 251, context: %KvStore.Context{vector_clock: %{a: 11719}}}], sender: :a, type: :get_log}

11:37:17.430 [info] Receive response of 3528 from a with [%KvStore.CacheEntry{object: 251, context: %KvStore.Context{vector_clock: %{a: 11719}}}]

11:37:17.430 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 41, context: %KvStore.Context{vector_clock: %{a: 11721}}}]

11:37:17.430 [info] Send request {:get, "4"}

11:37:17.431 [info] lb receive get from :client_a (3530)

11:37:17.431 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 41, context: %KvStore.Context{vector_clock: %{a: 11721}}}], type: :get_response, req_id: 3529}}

11:37:17.431 [info] Latest entries: [%KvStore.CacheEntry{object: 41, context: %KvStore.Context{vector_clock: %{a: 11721}}}]

11:37:17.431 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3531, observer: :observer}

11:37:17.432 [info] Receive response of 3529 from a with [%KvStore.CacheEntry{object: 41, context: %KvStore.Context{vector_clock: %{a: 11721}}}]

11:37:17.432 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 3530}

11:37:17.432 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3529, key: "3", object: [%KvStore.CacheEntry{object: 41, context: %KvStore.Context{vector_clock: %{a: 11721}}}], sender: :a, type: :get_log}

11:37:17.432 [info] Send request {:get, "4"}

11:37:17.432 [warning] :a Timeout for request: 3491

11:37:17.432 [warning] :a Timeout for request: 3491, but request not found.

11:37:17.433 [info] lb receive get from :client_b (3531)

11:37:17.433 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 887, context: %KvStore.Context{vector_clock: %{a: 11746}}}]

11:37:17.433 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3532, observer: :observer}

11:37:17.434 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 3531}

11:37:17.434 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 887, context: %KvStore.Context{vector_clock: %{a: 11746}}}], type: :get_response, req_id: 3530}}

11:37:18.301 [info] New objects are [%KvStore.CacheEntry{object: 145, context: %KvStore.Context{vector_clock: %{a: 12915}}}]

11:37:18.301 [info] lb receive put from :client_b

11:37:18.301 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3874, observer: :observer}

11:37:18.302 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 17, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3873}

11:37:18.303 [info] New objects are [%KvStore.CacheEntry{object: 17, context: %KvStore.Context{vector_clock: %{a: 12918}}}]

11:37:18.303 [info] Receive response of 3872 from a with context: %KvStore.Context{vector_clock: %{a: 12915}}

11:37:18.303 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3872, key: "1", object: 145, sender: :a, type: :put_log}

11:37:18.303 [info] Send request {:get, "2"}

11:37:18.304 [info] lb receive get from :client_a (3874)

11:37:18.304 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3875, observer: :observer}

11:37:18.304 [warning] :a Timeout for request: 3835

11:37:18.304 [warning] :a Timeout for request: 3835, but request not found.

11:37:18.305 [info] Receive response of 3873 from a with context: %KvStore.Context{vector_clock: %{a: 12918}}

11:37:18.305 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 3874}

11:37:18.305 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3873, key: "3", object: 17, sender: :a, type: :put_log}

11:37:18.305 [info] Send request {:get, "3"}

11:37:18.306 [info] lb receive get from :client_b (3875)

11:37:18.306 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.306 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3876, observer: :observer}

11:37:18.307 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 3875}

11:37:18.307 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}], type: :get_response, req_id: 3874}}

11:37:18.307 [info] Latest entries: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.308 [info] Receive response of 3874 from a with [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.308 [info] generate requests

11:37:18.308 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 17, context: %KvStore.Context{vector_clock: %{a: 12918}}}]

11:37:18.308 [info] Send request {:put, "3", 862, []}

11:37:18.308 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3874, key: "2", object: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}], sender: :a, type: :get_log}

11:37:18.309 [info] lb receive put from :client_a

11:37:18.309 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 17, context: %KvStore.Context{vector_clock: %{a: 12918}}}], type: :get_response, req_id: 3875}}

11:37:18.309 [info] Latest entries: [%KvStore.CacheEntry{object: 17, context: %KvStore.Context{vector_clock: %{a: 12918}}}]

11:37:18.309 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3877, observer: :observer}

11:37:18.310 [info] Receive response of 3875 from a with [%KvStore.CacheEntry{object: 17, context: %KvStore.Context{vector_clock: %{a: 12918}}}]

11:37:18.310 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 862, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3876}

11:37:18.310 [info] generate requests

11:37:18.310 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3875, key: "3", object: [%KvStore.CacheEntry{object: 17, context: %KvStore.Context{vector_clock: %{a: 12918}}}], sender: :a, type: :get_log}

11:37:18.310 [info] Send request {:get, "2"}

11:37:18.311 [info] lb receive get from :client_b (3877)

11:37:18.312 [info] New objects are [%KvStore.CacheEntry{object: 862, context: %KvStore.Context{vector_clock: %{a: 12928}}}]

11:37:18.312 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3878, observer: :observer}

11:37:18.312 [warning] :a Timeout for request: 3838

11:37:18.312 [warning] :a Timeout for request: 3838, but request not found.

11:37:18.312 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 3877}

11:37:18.313 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3876, key: "3", object: 862, sender: :a, type: :put_log}

11:37:18.313 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.313 [info] Receive response of 3876 from a with context: %KvStore.Context{vector_clock: %{a: 12928}}

11:37:18.313 [info] Send request {:get, "4"}

11:37:18.314 [info] lb receive get from :client_a (3878)

11:37:18.314 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}], type: :get_response, req_id: 3877}}

11:37:18.314 [info] Latest entries: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.314 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3879, observer: :observer}

11:37:18.315 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 3878}

11:37:18.315 [info] Receive response of 3877 from a with [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.315 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3877, key: "2", object: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}], sender: :a, type: :get_log}

11:37:18.315 [info] Send request {:get, "2"}

11:37:18.316 [info] lb receive get from :client_b (3879)

11:37:18.316 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 624, context: %KvStore.Context{vector_clock: %{a: 12822}}}]

11:37:18.316 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3880, observer: :observer}

11:37:18.317 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 3879}

11:37:18.317 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 624, context: %KvStore.Context{vector_clock: %{a: 12822}}}], type: :get_response, req_id: 3878}}

11:37:18.317 [info] Latest entries: [%KvStore.CacheEntry{object: 624, context: %KvStore.Context{vector_clock: %{a: 12822}}}]

11:37:18.318 [info] Receive response of 3878 from a with [%KvStore.CacheEntry{object: 624, context: %KvStore.Context{vector_clock: %{a: 12822}}}]

11:37:18.318 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3878, key: "4", object: [%KvStore.CacheEntry{object: 624, context: %KvStore.Context{vector_clock: %{a: 12822}}}], sender: :a, type: :get_log}

11:37:18.318 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.318 [info] Send request {:get, "5"}

11:37:18.319 [info] lb receive get from :client_a (3880)

11:37:18.319 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3881, observer: :observer}

11:37:18.319 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}], type: :get_response, req_id: 3879}}

11:37:18.319 [info] Latest entries: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.320 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 3880}

11:37:18.320 [info] Receive response of 3879 from a with [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.320 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3879, key: "2", object: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}], sender: :a, type: :get_log}

11:37:18.320 [info] Send request {:put, "4", 790, []}

11:37:18.321 [info] lb receive put from :client_b

11:37:18.321 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}]

11:37:18.321 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3882, observer: :observer}

11:37:18.322 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 790, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3881}

11:37:18.322 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}], type: :get_response, req_id: 3880}}

11:37:18.322 [info] Latest entries: [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}]

11:37:18.323 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3880, key: "5", object: [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}], sender: :a, type: :get_log}

11:37:18.323 [info] New objects are [%KvStore.CacheEntry{object: 790, context: %KvStore.Context{vector_clock: %{a: 12943}}}]

11:37:18.323 [info] Receive response of 3880 from a with [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}]

11:37:18.323 [info] generate requests

11:37:18.323 [info] Send request {:get, "2"}

11:37:18.324 [info] lb receive get from :client_a (3882)

11:37:18.324 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3883, observer: :observer}

11:37:18.325 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 3882}

11:37:18.325 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3881, key: "4", object: 790, sender: :a, type: :put_log}

11:37:18.325 [info] Receive response of 3881 from a with context: %KvStore.Context{vector_clock: %{a: 12943}}

11:37:18.325 [info] generate requests

11:37:18.325 [info] Send request {:put, "3", 445, []}

11:37:18.326 [info] lb receive put from :client_b

11:37:18.326 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.326 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3884, observer: :observer}

11:37:18.327 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 445, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3883}

11:37:18.327 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}], type: :get_response, req_id: 3882}}

11:37:18.327 [info] Latest entries: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.328 [info] Receive response of 3882 from a with [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.328 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3882, key: "2", object: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}], sender: :a, type: :get_log}

11:37:18.328 [info] New objects are [%KvStore.CacheEntry{object: 445, context: %KvStore.Context{vector_clock: %{a: 12949}}}]

11:37:18.328 [info] Send request {:put, "3", 22, []}

11:37:18.329 [info] lb receive put from :client_a

11:37:18.329 [warning] :a Timeout for request: 3845

11:37:18.329 [warning] :a Timeout for request: 3845, but request not found.

11:37:18.329 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3885, observer: :observer}

11:37:18.330 [info] Receive response of 3883 from a with context: %KvStore.Context{vector_clock: %{a: 12949}}

11:37:18.330 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3883, key: "3", object: 445, sender: :a, type: :put_log}

11:37:18.330 [info] Send request {:get, "2"}

11:37:18.330 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 22, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3884}

11:37:18.331 [info] lb receive get from :client_b (3885)

11:37:18.331 [info] New objects are [%KvStore.CacheEntry{object: 22, context: %KvStore.Context{vector_clock: %{a: 12954}}}]

11:37:18.331 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3886, observer: :observer}

11:37:18.331 [warning] :a Timeout for request: 3846

11:37:18.331 [warning] :a Timeout for request: 3846, but request not found.

11:37:18.332 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 3885}

11:37:18.333 [info] Receive response of 3884 from a with context: %KvStore.Context{vector_clock: %{a: 12954}}

11:37:18.333 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3884, key: "3", object: 22, sender: :a, type: :put_log}

11:37:18.333 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.333 [info] Send request {:get, "5"}

11:37:18.334 [info] lb receive get from :client_a (3886)

11:37:18.334 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}], type: :get_response, req_id: 3885}}

11:37:18.334 [info] Latest entries: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.334 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3887, observer: :observer}

11:37:18.334 [warning] :a Timeout for request: 3847

11:37:18.334 [warning] :a Timeout for request: 3847, but request not found.

11:37:18.335 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 3886}

11:37:18.335 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3885, key: "2", object: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}], sender: :a, type: :get_log}

11:37:18.335 [info] Receive response of 3885 from a with [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.335 [info] Send request {:get, "2"}

11:37:18.336 [info] lb receive get from :client_b (3887)

11:37:18.336 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}]

11:37:18.336 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3888, observer: :observer}

11:37:18.336 [warning] :a Timeout for request: 3848

11:37:18.336 [warning] :a Timeout for request: 3848, but request not found.

11:37:18.337 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 3887}

11:37:18.337 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}], type: :get_response, req_id: 3886}}

11:37:18.337 [info] Latest entries: [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}]

11:37:18.339 [info] Receive response of 3886 from a with [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}]

11:37:18.339 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3886, key: "5", object: [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}], sender: :a, type: :get_log}

11:37:18.339 [info] generate requests

11:37:18.339 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.339 [info] Send request {:put, "4", 365, []}

11:37:18.340 [info] lb receive put from :client_a

11:37:18.340 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}], type: :get_response, req_id: 3887}}

11:37:18.340 [info] Latest entries: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.340 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3889, observer: :observer}

11:37:18.341 [info] Receive response of 3887 from a with [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.341 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3887, key: "2", object: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}], sender: :a, type: :get_log}

11:37:18.341 [info] generate requests

11:37:18.341 [info] Send request {:get, "3"}

11:37:18.341 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 365, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3888}

11:37:18.342 [info] lb receive get from :client_b (3889)

11:37:18.342 [info] New objects are [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}]

11:37:18.342 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3890, observer: :observer}

11:37:18.343 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 3889}

11:37:18.344 [info] Receive response of 3888 from a with context: %KvStore.Context{vector_clock: %{a: 12969}}

11:37:18.344 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3888, key: "4", object: 365, sender: :a, type: :put_log}

11:37:18.344 [info] Send request {:get, "3"}

11:37:18.344 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 22, context: %KvStore.Context{vector_clock: %{a: 12954}}}]

11:37:18.345 [info] lb receive get from :client_a (3890)

11:37:18.345 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 22, context: %KvStore.Context{vector_clock: %{a: 12954}}}], type: :get_response, req_id: 3889}}

11:37:18.345 [info] Latest entries: [%KvStore.CacheEntry{object: 22, context: %KvStore.Context{vector_clock: %{a: 12954}}}]

11:37:18.345 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3891, observer: :observer}

11:37:18.346 [info] Receive response of 3889 from a with [%KvStore.CacheEntry{object: 22, context: %KvStore.Context{vector_clock: %{a: 12954}}}]

11:37:18.346 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3889, key: "3", object: [%KvStore.CacheEntry{object: 22, context: %KvStore.Context{vector_clock: %{a: 12954}}}], sender: :a, type: :get_log}

11:37:18.346 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 3890}

11:37:18.346 [info] Send request {:put, "1", 692, []}

11:37:18.347 [info] lb receive put from :client_b

11:37:18.347 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 22, context: %KvStore.Context{vector_clock: %{a: 12954}}}]

11:37:18.347 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3892, observer: :observer}

11:37:18.348 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 692, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3891}

11:37:18.348 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 22, context: %KvStore.Context{vector_clock: %{a: 12954}}}], type: :get_response, req_id: 3890}}

11:37:18.348 [info] Latest entries: [%KvStore.CacheEntry{object: 22, context: %KvStore.Context{vector_clock: %{a: 12954}}}]

11:37:18.349 [info] New objects are [%KvStore.CacheEntry{object: 692, context: %KvStore.Context{vector_clock: %{a: 12977}}}]

11:37:18.349 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3890, key: "3", object: [%KvStore.CacheEntry{object: 22, context: %KvStore.Context{vector_clock: %{a: 12954}}}], sender: :a, type: :get_log}

11:37:18.349 [info] Receive response of 3890 from a with [%KvStore.CacheEntry{object: 22, context: %KvStore.Context{vector_clock: %{a: 12954}}}]

11:37:18.349 [info] Send request {:get, "2"}

11:37:18.350 [info] lb receive get from :client_a (3892)

11:37:18.350 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3893, observer: :observer}

11:37:18.351 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 3892}

11:37:18.351 [info] Receive response of 3891 from a with context: %KvStore.Context{vector_clock: %{a: 12977}}

11:37:18.351 [info] Send request {:get, "2"}

11:37:18.351 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3891, key: "1", object: 692, sender: :a, type: :put_log}

11:37:18.352 [warning] :a Timeout for request: 3854

11:37:18.352 [warning] :a Timeout for request: 3854, but request not found.

11:37:18.352 [info] lb receive get from :client_b (3893)

11:37:18.352 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.352 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3894, observer: :observer}

11:37:18.353 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}], type: :get_response, req_id: 3892}}

11:37:18.353 [info] Latest entries: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.353 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 3893}

11:37:18.354 [info] Receive response of 3892 from a with [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.354 [info] generate requests

11:37:18.354 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.354 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3892, key: "2", object: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}], sender: :a, type: :get_log}

11:37:18.354 [info] Send request {:get, "3"}

11:37:18.354 [warning] :a Timeout for request: 3855

11:37:18.354 [warning] :a Timeout for request: 3855, but request not found.

11:37:18.355 [info] lb receive get from :client_a (3894)

11:37:18.355 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}], type: :get_response, req_id: 3893}}

11:37:18.355 [info] Latest entries: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.355 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3895, observer: :observer}

11:37:18.356 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 3894}

11:37:18.356 [info] Receive response of 3893 from a with [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}]

11:37:18.356 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3893, key: "2", object: [%KvStore.CacheEntry{object: 89, context: %KvStore.Context{vector_clock: %{a: 12870}}}], sender: :a, type: :get_log}

11:37:18.356 [info] generate requests

11:37:18.356 [info] Send request {:put, "1", 505, []}

11:37:18.357 [info] lb receive put from :client_b

11:37:18.357 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 22, context: %KvStore.Context{vector_clock: %{a: 12954}}}]

11:37:18.357 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3896, observer: :observer}

11:37:18.358 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 505, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3895}

11:37:18.358 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 22, context: %KvStore.Context{vector_clock: %{a: 12954}}}], type: :get_response, req_id: 3894}}

11:37:18.358 [info] Latest entries: [%KvStore.CacheEntry{object: 22, context: %KvStore.Context{vector_clock: %{a: 12954}}}]

11:37:18.359 [info] New objects are [%KvStore.CacheEntry{object: 505, context: %KvStore.Context{vector_clock: %{a: 12991}}}]

11:37:18.359 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3894, key: "3", object: [%KvStore.CacheEntry{object: 22, context: %KvStore.Context{vector_clock: %{a: 12954}}}], sender: :a, type: :get_log}

11:37:18.359 [info] Receive response of 3894 from a with [%KvStore.CacheEntry{object: 22, context: %KvStore.Context{vector_clock: %{a: 12954}}}]

11:37:18.359 [info] Send request {:put, "3", 156, []}

11:37:18.360 [info] lb receive put from :client_a

11:37:18.360 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3897, observer: :observer}

11:37:18.361 [info] Receive response of 3895 from a with context: %KvStore.Context{vector_clock: %{a: 12991}}

11:37:18.361 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3895, key: "1", object: 505, sender: :a, type: :put_log}

11:37:18.361 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 156, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3896}

11:37:18.361 [info] Send request {:get, "3"}

11:37:18.362 [info] lb receive get from :client_b (3897)

11:37:18.362 [info] New objects are [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}]

11:37:18.362 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3898, observer: :observer}

11:37:18.363 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 3897}

11:37:18.365 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3896, key: "3", object: 156, sender: :a, type: :put_log}

11:37:18.365 [info] Receive response of 3896 from a with context: %KvStore.Context{vector_clock: %{a: 12995}}

11:37:18.365 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}]

11:37:18.365 [info] Send request {:get, "4"}

11:37:18.365 [info] lb receive get from :client_a (3898)

11:37:18.365 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}], type: :get_response, req_id: 3897}}

11:37:18.366 [info] Latest entries: [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}]

11:37:18.366 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3899, observer: :observer}

11:37:18.366 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 3898}

11:37:18.366 [info] Receive response of 3897 from a with [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}]

11:37:18.366 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3897, key: "3", object: [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}], sender: :a, type: :get_log}

11:37:18.366 [info] Send request {:get, "1"}

11:37:18.366 [warning] :a Timeout for request: 3860

11:37:18.366 [warning] :a Timeout for request: 3860, but request not found.

11:37:18.367 [info] lb receive get from :client_b (3899)

11:37:18.367 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}]

11:37:18.367 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3900, observer: :observer}

11:37:18.368 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 3899}

11:37:18.368 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}], type: :get_response, req_id: 3898}}

11:37:18.368 [info] Latest entries: [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}]

11:37:18.369 [info] Receive response of 3898 from a with [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}]

11:37:18.369 [info] generate requests

11:37:18.369 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 505, context: %KvStore.Context{vector_clock: %{a: 12991}}}]

11:37:18.369 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3898, key: "4", object: [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}], sender: :a, type: :get_log}

11:37:18.369 [info] Send request {:get, "4"}

11:37:18.370 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 505, context: %KvStore.Context{vector_clock: %{a: 12991}}}], type: :get_response, req_id: 3899}}

11:37:18.370 [info] Latest entries: [%KvStore.CacheEntry{object: 505, context: %KvStore.Context{vector_clock: %{a: 12991}}}]

11:37:18.370 [info] lb receive get from :client_a (3900)

11:37:18.370 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3901, observer: :observer}

11:37:18.371 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3899, key: "1", object: [%KvStore.CacheEntry{object: 505, context: %KvStore.Context{vector_clock: %{a: 12991}}}], sender: :a, type: :get_log}

11:37:18.371 [info] Receive response of 3899 from a with [%KvStore.CacheEntry{object: 505, context: %KvStore.Context{vector_clock: %{a: 12991}}}]

11:37:18.371 [info] generate requests

11:37:18.371 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 3900}

11:37:18.371 [info] Send request {:get, "3"}

11:37:18.372 [info] lb receive get from :client_b (3901)

11:37:18.372 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}]

11:37:18.372 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3902, observer: :observer}

11:37:18.374 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 3901}

11:37:18.374 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}], type: :get_response, req_id: 3900}}

11:37:18.374 [info] Latest entries: [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}]

11:37:18.374 [warning] :a Timeout for request: 3863

11:37:18.374 [warning] :a Timeout for request: 3863, but request not found.

11:37:18.375 [info] Receive response of 3900 from a with [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}]

11:37:18.375 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}]

11:37:18.375 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3900, key: "4", object: [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}], sender: :a, type: :get_log}

11:37:18.376 [info] Send request {:put, "2", 381, []}

11:37:18.376 [info] lb receive put from :client_a

11:37:18.376 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}], type: :get_response, req_id: 3901}}

11:37:18.376 [info] Latest entries: [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}]

11:37:18.376 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3903, observer: :observer}

11:37:18.377 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3901, key: "3", object: [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}], sender: :a, type: :get_log}

11:37:18.377 [info] Receive response of 3901 from a with [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}]

11:37:18.377 [info] Send request {:put, "2", 291, []}

11:37:18.377 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 381, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3902}

11:37:18.378 [info] lb receive put from :client_b

11:37:18.378 [info] New objects are [%KvStore.CacheEntry{object: 381, context: %KvStore.Context{vector_clock: %{a: 13015}}}]

11:37:18.378 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3904, observer: :observer}

11:37:18.380 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 291, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3903}

11:37:18.381 [info] Receive response of 3902 from a with context: %KvStore.Context{vector_clock: %{a: 13015}}

11:37:18.381 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3902, key: "2", object: 381, sender: :a, type: :put_log}

11:37:18.381 [info] Send request {:get, "2"}

11:37:18.381 [info] New objects are [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 13017}}}]

11:37:18.381 [warning] :a Timeout for request: 3866

11:37:18.381 [warning] :a Timeout for request: 3866, but request not found.

11:37:18.382 [info] lb receive get from :client_a (3904)

11:37:18.382 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3905, observer: :observer}

11:37:18.383 [info] Receive response of 3903 from a with context: %KvStore.Context{vector_clock: %{a: 13017}}

11:37:18.383 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3903, key: "2", object: 291, sender: :a, type: :put_log}

11:37:18.383 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 3904}

11:37:18.383 [info] Send request {:get, "1"}

11:37:18.384 [info] lb receive get from :client_b (3905)

11:37:18.384 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 13017}}}]

11:37:18.384 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3906, observer: :observer}

11:37:18.385 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 13017}}}], type: :get_response, req_id: 3904}}

11:37:18.385 [info] Latest entries: [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 13017}}}]

11:37:18.385 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 3905}

11:37:18.386 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3904, key: "2", object: [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 13017}}}], sender: :a, type: :get_log}

11:37:18.386 [info] Receive response of 3904 from a with [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 13017}}}]

11:37:18.386 [info] generate requests

11:37:18.386 [info] Send request {:get, "2"}

11:37:18.386 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 505, context: %KvStore.Context{vector_clock: %{a: 12991}}}]

11:37:18.387 [info] lb receive get from :client_a (3906)

11:37:18.387 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 505, context: %KvStore.Context{vector_clock: %{a: 12991}}}], type: :get_response, req_id: 3905}}

11:37:18.387 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3907, observer: :observer}

11:37:18.387 [info] Latest entries: [%KvStore.CacheEntry{object: 505, context: %KvStore.Context{vector_clock: %{a: 12991}}}]

11:37:18.388 [info] Receive response of 3905 from a with [%KvStore.CacheEntry{object: 505, context: %KvStore.Context{vector_clock: %{a: 12991}}}]

11:37:18.388 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3905, key: "1", object: [%KvStore.CacheEntry{object: 505, context: %KvStore.Context{vector_clock: %{a: 12991}}}], sender: :a, type: :get_log}

11:37:18.388 [info] generate requests

11:37:18.388 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 3906}

11:37:18.388 [info] Send request {:get, "4"}

11:37:18.389 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 13017}}}]

11:37:18.389 [info] lb receive get from :client_b (3907)

11:37:18.389 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3908, observer: :observer}

11:37:18.390 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 13017}}}], type: :get_response, req_id: 3906}}

11:37:18.390 [info] Latest entries: [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 13017}}}]

11:37:18.390 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 3907}

11:37:18.390 [warning] :a Timeout for request: 3869

11:37:18.390 [warning] :a Timeout for request: 3869, but request not found.

11:37:18.391 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3906, key: "2", object: [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 13017}}}], sender: :a, type: :get_log}

11:37:18.391 [info] Receive response of 3906 from a with [%KvStore.CacheEntry{object: 291, context: %KvStore.Context{vector_clock: %{a: 13017}}}]

11:37:18.391 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}]

11:37:18.391 [info] Send request {:get, "5"}

11:37:18.392 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}], type: :get_response, req_id: 3907}}

11:37:18.392 [info] Latest entries: [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}]

11:37:18.392 [info] lb receive get from :client_a (3908)

11:37:18.392 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3909, observer: :observer}

11:37:18.393 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 3908}

11:37:18.393 [info] Receive response of 3907 from a with [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}]

11:37:18.393 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3907, key: "4", object: [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}], sender: :a, type: :get_log}

11:37:18.393 [info] Send request {:put, "2", 753, []}

11:37:18.394 [info] lb receive put from :client_b

11:37:18.394 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}]

11:37:18.394 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3910, observer: :observer}

11:37:18.395 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}], type: :get_response, req_id: 3908}}

11:37:18.395 [info] Latest entries: [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}]

11:37:18.395 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 753, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3909}

11:37:18.396 [info] Receive response of 3908 from a with [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}]

11:37:18.396 [info] New objects are [%KvStore.CacheEntry{object: 753, context: %KvStore.Context{vector_clock: %{a: 13038}}}]

11:37:18.396 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3908, key: "5", object: [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}], sender: :a, type: :get_log}

11:37:18.396 [info] Send request {:put, "1", 400, []}

11:37:18.397 [info] lb receive put from :client_a

11:37:18.397 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3911, observer: :observer}

11:37:18.398 [info] Receive response of 3909 from a with context: %KvStore.Context{vector_clock: %{a: 13038}}

11:37:18.398 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3909, key: "2", object: 753, sender: :a, type: :put_log}

11:37:18.398 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 400, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3910}

11:37:18.398 [info] Send request {:get, "2"}

11:37:18.399 [info] lb receive get from :client_b (3911)

11:37:18.399 [info] New objects are [%KvStore.CacheEntry{object: 400, context: %KvStore.Context{vector_clock: %{a: 13041}}}]

11:37:18.399 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3912, observer: :observer}

11:37:18.400 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 3911}

11:37:18.401 [info] Receive response of 3910 from a with context: %KvStore.Context{vector_clock: %{a: 13041}}

11:37:18.401 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3910, key: "1", object: 400, sender: :a, type: :put_log}

11:37:18.401 [info] generate requests

11:37:18.401 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 753, context: %KvStore.Context{vector_clock: %{a: 13038}}}]

11:37:18.401 [info] Send request {:get, "2"}

11:37:18.401 [warning] :a Timeout for request: 3873

11:37:18.401 [warning] :a Timeout for request: 3873, but request not found.

11:37:18.402 [info] lb receive get from :client_a (3912)

11:37:18.402 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 753, context: %KvStore.Context{vector_clock: %{a: 13038}}}], type: :get_response, req_id: 3911}}

11:37:18.402 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3913, observer: :observer}

11:37:18.402 [info] Latest entries: [%KvStore.CacheEntry{object: 753, context: %KvStore.Context{vector_clock: %{a: 13038}}}]

11:37:18.403 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3911, key: "2", object: [%KvStore.CacheEntry{object: 753, context: %KvStore.Context{vector_clock: %{a: 13038}}}], sender: :a, type: :get_log}

11:37:18.403 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 3912}

11:37:18.403 [info] Receive response of 3911 from a with [%KvStore.CacheEntry{object: 753, context: %KvStore.Context{vector_clock: %{a: 13038}}}]

11:37:18.403 [info] generate requests

11:37:18.403 [info] Send request {:put, "2", 268, []}

11:37:18.403 [warning] :a Timeout for request: 3874

11:37:18.403 [warning] :a Timeout for request: 3874, but request not found.

11:37:18.404 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 753, context: %KvStore.Context{vector_clock: %{a: 13038}}}]

11:37:18.404 [info] lb receive put from :client_b

11:37:18.404 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3914, observer: :observer}

11:37:18.405 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 753, context: %KvStore.Context{vector_clock: %{a: 13038}}}], type: :get_response, req_id: 3912}}

11:37:18.405 [info] Latest entries: [%KvStore.CacheEntry{object: 753, context: %KvStore.Context{vector_clock: %{a: 13038}}}]

11:37:18.405 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 268, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3913}

11:37:18.406 [info] Receive response of 3912 from a with [%KvStore.CacheEntry{object: 753, context: %KvStore.Context{vector_clock: %{a: 13038}}}]

11:37:18.406 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3912, key: "2", object: [%KvStore.CacheEntry{object: 753, context: %KvStore.Context{vector_clock: %{a: 13038}}}], sender: :a, type: :get_log}

11:37:18.406 [info] New objects are [%KvStore.CacheEntry{object: 268, context: %KvStore.Context{vector_clock: %{a: 13052}}}]

11:37:18.406 [info] Send request {:get, "3"}

11:37:18.407 [info] lb receive get from :client_a (3914)

11:37:18.407 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3915, observer: :observer}

11:37:18.408 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3913, key: "2", object: 268, sender: :a, type: :put_log}

11:37:18.408 [info] Receive response of 3913 from a with context: %KvStore.Context{vector_clock: %{a: 13052}}

11:37:18.408 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 3914}

11:37:18.408 [info] Send request {:get, "1"}

11:37:18.410 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}]

11:37:18.410 [info] lb receive get from :client_b (3915)

11:37:18.410 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3916, observer: :observer}

11:37:18.412 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}], type: :get_response, req_id: 3914}}

11:37:18.412 [info] Latest entries: [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}]

11:37:18.412 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3914, key: "3", object: [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}], sender: :a, type: :get_log}

11:37:18.412 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 3915}

11:37:18.412 [info] Receive response of 3914 from a with [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}]

11:37:18.412 [info] Send request {:put, "2", 493, []}

11:37:18.412 [warning] :a Timeout for request: 3877

11:37:18.412 [warning] :a Timeout for request: 3877, but request not found.

11:37:18.413 [info] lb receive put from :client_a

11:37:18.413 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 400, context: %KvStore.Context{vector_clock: %{a: 13041}}}]

11:37:18.413 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3917, observer: :observer}

11:37:18.414 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 493, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3916}

11:37:18.414 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 400, context: %KvStore.Context{vector_clock: %{a: 13041}}}], type: :get_response, req_id: 3915}}

11:37:18.414 [info] Latest entries: [%KvStore.CacheEntry{object: 400, context: %KvStore.Context{vector_clock: %{a: 13041}}}]

11:37:18.415 [info] Receive response of 3915 from a with [%KvStore.CacheEntry{object: 400, context: %KvStore.Context{vector_clock: %{a: 13041}}}]

11:37:18.415 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3915, key: "1", object: [%KvStore.CacheEntry{object: 400, context: %KvStore.Context{vector_clock: %{a: 13041}}}], sender: :a, type: :get_log}

11:37:18.415 [info] Send request {:get, "4"}

11:37:18.415 [info] New objects are [%KvStore.CacheEntry{object: 493, context: %KvStore.Context{vector_clock: %{a: 13061}}}]

11:37:18.416 [info] lb receive get from :client_b (3917)

11:37:18.416 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3918, observer: :observer}

11:37:18.417 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 3917}

11:37:18.417 [info] Receive response of 3916 from a with context: %KvStore.Context{vector_clock: %{a: 13061}}

11:37:18.417 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3916, key: "2", object: 493, sender: :a, type: :put_log}

11:37:18.417 [info] generate requests

11:37:18.417 [info] Send request {:get, "5"}

11:37:18.418 [info] lb receive get from :client_a (3918)

11:37:18.418 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}]

11:37:18.418 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3919, observer: :observer}

11:37:18.419 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 3918}

11:37:18.419 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}], type: :get_response, req_id: 3917}}

11:37:18.419 [info] Latest entries: [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}]

11:37:18.420 [info] Receive response of 3917 from a with [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}]

11:37:18.420 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3917, key: "4", object: [%KvStore.CacheEntry{object: 365, context: %KvStore.Context{vector_clock: %{a: 12969}}}], sender: :a, type: :get_log}

11:37:18.420 [info] generate requests

11:37:18.420 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}]

11:37:18.420 [info] Send request {:get, "3"}

11:37:18.421 [info] lb receive get from :client_b (3919)

11:37:18.421 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}], type: :get_response, req_id: 3918}}

11:37:18.421 [info] Latest entries: [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}]

11:37:18.421 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3920, observer: :observer}

11:37:18.422 [info] Receive response of 3918 from a with [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}]

11:37:18.422 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 3919}

11:37:18.422 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3918, key: "5", object: [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}], sender: :a, type: :get_log}

11:37:18.422 [info] Send request {:put, "4", 879, []}

11:37:18.423 [info] lb receive put from :client_a

11:37:18.423 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}]

11:37:18.423 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3921, observer: :observer}

11:37:18.423 [warning] :a Timeout for request: 3882

11:37:18.423 [warning] :a Timeout for request: 3882, but request not found.

11:37:18.424 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 879, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3920}

11:37:18.424 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}], type: :get_response, req_id: 3919}}

11:37:18.424 [info] Latest entries: [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}]

11:37:18.425 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3919, key: "3", object: [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}], sender: :a, type: :get_log}

11:37:18.425 [info] New objects are [%KvStore.CacheEntry{object: 879, context: %KvStore.Context{vector_clock: %{a: 13074}}}]

11:37:18.425 [info] Receive response of 3919 from a with [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}]

11:37:18.425 [info] Send request {:put, "2", 702, []}

11:37:18.426 [info] lb receive put from :client_b

11:37:18.426 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3922, observer: :observer}

11:37:18.427 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3920, key: "4", object: 879, sender: :a, type: :put_log}

11:37:18.427 [info] Receive response of 3920 from a with context: %KvStore.Context{vector_clock: %{a: 13074}}

11:37:18.427 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 702, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 3921}

11:37:18.427 [info] Send request {:get, "3"}

11:37:18.428 [info] lb receive get from :client_a (3922)

11:37:18.428 [info] New objects are [%KvStore.CacheEntry{object: 702, context: %KvStore.Context{vector_clock: %{a: 13078}}}]

11:37:18.428 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3923, observer: :observer}

11:37:18.428 [warning] :a Timeout for request: 3884

11:37:18.428 [warning] :a Timeout for request: 3884, but request not found.

11:37:18.429 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 3922}

11:37:18.430 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3921, key: "2", object: 702, sender: :a, type: :put_log}

11:37:18.430 [info] Receive response of 3921 from a with context: %KvStore.Context{vector_clock: %{a: 13078}}

11:37:18.430 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}]

11:37:18.430 [info] Send request {:get, "2"}

11:37:18.431 [info] lb receive get from :client_b (3923)

11:37:18.431 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}], type: :get_response, req_id: 3922}}

11:37:18.431 [info] Latest entries: [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}]

11:37:18.431 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3924, observer: :observer}

11:37:18.431 [warning] :a Timeout for request: 3885

11:37:18.431 [warning] :a Timeout for request: 3885, but request not found.

11:37:18.432 [info] Receive response of 3922 from a with [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}]

11:37:18.432 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3922, key: "3", object: [%KvStore.CacheEntry{object: 156, context: %KvStore.Context{vector_clock: %{a: 12995}}}], sender: :a, type: :get_log}

11:37:18.432 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 3923}

11:37:18.432 [info] generate requests

11:37:18.432 [info] Send request {:put, "2", 659, []}

11:37:18.433 [info] lb receive put from :client_a

11:37:18.433 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3925, observer: :observer}

11:37:18.433 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 702, context: %KvStore.Context{vector_clock: %{a: 13078}}}]

11:37:18.434 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 659, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 3924}

11:37:18.434 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 702, context: %KvStore.Context{vector_clock: %{a: 13078}}}], type: :get_response, req_id: 3923}}

11:37:18.434 [info] Latest entries: [%KvStore.CacheEntry{object: 702, context: %KvStore.Context{vector_clock: %{a: 13078}}}]

11:37:18.435 [info] Receive response of 3923 from a with [%KvStore.CacheEntry{object: 702, context: %KvStore.Context{vector_clock: %{a: 13078}}}]

11:37:18.435 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 3923, key: "2", object: [%KvStore.CacheEntry{object: 702, context: %KvStore.Context{vector_clock: %{a: 13078}}}], sender: :a, type: :get_log}

11:37:18.435 [info] generate requests

11:37:18.435 [info] Send request {:get, "5"}

11:37:18.435 [info] New objects are [%KvStore.CacheEntry{object: 659, context: %KvStore.Context{vector_clock: %{a: 13088}}}]

11:37:18.436 [info] lb receive get from :client_b (3925)

11:37:18.436 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3926, observer: :observer}

11:37:18.437 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 3925}

11:37:18.437 [info] Receive response of 3924 from a with context: %KvStore.Context{vector_clock: %{a: 13088}}

11:37:18.437 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 3924, key: "2", object: 659, sender: :a, type: :put_log}

11:37:18.437 [info] Send request {:get, "1"}

11:37:18.438 [info] lb receive get from :client_a (3926)

11:37:18.438 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}]

11:37:18.438 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 3927, observer: :observer}

11:37:18.439 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}], type: :get_response, req_id: 3925}}

11:37:18.439 [info] Latest entries: [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}]

11:37:18.439 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 3926}

11:37:18.440 [info] Receive response of 3925 from a with [%KvStore.CacheEntry{object: 164, context: %KvStore.Context{vector_clock: %{a: 12890}}}]

11:37:18.440 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 400, context: %KvStore.Context{vector_clock: %{a: 13041}}}]

11:37:19.302 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4262, key: "4", object: 479, sender: :a, type: :put_log}

11:37:19.302 [info] Receive response of 4262 from a with context: %KvStore.Context{vector_clock: %{a: 14215}}

11:37:19.302 [info] Send request {:get, "4"}

11:37:19.302 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 732, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 4263}

11:37:19.303 [info] lb receive get from :client_a (4264)

11:37:19.303 [info] New objects are [%KvStore.CacheEntry{object: 732, context: %KvStore.Context{vector_clock: %{a: 14220}}}]

11:37:19.303 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4265, observer: :observer}

11:37:19.303 [warning] :a Timeout for request: 4225

11:37:19.303 [warning] :a Timeout for request: 4225, but request not found.

11:37:19.304 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 4264}

11:37:19.305 [info] Receive response of 4263 from a with context: %KvStore.Context{vector_clock: %{a: 14220}}

11:37:19.305 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4263, key: "2", object: 732, sender: :a, type: :put_log}

11:37:19.305 [info] Send request {:get, "5"}

11:37:19.305 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}]

11:37:19.306 [info] lb receive get from :client_b (4265)

11:37:19.306 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}], type: :get_response, req_id: 4264}}

11:37:19.306 [info] Latest entries: [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}]

11:37:19.306 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4266, observer: :observer}

11:37:19.307 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 4265}

11:37:19.307 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4264, key: "4", object: [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}], sender: :a, type: :get_log}

11:37:19.307 [info] Receive response of 4264 from a with [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}]

11:37:19.307 [info] generate requests

11:37:19.307 [info] Send request {:put, "3", 935, []}

11:37:19.308 [info] lb receive put from :client_a

11:37:19.308 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}]

11:37:19.308 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4267, observer: :observer}

11:37:19.310 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 935, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 4266}

11:37:19.310 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}], type: :get_response, req_id: 4265}}

11:37:19.310 [info] Latest entries: [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}]

11:37:19.315 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4265, key: "5", object: [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}], sender: :a, type: :get_log}

11:37:19.315 [info] New objects are [%KvStore.CacheEntry{object: 935, context: %KvStore.Context{vector_clock: %{a: 14229}}}]

11:37:19.315 [info] Receive response of 4265 from a with [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}]

11:37:19.315 [info] generate requests

11:37:19.315 [info] Send request {:get, "1"}

11:37:19.315 [warning] :a Timeout for request: 4228

11:37:19.315 [warning] :a Timeout for request: 4228, but request not found.

11:37:19.316 [info] lb receive get from :client_b (4267)

11:37:19.316 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4268, observer: :observer}

11:37:19.317 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4266, key: "3", object: 935, sender: :a, type: :put_log}

11:37:19.317 [info] Receive response of 4266 from a with context: %KvStore.Context{vector_clock: %{a: 14229}}

11:37:19.317 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 4267}

11:37:19.317 [info] Send request {:get, "4"}

11:37:19.318 [info] lb receive get from :client_a (4268)

11:37:19.318 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 623, context: %KvStore.Context{vector_clock: %{a: 14169}}}]

11:37:19.318 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4269, observer: :observer}

11:37:19.318 [warning] :a Timeout for request: 4231

11:37:19.318 [warning] :a Timeout for request: 4231, but request not found.

11:37:19.319 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 623, context: %KvStore.Context{vector_clock: %{a: 14169}}}], type: :get_response, req_id: 4267}}

11:37:19.319 [info] Latest entries: [%KvStore.CacheEntry{object: 623, context: %KvStore.Context{vector_clock: %{a: 14169}}}]

11:37:19.319 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 4268}

11:37:19.320 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4267, key: "1", object: [%KvStore.CacheEntry{object: 623, context: %KvStore.Context{vector_clock: %{a: 14169}}}], sender: :a, type: :get_log}

11:37:19.320 [info] Receive response of 4267 from a with [%KvStore.CacheEntry{object: 623, context: %KvStore.Context{vector_clock: %{a: 14169}}}]

11:37:19.320 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}]

11:37:19.320 [info] Send request {:get, "3"}

11:37:19.321 [info] lb receive get from :client_b (4269)

11:37:19.321 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}], type: :get_response, req_id: 4268}}

11:37:19.321 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4270, observer: :observer}

11:37:19.321 [info] Latest entries: [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}]

11:37:19.321 [warning] :a Timeout for request: 4232

11:37:19.321 [warning] :a Timeout for request: 4232, but request not found.

11:37:19.322 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4268, key: "4", object: [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}], sender: :a, type: :get_log}

11:37:19.322 [info] Receive response of 4268 from a with [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}]

11:37:19.322 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 4269}

11:37:19.322 [info] Send request {:get, "5"}

11:37:19.323 [info] lb receive get from :client_a (4270)

11:37:19.323 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 935, context: %KvStore.Context{vector_clock: %{a: 14229}}}]

11:37:19.323 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4271, observer: :observer}

11:37:19.324 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 4270}

11:37:19.324 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 935, context: %KvStore.Context{vector_clock: %{a: 14229}}}], type: :get_response, req_id: 4269}}

11:37:19.324 [info] Latest entries: [%KvStore.CacheEntry{object: 935, context: %KvStore.Context{vector_clock: %{a: 14229}}}]

11:37:19.325 [info] Receive response of 4269 from a with [%KvStore.CacheEntry{object: 935, context: %KvStore.Context{vector_clock: %{a: 14229}}}]

11:37:19.325 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}]

11:37:19.325 [info] Send request {:put, "1", 84, []}

11:37:19.325 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4269, key: "3", object: [%KvStore.CacheEntry{object: 935, context: %KvStore.Context{vector_clock: %{a: 14229}}}], sender: :a, type: :get_log}

11:37:19.326 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}], type: :get_response, req_id: 4270}}

11:37:19.326 [info] lb receive put from :client_b

11:37:19.326 [info] Latest entries: [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}]

11:37:19.326 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4272, observer: :observer}

11:37:19.327 [info] Receive response of 4270 from a with [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}]

11:37:19.327 [info] generate requests

11:37:19.327 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4270, key: "5", object: [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}], sender: :a, type: :get_log}

11:37:19.327 [info] Send request {:get, "5"}

11:37:19.327 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 84, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 4271}

11:37:19.328 [info] lb receive get from :client_a (4272)

11:37:19.328 [info] New objects are [%KvStore.CacheEntry{object: 84, context: %KvStore.Context{vector_clock: %{a: 14248}}}]

11:37:19.328 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4273, observer: :observer}

11:37:19.329 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 4272}

11:37:19.330 [info] Receive response of 4271 from a with context: %KvStore.Context{vector_clock: %{a: 14248}}

11:37:19.330 [info] generate requests

11:37:19.330 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4271, key: "1", object: 84, sender: :a, type: :put_log}

11:37:19.330 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}]

11:37:19.330 [info] Send request {:get, "4"}

11:37:19.331 [info] lb receive get from :client_b (4273)

11:37:19.331 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}], type: :get_response, req_id: 4272}}

11:37:19.331 [info] Latest entries: [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}]

11:37:19.331 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4274, observer: :observer}

11:37:19.332 [info] Receive response of 4272 from a with [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}]

11:37:19.332 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4272, key: "5", object: [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}], sender: :a, type: :get_log}

11:37:19.332 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 4273}

11:37:19.332 [info] Send request {:get, "1"}

11:37:19.333 [info] lb receive get from :client_a (4274)

11:37:19.333 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}]

11:37:19.333 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4275, observer: :observer}

11:37:19.334 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}], type: :get_response, req_id: 4273}}

11:37:19.334 [info] Latest entries: [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}]

11:37:19.334 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 4274}

11:37:19.335 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 84, context: %KvStore.Context{vector_clock: %{a: 14248}}}]

11:37:19.335 [info] Receive response of 4273 from a with [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}]

11:37:19.335 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4273, key: "4", object: [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}], sender: :a, type: :get_log}

11:37:19.335 [info] Send request {:put, "2", 689, []}

11:37:19.336 [info] lb receive put from :client_b

11:37:19.336 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 84, context: %KvStore.Context{vector_clock: %{a: 14248}}}], type: :get_response, req_id: 4274}}

11:37:19.336 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4276, observer: :observer}

11:37:19.336 [info] Latest entries: [%KvStore.CacheEntry{object: 84, context: %KvStore.Context{vector_clock: %{a: 14248}}}]

11:37:19.337 [info] Receive response of 4274 from a with [%KvStore.CacheEntry{object: 84, context: %KvStore.Context{vector_clock: %{a: 14248}}}]

11:37:19.337 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4274, key: "1", object: [%KvStore.CacheEntry{object: 84, context: %KvStore.Context{vector_clock: %{a: 14248}}}], sender: :a, type: :get_log}

11:37:19.337 [info] Send request {:put, "3", 656, []}

11:37:19.337 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 689, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 4275}

11:37:19.338 [info] New objects are [%KvStore.CacheEntry{object: 689, context: %KvStore.Context{vector_clock: %{a: 14260}}}]

11:37:19.338 [info] lb receive put from :client_a

11:37:19.338 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4277, observer: :observer}

11:37:19.338 [warning] :a Timeout for request: 4239

11:37:19.338 [warning] :a Timeout for request: 4239, but request not found.

11:37:19.339 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 656, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 4276}

11:37:19.340 [info] New objects are [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}]

11:37:19.340 [info] Receive response of 4275 from a with context: %KvStore.Context{vector_clock: %{a: 14260}}

11:37:19.340 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4275, key: "2", object: 689, sender: :a, type: :put_log}

11:37:19.340 [info] Send request {:get, "5"}

11:37:19.341 [info] lb receive get from :client_b (4277)

11:37:19.341 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4278, observer: :observer}

11:37:19.342 [info] Receive response of 4276 from a with context: %KvStore.Context{vector_clock: %{a: 14264}}

11:37:19.342 [info] generate requests

11:37:19.342 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 4277}

11:37:19.342 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4276, key: "3", object: 656, sender: :a, type: :put_log}

11:37:19.342 [info] Send request {:get, "1"}

11:37:19.343 [info] lb receive get from :client_a (4278)

11:37:19.343 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}]

11:37:19.343 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4279, observer: :observer}

11:37:19.344 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 4278}

11:37:19.344 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}], type: :get_response, req_id: 4277}}

11:37:19.344 [info] Latest entries: [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}]

11:37:19.345 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4277, key: "5", object: [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}], sender: :a, type: :get_log}

11:37:19.345 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 84, context: %KvStore.Context{vector_clock: %{a: 14248}}}]

11:37:19.345 [info] Receive response of 4277 from a with [%KvStore.CacheEntry{object: 50, context: %KvStore.Context{vector_clock: %{a: 14195}}}]

11:37:19.345 [info] generate requests

11:37:19.345 [info] Send request {:get, "4"}

11:37:19.346 [info] lb receive get from :client_b (4279)

11:37:19.346 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 84, context: %KvStore.Context{vector_clock: %{a: 14248}}}], type: :get_response, req_id: 4278}}

11:37:19.346 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4280, observer: :observer}

11:37:19.346 [info] Latest entries: [%KvStore.CacheEntry{object: 84, context: %KvStore.Context{vector_clock: %{a: 14248}}}]

11:37:19.346 [warning] :a Timeout for request: 4242

11:37:19.346 [warning] :a Timeout for request: 4242, but request not found.

11:37:19.347 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 4279}

11:37:19.347 [info] Receive response of 4278 from a with [%KvStore.CacheEntry{object: 84, context: %KvStore.Context{vector_clock: %{a: 14248}}}]

11:37:19.347 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4278, key: "1", object: [%KvStore.CacheEntry{object: 84, context: %KvStore.Context{vector_clock: %{a: 14248}}}], sender: :a, type: :get_log}

11:37:19.347 [info] Send request {:put, "4", 144, []}

11:37:19.348 [info] lb receive put from :client_a

11:37:19.348 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}]

11:37:19.348 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4281, observer: :observer}

11:37:19.349 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 144, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 4280}

11:37:19.349 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}], type: :get_response, req_id: 4279}}

11:37:19.349 [info] Latest entries: [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}]

11:37:19.350 [info] Receive response of 4279 from a with [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}]

11:37:19.350 [info] New objects are [%KvStore.CacheEntry{object: 144, context: %KvStore.Context{vector_clock: %{a: 14276}}}]

11:37:19.350 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4279, key: "4", object: [%KvStore.CacheEntry{object: 479, context: %KvStore.Context{vector_clock: %{a: 14215}}}], sender: :a, type: :get_log}

11:37:19.350 [info] Send request {:get, "2"}

11:37:19.351 [info] lb receive get from :client_b (4281)

11:37:19.351 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4282, observer: :observer}

11:37:19.353 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4280, key: "4", object: 144, sender: :a, type: :put_log}

11:37:19.353 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 4281}

11:37:19.353 [info] Receive response of 4280 from a with context: %KvStore.Context{vector_clock: %{a: 14276}}

11:37:19.353 [info] Send request {:get, "2"}

11:37:19.353 [info] lb receive get from :client_a (4282)

11:37:19.353 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 689, context: %KvStore.Context{vector_clock: %{a: 14260}}}]

11:37:19.353 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4283, observer: :observer}

11:37:19.354 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 4282}

11:37:19.354 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 689, context: %KvStore.Context{vector_clock: %{a: 14260}}}], type: :get_response, req_id: 4281}}

11:37:19.354 [info] Latest entries: [%KvStore.CacheEntry{object: 689, context: %KvStore.Context{vector_clock: %{a: 14260}}}]

11:37:19.355 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4281, key: "2", object: [%KvStore.CacheEntry{object: 689, context: %KvStore.Context{vector_clock: %{a: 14260}}}], sender: :a, type: :get_log}

11:37:19.355 [info] Receive response of 4281 from a with [%KvStore.CacheEntry{object: 689, context: %KvStore.Context{vector_clock: %{a: 14260}}}]

11:37:19.355 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 689, context: %KvStore.Context{vector_clock: %{a: 14260}}}]

11:37:19.355 [info] Send request {:put, "1", 494, []}

11:37:19.356 [info] lb receive put from :client_b

11:37:19.356 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 689, context: %KvStore.Context{vector_clock: %{a: 14260}}}], type: :get_response, req_id: 4282}}

11:37:19.356 [info] Latest entries: [%KvStore.CacheEntry{object: 689, context: %KvStore.Context{vector_clock: %{a: 14260}}}]

11:37:19.356 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4284, observer: :observer}

11:37:19.357 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4282, key: "2", object: [%KvStore.CacheEntry{object: 689, context: %KvStore.Context{vector_clock: %{a: 14260}}}], sender: :a, type: :get_log}

11:37:19.357 [info] Receive response of 4282 from a with [%KvStore.CacheEntry{object: 689, context: %KvStore.Context{vector_clock: %{a: 14260}}}]

11:37:19.357 [info] generate requests

11:37:19.357 [info] Send request {:put, "1", 66, []}

11:37:19.357 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 494, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 4283}

11:37:19.358 [info] lb receive put from :client_a

11:37:19.358 [info] New objects are [%KvStore.CacheEntry{object: 494, context: %KvStore.Context{vector_clock: %{a: 14286}}}]

11:37:19.358 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4285, observer: :observer}

11:37:19.358 [warning] :a Timeout for request: 4247

11:37:19.358 [warning] :a Timeout for request: 4247, but request not found.

11:37:19.359 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 66, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 4284}

11:37:19.360 [info] Receive response of 4283 from a with context: %KvStore.Context{vector_clock: %{a: 14286}}

11:37:19.360 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4283, key: "1", object: 494, sender: :a, type: :put_log}

11:37:19.360 [info] generate requests

11:37:19.360 [info] New objects are [%KvStore.CacheEntry{object: 66, context: %KvStore.Context{vector_clock: %{a: 14289}}}]

11:37:19.360 [info] Send request {:put, "4", 916, []}

11:37:19.361 [info] lb receive put from :client_b

11:37:19.361 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4286, observer: :observer}

11:37:19.361 [warning] :a Timeout for request: 4248

11:37:19.361 [warning] :a Timeout for request: 4248, but request not found.

11:37:19.362 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4284, key: "1", object: 66, sender: :a, type: :put_log}

11:37:19.362 [info] Receive response of 4284 from a with context: %KvStore.Context{vector_clock: %{a: 14289}}

11:37:19.362 [info] Send request {:get, "4"}

11:37:19.362 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 916, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 4285}

11:37:19.363 [info] lb receive get from :client_a (4286)

11:37:19.363 [info] New objects are [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.363 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4287, observer: :observer}

11:37:19.363 [warning] :a Timeout for request: 4249

11:37:19.363 [warning] :a Timeout for request: 4249, but request not found.

11:37:19.364 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 4286}

11:37:19.365 [info] Receive response of 4285 from a with context: %KvStore.Context{vector_clock: %{a: 14294}}

11:37:19.365 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.365 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4285, key: "4", object: 916, sender: :a, type: :put_log}

11:37:19.365 [info] Send request {:get, "4"}

11:37:19.366 [info] lb receive get from :client_b (4287)

11:37:19.366 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}], type: :get_response, req_id: 4286}}

11:37:19.366 [info] Latest entries: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.366 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4288, observer: :observer}

11:37:19.366 [warning] :a Timeout for request: 4250

11:37:19.366 [warning] :a Timeout for request: 4250, but request not found.

11:37:19.367 [info] Receive response of 4286 from a with [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.367 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 4287}

11:37:19.367 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4286, key: "4", object: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}], sender: :a, type: :get_log}

11:37:19.367 [info] Send request {:get, "4"}

11:37:19.368 [info] lb receive get from :client_a (4288)

11:37:19.368 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.368 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4289, observer: :observer}

11:37:19.369 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 4288}

11:37:19.369 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}], type: :get_response, req_id: 4287}}

11:37:19.369 [info] Latest entries: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.370 [info] Receive response of 4287 from a with [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.370 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4287, key: "4", object: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}], sender: :a, type: :get_log}

11:37:19.370 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.370 [info] Send request {:get, "1"}

11:37:19.371 [info] lb receive get from :client_b (4289)

11:37:19.371 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}], type: :get_response, req_id: 4288}}

11:37:19.371 [info] Latest entries: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.371 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4290, observer: :observer}

11:37:19.372 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 4289}

11:37:19.372 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4288, key: "4", object: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}], sender: :a, type: :get_log}

11:37:19.372 [info] Receive response of 4288 from a with [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.372 [info] generate requests

11:37:19.372 [info] Send request {:get, "1"}

11:37:19.373 [info] lb receive get from :client_a (4290)

11:37:19.373 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 66, context: %KvStore.Context{vector_clock: %{a: 14289}}}]

11:37:19.373 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4291, observer: :observer}

11:37:19.374 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 4290}

11:37:19.374 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 66, context: %KvStore.Context{vector_clock: %{a: 14289}}}], type: :get_response, req_id: 4289}}

11:37:19.374 [info] Latest entries: [%KvStore.CacheEntry{object: 66, context: %KvStore.Context{vector_clock: %{a: 14289}}}]

11:37:19.375 [info] Receive response of 4289 from a with [%KvStore.CacheEntry{object: 66, context: %KvStore.Context{vector_clock: %{a: 14289}}}]

11:37:19.375 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4289, key: "1", object: [%KvStore.CacheEntry{object: 66, context: %KvStore.Context{vector_clock: %{a: 14289}}}], sender: :a, type: :get_log}

11:37:19.375 [info] generate requests

11:37:19.375 [info] Send request {:get, "3"}

11:37:19.375 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 66, context: %KvStore.Context{vector_clock: %{a: 14289}}}]

11:37:19.376 [info] lb receive get from :client_b (4291)

11:37:19.376 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 66, context: %KvStore.Context{vector_clock: %{a: 14289}}}], type: :get_response, req_id: 4290}}

11:37:19.376 [info] Latest entries: [%KvStore.CacheEntry{object: 66, context: %KvStore.Context{vector_clock: %{a: 14289}}}]

11:37:19.376 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4292, observer: :observer}

11:37:19.377 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 4291}

11:37:19.377 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4290, key: "1", object: [%KvStore.CacheEntry{object: 66, context: %KvStore.Context{vector_clock: %{a: 14289}}}], sender: :a, type: :get_log}

11:37:19.377 [info] Receive response of 4290 from a with [%KvStore.CacheEntry{object: 66, context: %KvStore.Context{vector_clock: %{a: 14289}}}]

11:37:19.377 [info] Send request {:put, "1", 723, []}

11:37:19.378 [info] lb receive put from :client_a

11:37:19.379 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4293, observer: :observer}

11:37:19.380 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}]

11:37:19.381 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 723, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 4292}

11:37:19.381 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}], type: :get_response, req_id: 4291}}

11:37:19.381 [info] Latest entries: [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}]

11:37:19.381 [warning] :a Timeout for request: 4256

11:37:19.381 [warning] :a Timeout for request: 4256, but request not found.

11:37:19.382 [info] New objects are [%KvStore.CacheEntry{object: 723, context: %KvStore.Context{vector_clock: %{a: 14316}}}]

11:37:19.382 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4291, key: "3", object: [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}], sender: :a, type: :get_log}

11:37:19.382 [info] Receive response of 4291 from a with [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}]

11:37:19.382 [info] Send request {:put, "2", 493, []}

11:37:19.383 [info] lb receive put from :client_b

11:37:19.383 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4294, observer: :observer}

11:37:19.383 [warning] :a Timeout for request: 4257

11:37:19.383 [warning] :a Timeout for request: 4257, but request not found.

11:37:19.384 [info] Receive response of 4292 from a with context: %KvStore.Context{vector_clock: %{a: 14316}}

11:37:19.384 [info] Send request {:get, "2"}

11:37:19.384 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 493, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 4293}

11:37:19.384 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4292, key: "1", object: 723, sender: :a, type: :put_log}

11:37:19.385 [info] lb receive get from :client_a (4294)

11:37:19.385 [info] New objects are [%KvStore.CacheEntry{object: 493, context: %KvStore.Context{vector_clock: %{a: 14322}}}]

11:37:19.385 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4295, observer: :observer}

11:37:19.386 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 4294}

11:37:19.387 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4293, key: "2", object: 493, sender: :a, type: :put_log}

11:37:19.387 [info] Receive response of 4293 from a with context: %KvStore.Context{vector_clock: %{a: 14322}}

11:37:19.387 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 493, context: %KvStore.Context{vector_clock: %{a: 14322}}}]

11:37:19.387 [info] Send request {:get, "2"}

11:37:19.388 [info] lb receive get from :client_b (4295)

11:37:19.388 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 493, context: %KvStore.Context{vector_clock: %{a: 14322}}}], type: :get_response, req_id: 4294}}

11:37:19.388 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4296, observer: :observer}

11:37:19.388 [info] Latest entries: [%KvStore.CacheEntry{object: 493, context: %KvStore.Context{vector_clock: %{a: 14322}}}]

11:37:19.389 [info] Receive response of 4294 from a with [%KvStore.CacheEntry{object: 493, context: %KvStore.Context{vector_clock: %{a: 14322}}}]

11:37:19.389 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 4295}

11:37:19.389 [info] generate requests

11:37:19.389 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4294, key: "2", object: [%KvStore.CacheEntry{object: 493, context: %KvStore.Context{vector_clock: %{a: 14322}}}], sender: :a, type: :get_log}

11:37:19.389 [info] Send request {:put, "5", 742, []}

11:37:19.390 [info] lb receive put from :client_a

11:37:19.390 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 493, context: %KvStore.Context{vector_clock: %{a: 14322}}}]

11:37:19.390 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4297, observer: :observer}

11:37:19.391 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 493, context: %KvStore.Context{vector_clock: %{a: 14322}}}], type: :get_response, req_id: 4295}}

11:37:19.391 [info] Latest entries: [%KvStore.CacheEntry{object: 493, context: %KvStore.Context{vector_clock: %{a: 14322}}}]

11:37:19.391 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 742, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 4296}

11:37:19.392 [info] Receive response of 4295 from a with [%KvStore.CacheEntry{object: 493, context: %KvStore.Context{vector_clock: %{a: 14322}}}]

11:37:19.392 [info] New objects are [%KvStore.CacheEntry{object: 742, context: %KvStore.Context{vector_clock: %{a: 14331}}}]

11:37:19.392 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4295, key: "2", object: [%KvStore.CacheEntry{object: 493, context: %KvStore.Context{vector_clock: %{a: 14322}}}], sender: :a, type: :get_log}

11:37:19.392 [info] generate requests

11:37:19.392 [info] Send request {:put, "1", 439, []}

11:37:19.393 [info] lb receive put from :client_b

11:37:19.393 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4298, observer: :observer}

11:37:19.394 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4296, key: "5", object: 742, sender: :a, type: :put_log}

11:37:19.394 [info] Receive response of 4296 from a with context: %KvStore.Context{vector_clock: %{a: 14331}}

11:37:19.394 [info] Send request {:get, "3"}

11:37:19.394 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 439, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 4297}

11:37:19.395 [info] lb receive get from :client_a (4298)

11:37:19.395 [info] New objects are [%KvStore.CacheEntry{object: 439, context: %KvStore.Context{vector_clock: %{a: 14334}}}]

11:37:19.395 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4299, observer: :observer}

11:37:19.396 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 4298}

11:37:19.397 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4297, key: "1", object: 439, sender: :a, type: :put_log}

11:37:19.397 [info] Receive response of 4297 from a with context: %KvStore.Context{vector_clock: %{a: 14334}}

11:37:19.397 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}]

11:37:19.397 [info] Send request {:get, "3"}

11:37:19.398 [info] lb receive get from :client_b (4299)

11:37:19.398 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}], type: :get_response, req_id: 4298}}

11:37:19.398 [info] Latest entries: [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}]

11:37:19.398 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4300, observer: :observer}

11:37:19.399 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 4299}

11:37:19.399 [info] Receive response of 4298 from a with [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}]

11:37:19.399 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4298, key: "3", object: [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}], sender: :a, type: :get_log}

11:37:19.399 [info] Send request {:get, "3"}

11:37:19.399 [warning] :a Timeout for request: 4263

11:37:19.399 [warning] :a Timeout for request: 4263, but request not found.

11:37:19.400 [info] lb receive get from :client_a (4300)

11:37:19.400 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}]

11:37:19.400 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4301, observer: :observer}

11:37:19.401 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 4300}

11:37:19.401 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}], type: :get_response, req_id: 4299}}

11:37:19.401 [info] Latest entries: [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}]

11:37:19.402 [info] Receive response of 4299 from a with [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}]

11:37:19.402 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4299, key: "3", object: [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}], sender: :a, type: :get_log}

11:37:19.402 [info] Send request {:get, "4"}

11:37:19.402 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}]

11:37:19.403 [info] lb receive get from :client_b (4301)

11:37:19.403 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}], type: :get_response, req_id: 4300}}

11:37:19.403 [info] Latest entries: [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}]

11:37:19.403 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4302, observer: :observer}

11:37:19.403 [warning] :a Timeout for request: 4264

11:37:19.403 [warning] :a Timeout for request: 4264, but request not found.

11:37:19.404 [info] Receive response of 4300 from a with [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}]

11:37:19.404 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 4301}

11:37:19.404 [info] generate requests

11:37:19.404 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4300, key: "3", object: [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}], sender: :a, type: :get_log}

11:37:19.404 [info] Send request {:get, "5"}

11:37:19.405 [info] lb receive get from :client_a (4302)

11:37:19.405 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.405 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4303, observer: :observer}

11:37:19.406 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 4302}

11:37:19.407 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}], type: :get_response, req_id: 4301}}

11:37:19.407 [info] Latest entries: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.407 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4301, key: "4", object: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}], sender: :a, type: :get_log}

11:37:19.407 [info] Receive response of 4301 from a with [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.407 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 742, context: %KvStore.Context{vector_clock: %{a: 14331}}}]

11:37:19.407 [info] generate requests

11:37:19.407 [info] Send request {:put, "2", 74, []}

11:37:19.408 [info] lb receive put from :client_b

11:37:19.408 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 742, context: %KvStore.Context{vector_clock: %{a: 14331}}}], type: :get_response, req_id: 4302}}

11:37:19.408 [info] Latest entries: [%KvStore.CacheEntry{object: 742, context: %KvStore.Context{vector_clock: %{a: 14331}}}]

11:37:19.408 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4304, observer: :observer}

11:37:19.409 [info] Receive response of 4302 from a with [%KvStore.CacheEntry{object: 742, context: %KvStore.Context{vector_clock: %{a: 14331}}}]

11:37:19.409 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4302, key: "5", object: [%KvStore.CacheEntry{object: 742, context: %KvStore.Context{vector_clock: %{a: 14331}}}], sender: :a, type: :get_log}

11:37:19.409 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 74, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 4303}

11:37:19.409 [info] Send request {:get, "4"}

11:37:19.410 [info] lb receive get from :client_a (4304)

11:37:19.410 [info] New objects are [%KvStore.CacheEntry{object: 74, context: %KvStore.Context{vector_clock: %{a: 14354}}}]

11:37:19.410 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4305, observer: :observer}

11:37:19.411 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 4304}

11:37:19.411 [warning] :a Timeout for request: 4267

11:37:19.411 [warning] :a Timeout for request: 4267, but request not found.

11:37:19.412 [info] Receive response of 4303 from a with context: %KvStore.Context{vector_clock: %{a: 14354}}

11:37:19.412 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.412 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4303, key: "2", object: 74, sender: :a, type: :put_log}

11:37:19.412 [info] Send request {:get, "5"}

11:37:19.413 [info] lb receive get from :client_b (4305)

11:37:19.413 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}], type: :get_response, req_id: 4304}}

11:37:19.413 [info] Latest entries: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.413 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4306, observer: :observer}

11:37:19.414 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 4305}

11:37:19.414 [info] Receive response of 4304 from a with [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.414 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4304, key: "4", object: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}], sender: :a, type: :get_log}

11:37:19.414 [info] Send request {:put, "5", 32, []}

11:37:19.415 [info] lb receive put from :client_a

11:37:19.415 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 742, context: %KvStore.Context{vector_clock: %{a: 14331}}}]

11:37:19.415 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4307, observer: :observer}

11:37:19.416 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 32, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 4306}

11:37:19.416 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 742, context: %KvStore.Context{vector_clock: %{a: 14331}}}], type: :get_response, req_id: 4305}}

11:37:19.416 [info] Latest entries: [%KvStore.CacheEntry{object: 742, context: %KvStore.Context{vector_clock: %{a: 14331}}}]

11:37:19.417 [info] New objects are [%KvStore.CacheEntry{object: 32, context: %KvStore.Context{vector_clock: %{a: 14363}}}]

11:37:19.417 [info] Receive response of 4305 from a with [%KvStore.CacheEntry{object: 742, context: %KvStore.Context{vector_clock: %{a: 14331}}}]

11:37:19.417 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4305, key: "5", object: [%KvStore.CacheEntry{object: 742, context: %KvStore.Context{vector_clock: %{a: 14331}}}], sender: :a, type: :get_log}

11:37:19.417 [info] Send request {:get, "3"}

11:37:19.418 [info] lb receive get from :client_b (4307)

11:37:19.419 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4308, observer: :observer}

11:37:19.419 [info] Receive response of 4306 from a with context: %KvStore.Context{vector_clock: %{a: 14363}}

11:37:19.419 [info] generate requests

11:37:19.419 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4306, key: "5", object: 32, sender: :a, type: :put_log}

11:37:19.419 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 4307}

11:37:19.419 [info] Send request {:get, "1"}

11:37:19.420 [info] lb receive get from :client_a (4308)

11:37:19.420 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}]

11:37:19.420 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4309, observer: :observer}

11:37:19.421 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 4308}

11:37:19.421 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}], type: :get_response, req_id: 4307}}

11:37:19.421 [info] Latest entries: [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}]

11:37:19.422 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4307, key: "3", object: [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}], sender: :a, type: :get_log}

11:37:19.422 [info] Receive response of 4307 from a with [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}]

11:37:19.422 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 439, context: %KvStore.Context{vector_clock: %{a: 14334}}}]

11:37:19.422 [info] generate requests

11:37:19.422 [info] Send request {:get, "1"}

11:37:19.423 [info] lb receive get from :client_b (4309)

11:37:19.423 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 439, context: %KvStore.Context{vector_clock: %{a: 14334}}}], type: :get_response, req_id: 4308}}

11:37:19.423 [info] Latest entries: [%KvStore.CacheEntry{object: 439, context: %KvStore.Context{vector_clock: %{a: 14334}}}]

11:37:19.423 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4310, observer: :observer}

11:37:19.424 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4308, key: "1", object: [%KvStore.CacheEntry{object: 439, context: %KvStore.Context{vector_clock: %{a: 14334}}}], sender: :a, type: :get_log}

11:37:19.424 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 4309}

11:37:19.424 [info] Receive response of 4308 from a with [%KvStore.CacheEntry{object: 439, context: %KvStore.Context{vector_clock: %{a: 14334}}}]

11:37:19.424 [info] Send request {:put, "2", 970, []}

11:37:19.425 [info] lb receive put from :client_a

11:37:19.425 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 439, context: %KvStore.Context{vector_clock: %{a: 14334}}}]

11:37:19.425 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4311, observer: :observer}

11:37:19.426 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 970, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 4310}

11:37:19.426 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 439, context: %KvStore.Context{vector_clock: %{a: 14334}}}], type: :get_response, req_id: 4309}}

11:37:19.426 [info] Latest entries: [%KvStore.CacheEntry{object: 439, context: %KvStore.Context{vector_clock: %{a: 14334}}}]

11:37:19.427 [info] New objects are [%KvStore.CacheEntry{object: 970, context: %KvStore.Context{vector_clock: %{a: 14375}}}]

11:37:19.427 [info] Receive response of 4309 from a with [%KvStore.CacheEntry{object: 439, context: %KvStore.Context{vector_clock: %{a: 14334}}}]

11:37:19.427 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4309, key: "1", object: [%KvStore.CacheEntry{object: 439, context: %KvStore.Context{vector_clock: %{a: 14334}}}], sender: :a, type: :get_log}

11:37:19.427 [info] Send request {:get, "4"}

11:37:19.428 [info] lb receive get from :client_b (4311)

11:37:19.428 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4312, observer: :observer}

11:37:19.428 [warning] :a Timeout for request: 4272

11:37:19.428 [warning] :a Timeout for request: 4272, but request not found.

11:37:19.429 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 4311}

11:37:19.429 [info] Receive response of 4310 from a with context: %KvStore.Context{vector_clock: %{a: 14375}}

11:37:19.429 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4310, key: "2", object: 970, sender: :a, type: :put_log}

11:37:19.429 [info] Send request {:get, "4"}

11:37:19.430 [info] lb receive get from :client_a (4312)

11:37:19.430 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.430 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4313, observer: :observer}

11:37:19.431 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 4312}

11:37:19.431 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}], type: :get_response, req_id: 4311}}

11:37:19.431 [info] Latest entries: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.432 [info] Receive response of 4311 from a with [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.432 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4311, key: "4", object: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}], sender: :a, type: :get_log}

11:37:19.432 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.432 [info] Send request {:put, "5", 768, []}

11:37:19.433 [info] lb receive put from :client_b

11:37:19.433 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}], type: :get_response, req_id: 4312}}

11:37:19.433 [info] Latest entries: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.433 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4314, observer: :observer}

11:37:19.434 [info] Receive response of 4312 from a with [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}]

11:37:19.434 [info] generate requests

11:37:19.434 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4312, key: "4", object: [%KvStore.CacheEntry{object: 916, context: %KvStore.Context{vector_clock: %{a: 14294}}}], sender: :a, type: :get_log}

11:37:19.434 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 768, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 4313}

11:37:19.434 [info] Send request {:get, "3"}

11:37:19.435 [info] lb receive get from :client_a (4314)

11:37:19.435 [info] New objects are [%KvStore.CacheEntry{object: 768, context: %KvStore.Context{vector_clock: %{a: 14386}}}]

11:37:19.435 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4315, observer: :observer}

11:37:19.436 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 4314}

11:37:19.437 [info] Receive response of 4313 from a with context: %KvStore.Context{vector_clock: %{a: 14386}}

11:37:19.437 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4313, key: "5", object: 768, sender: :a, type: :put_log}

11:37:19.437 [info] generate requests

11:37:19.437 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}]

11:37:19.437 [info] Send request {:put, "4", 960, []}

11:37:19.438 [info] lb receive put from :client_b

11:37:19.438 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}], type: :get_response, req_id: 4314}}

11:37:19.438 [info] Latest entries: [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}]

11:37:19.438 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4316, observer: :observer}

11:37:19.439 [warning] :a Timeout for request: 4276

11:37:19.439 [warning] :a Timeout for request: 4276, but request not found.

11:37:19.439 [info] Receive response of 4314 from a with [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}]

11:37:19.439 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4314, key: "3", object: [%KvStore.CacheEntry{object: 656, context: %KvStore.Context{vector_clock: %{a: 14264}}}], sender: :a, type: :get_log}

11:37:19.439 [info] Send request {:put, "2", 288, []}

11:37:19.439 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 960, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 4315}

11:37:19.440 [info] lb receive put from :client_a

11:37:19.440 [info] New objects are [%KvStore.CacheEntry{object: 960, context: %KvStore.Context{vector_clock: %{a: 14393}}}]

11:37:19.440 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4317, observer: :observer}

11:37:19.440 [warning] :a Timeout for request: 4277

11:37:19.440 [warning] :a Timeout for request: 4277, but request not found.

11:37:19.441 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 288, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 4316}

11:37:19.442 [info] Receive response of 4315 from a with context: %KvStore.Context{vector_clock: %{a: 14393}}

11:37:19.442 [info] New objects are [%KvStore.CacheEntry{object: 288, context: %KvStore.Context{vector_clock: %{a: 14396}}}]

11:37:19.442 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4315, key: "4", object: 960, sender: :a, type: :put_log}

11:37:19.442 [info] Send request {:get, "1"}

11:37:19.443 [info] lb receive get from :client_b (4317)

11:37:20.303 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 707, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 4654}

11:37:20.303 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15492}}}], type: :get_response, req_id: 4653}}

11:37:20.303 [info] Latest entries: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15492}}}]

11:37:20.303 [info] New objects are [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}]

11:37:20.303 [warning] :a Timeout for request: 4616

11:37:20.303 [warning] :a Timeout for request: 4616, but request not found.

11:37:20.304 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4653, key: "2", object: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15492}}}], sender: :a, type: :get_log}

11:37:20.304 [info] Receive response of 4653 from a with [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15492}}}]

11:37:20.304 [info] Send request {:get, "3"}

11:37:20.305 [info] lb receive get from :client_b (4655)

11:37:20.305 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4654, key: "3", object: 707, sender: :a, type: :put_log}

11:37:20.305 [info] Receive response of 4654 from a with context: %KvStore.Context{vector_clock: %{a: 15524}}

11:37:20.305 [info] generate requests

11:37:20.305 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4656, observer: :observer}

11:37:20.305 [warning] :a Timeout for request: 4617

11:37:20.305 [warning] :a Timeout for request: 4617, but request not found.

11:37:20.305 [info] Send request {:get, "4"}

11:37:20.306 [info] lb receive get from :client_a (4656)

11:37:20.306 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 4655}

11:37:20.306 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4657, observer: :observer}

11:37:20.307 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 4656}

11:37:20.307 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}]

11:37:20.308 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 134, context: %KvStore.Context{vector_clock: %{a: 15515}}}]

11:37:20.309 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}], type: :get_response, req_id: 4655}}

11:37:20.309 [info] Latest entries: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}]

11:37:20.310 [info] Receive response of 4655 from a with [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}]

11:37:20.310 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 134, context: %KvStore.Context{vector_clock: %{a: 15515}}}], type: :get_response, req_id: 4656}}

11:37:20.310 [info] Latest entries: [%KvStore.CacheEntry{object: 134, context: %KvStore.Context{vector_clock: %{a: 15515}}}]

11:37:20.310 [info] generate requests

11:37:20.310 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4655, key: "3", object: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}], sender: :a, type: :get_log}

11:37:20.310 [info] Send request {:get, "3"}

11:37:20.311 [info] Receive response of 4656 from a with [%KvStore.CacheEntry{object: 134, context: %KvStore.Context{vector_clock: %{a: 15515}}}]

11:37:20.311 [info] lb receive get from :client_b (4657)

11:37:20.311 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4656, key: "4", object: [%KvStore.CacheEntry{object: 134, context: %KvStore.Context{vector_clock: %{a: 15515}}}], sender: :a, type: :get_log}

11:37:20.311 [info] Send request {:get, "1"}

11:37:20.311 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4658, observer: :observer}

11:37:20.312 [info] lb receive get from :client_a (4658)

11:37:20.312 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 4657}

11:37:20.312 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4659, observer: :observer}

11:37:20.313 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 4658}

11:37:20.313 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}]

11:37:20.314 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}]

11:37:20.316 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}], type: :get_response, req_id: 4657}}

11:37:20.316 [info] Latest entries: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}]

11:37:20.317 [info] Receive response of 4657 from a with [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}]

11:37:20.317 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4657, key: "3", object: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}], sender: :a, type: :get_log}

11:37:20.317 [info] Send request {:put, "2", 538, []}

11:37:20.318 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}], type: :get_response, req_id: 4658}}

11:37:20.318 [info] Latest entries: [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}]

11:37:20.318 [info] Receive response of 4658 from a with [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}]

11:37:20.318 [info] Send request {:put, "4", 795, []}

11:37:20.318 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4658, key: "1", object: [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}], sender: :a, type: :get_log}

11:37:20.318 [info] lb receive put from :client_b

11:37:20.318 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4660, observer: :observer}

11:37:20.320 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 538, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 4659}

11:37:20.321 [info] New objects are [%KvStore.CacheEntry{object: 538, context: %KvStore.Context{vector_clock: %{a: 15542}}}]

11:37:20.321 [info] lb receive put from :client_a

11:37:20.321 [warning] :a Timeout for request: 4623

11:37:20.321 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4661, observer: :observer}

11:37:20.321 [warning] :a Timeout for request: 4623, but request not found.

11:37:20.322 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 795, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 4660}

11:37:20.323 [info] Receive response of 4659 from a with context: %KvStore.Context{vector_clock: %{a: 15542}}

11:37:20.323 [info] New objects are [%KvStore.CacheEntry{object: 795, context: %KvStore.Context{vector_clock: %{a: 15546}}}]

11:37:20.323 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4659, key: "2", object: 538, sender: :a, type: :put_log}

11:37:20.323 [info] Send request {:get, "5"}

11:37:20.324 [info] lb receive get from :client_b (4661)

11:37:20.324 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4662, observer: :observer}

11:37:20.325 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 4661}

11:37:20.325 [info] Receive response of 4660 from a with context: %KvStore.Context{vector_clock: %{a: 15546}}

11:37:20.325 [info] generate requests

11:37:20.325 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4660, key: "4", object: 795, sender: :a, type: :put_log}

11:37:20.325 [info] Send request {:get, "4"}

11:37:20.326 [info] lb receive get from :client_a (4662)

11:37:20.326 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 837, context: %KvStore.Context{vector_clock: %{a: 15509}}}]

11:37:20.326 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4663, observer: :observer}

11:37:20.327 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 4662}

11:37:20.327 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 837, context: %KvStore.Context{vector_clock: %{a: 15509}}}], type: :get_response, req_id: 4661}}

11:37:20.327 [info] Latest entries: [%KvStore.CacheEntry{object: 837, context: %KvStore.Context{vector_clock: %{a: 15509}}}]

11:37:20.328 [info] Receive response of 4661 from a with [%KvStore.CacheEntry{object: 837, context: %KvStore.Context{vector_clock: %{a: 15509}}}]

11:37:20.328 [info] generate requests

11:37:20.328 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4661, key: "5", object: [%KvStore.CacheEntry{object: 837, context: %KvStore.Context{vector_clock: %{a: 15509}}}], sender: :a, type: :get_log}

11:37:20.328 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 795, context: %KvStore.Context{vector_clock: %{a: 15546}}}]

11:37:20.328 [info] Send request {:put, "4", 705, []}

11:37:20.328 [warning] :a Timeout for request: 4626

11:37:20.328 [warning] :a Timeout for request: 4626, but request not found.

11:37:20.329 [info] lb receive put from :client_b

11:37:20.329 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 795, context: %KvStore.Context{vector_clock: %{a: 15546}}}], type: :get_response, req_id: 4662}}

11:37:20.329 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4664, observer: :observer}

11:37:20.329 [info] Latest entries: [%KvStore.CacheEntry{object: 795, context: %KvStore.Context{vector_clock: %{a: 15546}}}]

11:37:20.330 [info] Receive response of 4662 from a with [%KvStore.CacheEntry{object: 795, context: %KvStore.Context{vector_clock: %{a: 15546}}}]

11:37:20.330 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4662, key: "4", object: [%KvStore.CacheEntry{object: 795, context: %KvStore.Context{vector_clock: %{a: 15546}}}], sender: :a, type: :get_log}

11:37:20.330 [info] Send request {:get, "1"}

11:37:20.330 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 705, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 4663}

11:37:20.330 [warning] :a Timeout for request: 4627

11:37:20.330 [warning] :a Timeout for request: 4627, but request not found.

11:37:20.331 [info] lb receive get from :client_a (4664)

11:37:20.331 [info] New objects are [%KvStore.CacheEntry{object: 705, context: %KvStore.Context{vector_clock: %{a: 15556}}}]

11:37:20.331 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4665, observer: :observer}

11:37:20.332 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 4664}

11:37:20.333 [info] Receive response of 4663 from a with context: %KvStore.Context{vector_clock: %{a: 15556}}

11:37:20.333 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4663, key: "4", object: 705, sender: :a, type: :put_log}

11:37:20.333 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}]

11:37:20.333 [info] Send request {:get, "3"}

11:37:20.333 [warning] :a Timeout for request: 4628

11:37:20.333 [warning] :a Timeout for request: 4628, but request not found.

11:37:20.334 [info] lb receive get from :client_b (4665)

11:37:20.334 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}], type: :get_response, req_id: 4664}}

11:37:20.334 [info] Latest entries: [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}]

11:37:20.334 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4666, observer: :observer}

11:37:20.335 [info] Receive response of 4664 from a with [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}]

11:37:20.335 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 4665}

11:37:20.335 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4664, key: "1", object: [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}], sender: :a, type: :get_log}

11:37:20.335 [info] Send request {:put, "4", 333, []}

11:37:20.336 [info] lb receive put from :client_a

11:37:20.336 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}]

11:37:20.336 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4667, observer: :observer}

11:37:20.337 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}], type: :get_response, req_id: 4665}}

11:37:20.337 [info] Latest entries: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}]

11:37:20.337 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 333, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 4666}

11:37:20.338 [info] New objects are [%KvStore.CacheEntry{object: 333, context: %KvStore.Context{vector_clock: %{a: 15567}}}]

11:37:20.338 [info] Receive response of 4665 from a with [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}]

11:37:20.338 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4665, key: "3", object: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}], sender: :a, type: :get_log}

11:37:20.338 [info] Send request {:get, "2"}

11:37:20.339 [info] lb receive get from :client_b (4667)

11:37:20.339 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4668, observer: :observer}

11:37:20.340 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 4667}

11:37:20.340 [info] Receive response of 4666 from a with context: %KvStore.Context{vector_clock: %{a: 15567}}

11:37:20.340 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4666, key: "4", object: 333, sender: :a, type: :put_log}

11:37:20.340 [info] generate requests

11:37:20.340 [info] Send request {:get, "5"}

11:37:20.341 [info] lb receive get from :client_a (4668)

11:37:20.341 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 538, context: %KvStore.Context{vector_clock: %{a: 15542}}}]

11:37:20.341 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4669, observer: :observer}

11:37:20.342 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 4668}

11:37:20.342 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 538, context: %KvStore.Context{vector_clock: %{a: 15542}}}], type: :get_response, req_id: 4667}}

11:37:20.342 [info] Latest entries: [%KvStore.CacheEntry{object: 538, context: %KvStore.Context{vector_clock: %{a: 15542}}}]

11:37:20.343 [info] Receive response of 4667 from a with [%KvStore.CacheEntry{object: 538, context: %KvStore.Context{vector_clock: %{a: 15542}}}]

11:37:20.343 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4667, key: "2", object: [%KvStore.CacheEntry{object: 538, context: %KvStore.Context{vector_clock: %{a: 15542}}}], sender: :a, type: :get_log}

11:37:20.343 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 837, context: %KvStore.Context{vector_clock: %{a: 15509}}}]

11:37:20.343 [info] generate requests

11:37:20.343 [info] Send request {:get, "3"}

11:37:20.344 [info] lb receive get from :client_b (4669)

11:37:20.344 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 837, context: %KvStore.Context{vector_clock: %{a: 15509}}}], type: :get_response, req_id: 4668}}

11:37:20.344 [info] Latest entries: [%KvStore.CacheEntry{object: 837, context: %KvStore.Context{vector_clock: %{a: 15509}}}]

11:37:20.344 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4670, observer: :observer}

11:37:20.345 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4668, key: "5", object: [%KvStore.CacheEntry{object: 837, context: %KvStore.Context{vector_clock: %{a: 15509}}}], sender: :a, type: :get_log}

11:37:20.345 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 4669}

11:37:20.345 [info] Receive response of 4668 from a with [%KvStore.CacheEntry{object: 837, context: %KvStore.Context{vector_clock: %{a: 15509}}}]

11:37:20.345 [info] Send request {:get, "3"}

11:37:20.346 [info] lb receive get from :client_a (4670)

11:37:20.346 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}]

11:37:20.346 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4671, observer: :observer}

11:37:20.347 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}], type: :get_response, req_id: 4669}}

11:37:20.347 [info] Latest entries: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}]

11:37:20.347 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 4670}

11:37:20.348 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4669, key: "3", object: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}], sender: :a, type: :get_log}

11:37:20.348 [info] Receive response of 4669 from a with [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}]

11:37:20.348 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}]

11:37:20.348 [info] Send request {:put, "5", 646, []}

11:37:20.349 [info] lb receive put from :client_b

11:37:20.349 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}], type: :get_response, req_id: 4670}}

11:37:20.349 [info] Latest entries: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}]

11:37:20.349 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4672, observer: :observer}

11:37:20.350 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4670, key: "3", object: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}], sender: :a, type: :get_log}

11:37:20.350 [info] Receive response of 4670 from a with [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}]

11:37:20.350 [info] Send request {:put, "2", 707, []}

11:37:20.350 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 646, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 4671}

11:37:20.350 [warning] :a Timeout for request: 4635

11:37:20.350 [warning] :a Timeout for request: 4635, but request not found.

11:37:20.351 [info] lb receive put from :client_a

11:37:20.351 [info] New objects are [%KvStore.CacheEntry{object: 646, context: %KvStore.Context{vector_clock: %{a: 15582}}}]

11:37:20.351 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4673, observer: :observer}

11:37:20.352 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 707, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 4672}

11:37:20.353 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4671, key: "5", object: 646, sender: :a, type: :put_log}

11:37:20.353 [info] Receive response of 4671 from a with context: %KvStore.Context{vector_clock: %{a: 15582}}

11:37:20.353 [info] New objects are [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15585}}}]

11:37:20.353 [info] Send request {:get, "1"}

11:37:20.353 [warning] :a Timeout for request: 4636

11:37:20.353 [warning] :a Timeout for request: 4636, but request not found.

11:37:20.354 [info] lb receive get from :client_b (4673)

11:37:20.354 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4674, observer: :observer}

11:37:20.355 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4672, key: "2", object: 707, sender: :a, type: :put_log}

11:37:20.355 [info] Receive response of 4672 from a with context: %KvStore.Context{vector_clock: %{a: 15585}}

11:37:20.355 [info] generate requests

11:37:20.355 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 4673}

11:37:20.355 [info] Send request {:put, "4", 897, []}

11:37:20.356 [info] lb receive put from :client_a

11:37:20.356 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}]

11:37:20.356 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4675, observer: :observer}

11:37:20.357 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}], type: :get_response, req_id: 4673}}

11:37:20.357 [info] Latest entries: [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}]

11:37:20.357 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 897, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 4674}

11:37:20.358 [info] Receive response of 4673 from a with [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}]

11:37:20.358 [info] New objects are [%KvStore.CacheEntry{object: 897, context: %KvStore.Context{vector_clock: %{a: 15593}}}]

11:37:20.358 [info] generate requests

11:37:20.358 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4673, key: "1", object: [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}], sender: :a, type: :get_log}

11:37:20.358 [info] Send request {:get, "4"}

11:37:20.359 [info] lb receive get from :client_b (4675)

11:37:20.359 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4676, observer: :observer}

11:37:20.360 [info] Receive response of 4674 from a with context: %KvStore.Context{vector_clock: %{a: 15593}}

11:37:20.360 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 4675}

11:37:20.360 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4674, key: "4", object: 897, sender: :a, type: :put_log}

11:37:20.360 [info] Send request {:get, "5"}

11:37:20.361 [info] lb receive get from :client_a (4676)

11:37:20.361 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 897, context: %KvStore.Context{vector_clock: %{a: 15593}}}]

11:37:20.361 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4677, observer: :observer}

11:37:20.362 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 4676}

11:37:20.362 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 897, context: %KvStore.Context{vector_clock: %{a: 15593}}}], type: :get_response, req_id: 4675}}

11:37:20.362 [info] Latest entries: [%KvStore.CacheEntry{object: 897, context: %KvStore.Context{vector_clock: %{a: 15593}}}]

11:37:20.363 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4675, key: "4", object: [%KvStore.CacheEntry{object: 897, context: %KvStore.Context{vector_clock: %{a: 15593}}}], sender: :a, type: :get_log}

11:37:20.363 [info] Receive response of 4675 from a with [%KvStore.CacheEntry{object: 897, context: %KvStore.Context{vector_clock: %{a: 15593}}}]

11:37:20.363 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 646, context: %KvStore.Context{vector_clock: %{a: 15582}}}]

11:37:20.363 [info] Send request {:get, "4"}

11:37:20.364 [info] lb receive get from :client_b (4677)

11:37:20.364 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 646, context: %KvStore.Context{vector_clock: %{a: 15582}}}], type: :get_response, req_id: 4676}}

11:37:20.364 [info] Latest entries: [%KvStore.CacheEntry{object: 646, context: %KvStore.Context{vector_clock: %{a: 15582}}}]

11:37:20.364 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4678, observer: :observer}

11:37:20.365 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 4677}

11:37:20.365 [info] Receive response of 4676 from a with [%KvStore.CacheEntry{object: 646, context: %KvStore.Context{vector_clock: %{a: 15582}}}]

11:37:20.365 [info] Send request {:get, "2"}

11:37:20.365 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4676, key: "5", object: [%KvStore.CacheEntry{object: 646, context: %KvStore.Context{vector_clock: %{a: 15582}}}], sender: :a, type: :get_log}

11:37:20.366 [info] lb receive get from :client_a (4678)

11:37:20.366 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 897, context: %KvStore.Context{vector_clock: %{a: 15593}}}]

11:37:20.366 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4679, observer: :observer}

11:37:20.367 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 4678}

11:37:20.367 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 897, context: %KvStore.Context{vector_clock: %{a: 15593}}}], type: :get_response, req_id: 4677}}

11:37:20.367 [info] Latest entries: [%KvStore.CacheEntry{object: 897, context: %KvStore.Context{vector_clock: %{a: 15593}}}]

11:37:20.368 [info] Receive response of 4677 from a with [%KvStore.CacheEntry{object: 897, context: %KvStore.Context{vector_clock: %{a: 15593}}}]

11:37:20.368 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4677, key: "4", object: [%KvStore.CacheEntry{object: 897, context: %KvStore.Context{vector_clock: %{a: 15593}}}], sender: :a, type: :get_log}

11:37:20.368 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15585}}}]

11:37:20.368 [info] Send request {:put, "2", 240, []}

11:37:20.369 [info] lb receive put from :client_b

11:37:20.369 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15585}}}], type: :get_response, req_id: 4678}}

11:37:20.369 [info] Latest entries: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15585}}}]

11:37:20.369 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4680, observer: :observer}

11:37:20.370 [info] Receive response of 4678 from a with [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15585}}}]

11:37:20.370 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4678, key: "2", object: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15585}}}], sender: :a, type: :get_log}

11:37:20.370 [info] generate requests

11:37:20.370 [info] Send request {:get, "2"}

11:37:20.370 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 240, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 4679}

11:37:20.370 [warning] :a Timeout for request: 4643

11:37:20.370 [warning] :a Timeout for request: 4643, but request not found.

11:37:20.371 [info] lb receive get from :client_a (4680)

11:37:20.371 [info] New objects are [%KvStore.CacheEntry{object: 240, context: %KvStore.Context{vector_clock: %{a: 15608}}}]

11:37:20.371 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4681, observer: :observer}

11:37:20.372 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 4680}

11:37:20.373 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4679, key: "2", object: 240, sender: :a, type: :put_log}

11:37:20.373 [info] Receive response of 4679 from a with context: %KvStore.Context{vector_clock: %{a: 15608}}

11:37:20.373 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 240, context: %KvStore.Context{vector_clock: %{a: 15608}}}]

11:37:20.373 [info] generate requests

11:37:20.373 [warning] :a Timeout for request: 4644

11:37:20.373 [warning] :a Timeout for request: 4644, but request not found.

11:37:20.373 [info] Send request {:put, "2", 73, []}

11:37:20.374 [info] lb receive put from :client_b

11:37:20.374 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 240, context: %KvStore.Context{vector_clock: %{a: 15608}}}], type: :get_response, req_id: 4680}}

11:37:20.374 [info] Latest entries: [%KvStore.CacheEntry{object: 240, context: %KvStore.Context{vector_clock: %{a: 15608}}}]

11:37:20.374 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4682, observer: :observer}

11:37:20.375 [info] Receive response of 4680 from a with [%KvStore.CacheEntry{object: 240, context: %KvStore.Context{vector_clock: %{a: 15608}}}]

11:37:20.375 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4680, key: "2", object: [%KvStore.CacheEntry{object: 240, context: %KvStore.Context{vector_clock: %{a: 15608}}}], sender: :a, type: :get_log}

11:37:20.375 [info] Send request {:get, "2"}

11:37:20.375 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 73, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 4681}

11:37:20.376 [info] lb receive get from :client_a (4682)

11:37:20.376 [info] New objects are [%KvStore.CacheEntry{object: 73, context: %KvStore.Context{vector_clock: %{a: 15616}}}]

11:37:20.376 [warning] :a Timeout for request: 4645

11:37:20.376 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4683, observer: :observer}

11:37:20.376 [warning] :a Timeout for request: 4645, but request not found.

11:37:20.377 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 4682}

11:37:20.378 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4681, key: "2", object: 73, sender: :a, type: :put_log}

11:37:20.378 [info] Receive response of 4681 from a with context: %KvStore.Context{vector_clock: %{a: 15616}}

11:37:20.378 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 73, context: %KvStore.Context{vector_clock: %{a: 15616}}}]

11:37:20.378 [info] Send request {:get, "1"}

11:37:20.379 [info] lb receive get from :client_b (4683)

11:37:20.379 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 73, context: %KvStore.Context{vector_clock: %{a: 15616}}}], type: :get_response, req_id: 4682}}

11:37:20.379 [info] Latest entries: [%KvStore.CacheEntry{object: 73, context: %KvStore.Context{vector_clock: %{a: 15616}}}]

11:37:20.379 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4684, observer: :observer}

11:37:20.380 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4682, key: "2", object: [%KvStore.CacheEntry{object: 73, context: %KvStore.Context{vector_clock: %{a: 15616}}}], sender: :a, type: :get_log}

11:37:20.380 [info] Receive response of 4682 from a with [%KvStore.CacheEntry{object: 73, context: %KvStore.Context{vector_clock: %{a: 15616}}}]

11:37:20.380 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 4683}

11:37:20.380 [info] Send request {:put, "5", 54, []}

11:37:20.381 [info] lb receive put from :client_a

11:37:20.381 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}]

11:37:20.381 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4685, observer: :observer}

11:37:20.382 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}], type: :get_response, req_id: 4683}}

11:37:20.382 [info] Latest entries: [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}]

11:37:20.382 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 54, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 4684}

11:37:20.383 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4683, key: "1", object: [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}], sender: :a, type: :get_log}

11:37:20.383 [info] Receive response of 4683 from a with [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}]

11:37:20.383 [info] New objects are [%KvStore.CacheEntry{object: 54, context: %KvStore.Context{vector_clock: %{a: 15626}}}]

11:37:20.383 [info] Send request {:get, "4"}

11:37:20.384 [info] lb receive get from :client_b (4685)

11:37:20.384 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4686, observer: :observer}

11:37:20.385 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 4685}

11:37:20.385 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4684, key: "5", object: 54, sender: :a, type: :put_log}

11:37:20.385 [info] Receive response of 4684 from a with context: %KvStore.Context{vector_clock: %{a: 15626}}

11:37:20.385 [info] generate requests

11:37:20.385 [info] Send request {:get, "1"}

11:37:20.386 [info] lb receive get from :client_a (4686)

11:37:20.386 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 897, context: %KvStore.Context{vector_clock: %{a: 15593}}}]

11:37:20.386 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4687, observer: :observer}

11:37:20.387 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 4686}

11:37:20.387 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 897, context: %KvStore.Context{vector_clock: %{a: 15593}}}], type: :get_response, req_id: 4685}}

11:37:20.387 [info] Latest entries: [%KvStore.CacheEntry{object: 897, context: %KvStore.Context{vector_clock: %{a: 15593}}}]

11:37:20.388 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4685, key: "4", object: [%KvStore.CacheEntry{object: 897, context: %KvStore.Context{vector_clock: %{a: 15593}}}], sender: :a, type: :get_log}

11:37:20.388 [info] Receive response of 4685 from a with [%KvStore.CacheEntry{object: 897, context: %KvStore.Context{vector_clock: %{a: 15593}}}]

11:37:20.388 [info] generate requests

11:37:20.388 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}]

11:37:20.388 [info] Send request {:get, "1"}

11:37:20.389 [info] lb receive get from :client_b (4687)

11:37:20.389 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}], type: :get_response, req_id: 4686}}

11:37:20.389 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4688, observer: :observer}

11:37:20.389 [info] Latest entries: [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}]

11:37:20.389 [warning] :a Timeout for request: 4650

11:37:20.389 [warning] :a Timeout for request: 4650, but request not found.

11:37:20.390 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 4687}

11:37:20.390 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4686, key: "1", object: [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}], sender: :a, type: :get_log}

11:37:20.390 [info] Receive response of 4686 from a with [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}]

11:37:20.390 [info] Send request {:get, "2"}

11:37:20.391 [info] lb receive get from :client_a (4688)

11:37:20.391 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}]

11:37:20.391 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4689, observer: :observer}

11:37:20.392 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}], type: :get_response, req_id: 4687}}

11:37:20.392 [info] Latest entries: [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}]

11:37:20.392 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 4688}

11:37:20.393 [info] Receive response of 4687 from a with [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}]

11:37:20.393 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4687, key: "1", object: [%KvStore.CacheEntry{object: 788, context: %KvStore.Context{vector_clock: %{a: 15484}}}], sender: :a, type: :get_log}

11:37:20.393 [info] Send request {:put, "1", 926, []}

11:37:20.393 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 73, context: %KvStore.Context{vector_clock: %{a: 15616}}}]

11:37:20.394 [info] lb receive put from :client_b

11:37:20.394 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 73, context: %KvStore.Context{vector_clock: %{a: 15616}}}], type: :get_response, req_id: 4688}}

11:37:20.394 [info] Latest entries: [%KvStore.CacheEntry{object: 73, context: %KvStore.Context{vector_clock: %{a: 15616}}}]

11:37:20.394 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4690, observer: :observer}

11:37:20.394 [warning] :a Timeout for request: 4652

11:37:20.394 [warning] :a Timeout for request: 4652, but request not found.

11:37:20.395 [info] Receive response of 4688 from a with [%KvStore.CacheEntry{object: 73, context: %KvStore.Context{vector_clock: %{a: 15616}}}]

11:37:20.395 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4688, key: "2", object: [%KvStore.CacheEntry{object: 73, context: %KvStore.Context{vector_clock: %{a: 15616}}}], sender: :a, type: :get_log}

11:37:20.395 [info] Send request {:put, "4", 172, []}

11:37:20.395 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 926, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 4689}

11:37:20.396 [info] New objects are [%KvStore.CacheEntry{object: 926, context: %KvStore.Context{vector_clock: %{a: 15643}}}]

11:37:20.396 [info] lb receive put from :client_a

11:37:20.396 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4691, observer: :observer}

11:37:20.397 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 172, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 4690}

11:37:20.398 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4689, key: "1", object: 926, sender: :a, type: :put_log}

11:37:20.398 [info] Receive response of 4689 from a with context: %KvStore.Context{vector_clock: %{a: 15643}}

11:37:20.398 [info] New objects are [%KvStore.CacheEntry{object: 172, context: %KvStore.Context{vector_clock: %{a: 15646}}}]

11:37:20.398 [info] Send request {:get, "2"}

11:37:20.399 [info] lb receive get from :client_b (4691)

11:37:20.399 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4692, observer: :observer}

11:37:20.400 [info] Receive response of 4690 from a with context: %KvStore.Context{vector_clock: %{a: 15646}}

11:37:20.400 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4690, key: "4", object: 172, sender: :a, type: :put_log}

11:37:20.400 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 4691}

11:37:20.400 [info] generate requests

11:37:20.400 [info] Send request {:put, "2", 559, []}

11:37:20.401 [info] lb receive put from :client_a

11:37:20.401 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 73, context: %KvStore.Context{vector_clock: %{a: 15616}}}]

11:37:20.401 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4693, observer: :observer}

11:37:20.402 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 73, context: %KvStore.Context{vector_clock: %{a: 15616}}}], type: :get_response, req_id: 4691}}

11:37:20.402 [info] Latest entries: [%KvStore.CacheEntry{object: 73, context: %KvStore.Context{vector_clock: %{a: 15616}}}]

11:37:20.402 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 559, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 4692}

11:37:20.403 [info] Receive response of 4691 from a with [%KvStore.CacheEntry{object: 73, context: %KvStore.Context{vector_clock: %{a: 15616}}}]

11:37:20.403 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4691, key: "2", object: [%KvStore.CacheEntry{object: 73, context: %KvStore.Context{vector_clock: %{a: 15616}}}], sender: :a, type: :get_log}

11:37:20.403 [info] New objects are [%KvStore.CacheEntry{object: 559, context: %KvStore.Context{vector_clock: %{a: 15652}}}]

11:37:20.403 [info] generate requests

11:37:20.403 [warning] :a Timeout for request: 4655

11:37:20.403 [warning] :a Timeout for request: 4655, but request not found.

11:37:20.403 [info] Send request {:get, "5"}

11:37:20.404 [info] lb receive get from :client_b (4693)

11:37:20.404 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4694, observer: :observer}

11:37:20.405 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4692, key: "2", object: 559, sender: :a, type: :put_log}

11:37:20.405 [info] Receive response of 4692 from a with context: %KvStore.Context{vector_clock: %{a: 15652}}

11:37:20.405 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 4693}

11:37:20.405 [info] Send request {:get, "3"}

11:37:20.406 [info] lb receive get from :client_a (4694)

11:37:20.406 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 54, context: %KvStore.Context{vector_clock: %{a: 15626}}}]

11:37:20.406 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4695, observer: :observer}

11:37:20.407 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 4694}

11:37:20.407 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 54, context: %KvStore.Context{vector_clock: %{a: 15626}}}], type: :get_response, req_id: 4693}}

11:37:20.407 [info] Latest entries: [%KvStore.CacheEntry{object: 54, context: %KvStore.Context{vector_clock: %{a: 15626}}}]

11:37:20.408 [info] Receive response of 4693 from a with [%KvStore.CacheEntry{object: 54, context: %KvStore.Context{vector_clock: %{a: 15626}}}]

11:37:20.408 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}]

11:37:20.408 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4693, key: "5", object: [%KvStore.CacheEntry{object: 54, context: %KvStore.Context{vector_clock: %{a: 15626}}}], sender: :a, type: :get_log}

11:37:20.408 [info] Send request {:put, "1", 982, []}

11:37:20.409 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}], type: :get_response, req_id: 4694}}

11:37:20.409 [info] Latest entries: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}]

11:37:20.409 [info] lb receive put from :client_b

11:37:20.409 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4696, observer: :observer}

11:37:20.410 [info] Receive response of 4694 from a with [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}]

11:37:20.410 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4694, key: "3", object: [%KvStore.CacheEntry{object: 707, context: %KvStore.Context{vector_clock: %{a: 15524}}}], sender: :a, type: :get_log}

11:37:20.410 [info] Send request {:get, "4"}

11:37:20.410 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 982, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 4695}

11:37:20.411 [info] lb receive get from :client_a (4696)

11:37:20.411 [info] New objects are [%KvStore.CacheEntry{object: 982, context: %KvStore.Context{vector_clock: %{a: 15662}}}]

11:37:20.411 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4697, observer: :observer}

11:37:20.412 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 4696}

11:37:20.413 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4695, key: "1", object: 982, sender: :a, type: :put_log}

11:37:20.413 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 172, context: %KvStore.Context{vector_clock: %{a: 15646}}}]

11:37:20.413 [info] Receive response of 4695 from a with context: %KvStore.Context{vector_clock: %{a: 15662}}

11:37:20.413 [info] Send request {:get, "2"}

11:37:20.414 [info] lb receive get from :client_b (4697)

11:37:20.414 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 172, context: %KvStore.Context{vector_clock: %{a: 15646}}}], type: :get_response, req_id: 4696}}

11:37:20.414 [info] Latest entries: [%KvStore.CacheEntry{object: 172, context: %KvStore.Context{vector_clock: %{a: 15646}}}]

11:37:20.414 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4698, observer: :observer}

11:37:20.415 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 4697}

11:37:20.415 [info] Receive response of 4696 from a with [%KvStore.CacheEntry{object: 172, context: %KvStore.Context{vector_clock: %{a: 15646}}}]

11:37:20.415 [info] generate requests

11:37:20.415 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4696, key: "4", object: [%KvStore.CacheEntry{object: 172, context: %KvStore.Context{vector_clock: %{a: 15646}}}], sender: :a, type: :get_log}

11:37:20.415 [info] Send request {:get, "2"}

11:37:20.416 [info] lb receive get from :client_a (4698)

11:37:20.416 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 559, context: %KvStore.Context{vector_clock: %{a: 15652}}}]

11:37:20.416 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4699, observer: :observer}

11:37:20.417 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 559, context: %KvStore.Context{vector_clock: %{a: 15652}}}], type: :get_response, req_id: 4697}}

11:37:20.417 [info] Latest entries: [%KvStore.CacheEntry{object: 559, context: %KvStore.Context{vector_clock: %{a: 15652}}}]

11:37:20.417 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 4698}

11:37:20.418 [info] Receive response of 4697 from a with [%KvStore.CacheEntry{object: 559, context: %KvStore.Context{vector_clock: %{a: 15652}}}]

11:37:20.418 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4697, key: "2", object: [%KvStore.CacheEntry{object: 559, context: %KvStore.Context{vector_clock: %{a: 15652}}}], sender: :a, type: :get_log}

11:37:20.418 [info] generate requests

11:37:20.418 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 559, context: %KvStore.Context{vector_clock: %{a: 15652}}}]

11:37:20.418 [info] Send request {:put, "5", 56, []}

11:37:20.419 [info] lb receive put from :client_b

11:37:20.419 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 559, context: %KvStore.Context{vector_clock: %{a: 15652}}}], type: :get_response, req_id: 4698}}

11:37:20.419 [info] Latest entries: [%KvStore.CacheEntry{object: 559, context: %KvStore.Context{vector_clock: %{a: 15652}}}]

11:37:20.419 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4700, observer: :observer}

11:37:20.420 [info] Receive response of 4698 from a with [%KvStore.CacheEntry{object: 559, context: %KvStore.Context{vector_clock: %{a: 15652}}}]

11:37:20.420 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4698, key: "2", object: [%KvStore.CacheEntry{object: 559, context: %KvStore.Context{vector_clock: %{a: 15652}}}], sender: :a, type: :get_log}

11:37:20.420 [info] Send request {:put, "3", 636, []}

11:37:20.420 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 56, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 4699}

11:37:20.421 [info] lb receive put from :client_a

11:37:20.421 [info] New objects are [%KvStore.CacheEntry{object: 56, context: %KvStore.Context{vector_clock: %{a: 15674}}}]

11:37:20.421 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4701, observer: :observer}

11:37:20.421 [warning] :a Timeout for request: 4660

11:37:20.421 [warning] :a Timeout for request: 4660, but request not found.

11:37:20.422 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 636, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 4700}

11:37:20.423 [info] Receive response of 4699 from a with context: %KvStore.Context{vector_clock: %{a: 15674}}

11:37:20.423 [info] New objects are [%KvStore.CacheEntry{object: 636, context: %KvStore.Context{vector_clock: %{a: 15677}}}]

11:37:20.423 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4699, key: "5", object: 56, sender: :a, type: :put_log}

11:37:20.423 [info] Send request {:get, "5"}

11:37:20.423 [warning] :a Timeout for request: 4661

11:37:20.423 [warning] :a Timeout for request: 4661, but request not found.

11:37:20.424 [info] lb receive get from :client_b (4701)

11:37:20.424 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4702, observer: :observer}

11:37:20.425 [info] Receive response of 4700 from a with context: %KvStore.Context{vector_clock: %{a: 15677}}

11:37:20.425 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 4701}

11:37:20.425 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4700, key: "3", object: 636, sender: :a, type: :put_log}

11:37:20.425 [info] Send request {:get, "2"}

11:37:20.426 [info] lb receive get from :client_a (4702)

11:37:20.426 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 56, context: %KvStore.Context{vector_clock: %{a: 15674}}}]

11:37:20.426 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4703, observer: :observer}

11:37:20.427 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 4702}

11:37:20.427 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 56, context: %KvStore.Context{vector_clock: %{a: 15674}}}], type: :get_response, req_id: 4701}}

11:37:20.427 [info] Latest entries: [%KvStore.CacheEntry{object: 56, context: %KvStore.Context{vector_clock: %{a: 15674}}}]

11:37:20.428 [info] Receive response of 4701 from a with [%KvStore.CacheEntry{object: 56, context: %KvStore.Context{vector_clock: %{a: 15674}}}]

11:37:20.428 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4701, key: "5", object: [%KvStore.CacheEntry{object: 56, context: %KvStore.Context{vector_clock: %{a: 15674}}}], sender: :a, type: :get_log}

11:37:20.428 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 559, context: %KvStore.Context{vector_clock: %{a: 15652}}}]

11:37:20.428 [info] Send request {:get, "5"}

11:37:20.429 [info] lb receive get from :client_b (4703)

11:37:20.429 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 559, context: %KvStore.Context{vector_clock: %{a: 15652}}}], type: :get_response, req_id: 4702}}

11:37:20.429 [info] Latest entries: [%KvStore.CacheEntry{object: 559, context: %KvStore.Context{vector_clock: %{a: 15652}}}]

11:37:20.429 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4704, observer: :observer}

11:37:20.430 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 4703}

11:37:20.430 [info] Receive response of 4702 from a with [%KvStore.CacheEntry{object: 559, context: %KvStore.Context{vector_clock: %{a: 15652}}}]

11:37:20.430 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4702, key: "2", object: [%KvStore.CacheEntry{object: 559, context: %KvStore.Context{vector_clock: %{a: 15652}}}], sender: :a, type: :get_log}

11:37:20.430 [info] generate requests

11:37:20.430 [info] Send request {:put, "3", 808, []}

11:37:20.431 [info] lb receive put from :client_a

11:37:20.431 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 56, context: %KvStore.Context{vector_clock: %{a: 15674}}}]

11:37:20.431 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4705, observer: :observer}

11:37:20.431 [warning] :a Timeout for request: 4664

11:37:20.431 [warning] :a Timeout for request: 4664, but request not found.

11:37:20.432 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 56, context: %KvStore.Context{vector_clock: %{a: 15674}}}], type: :get_response, req_id: 4703}}

11:37:20.432 [info] Latest entries: [%KvStore.CacheEntry{object: 56, context: %KvStore.Context{vector_clock: %{a: 15674}}}]

11:37:20.432 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 808, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 4704}

11:37:20.433 [info] New objects are [%KvStore.CacheEntry{object: 808, context: %KvStore.Context{vector_clock: %{a: 15692}}}]

11:37:20.433 [info] Receive response of 4703 from a with [%KvStore.CacheEntry{object: 56, context: %KvStore.Context{vector_clock: %{a: 15674}}}]

11:37:20.433 [info] generate requests

11:37:20.433 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4703, key: "5", object: [%KvStore.CacheEntry{object: 56, context: %KvStore.Context{vector_clock: %{a: 15674}}}], sender: :a, type: :get_log}

11:37:20.433 [info] Send request {:get, "5"}

11:37:20.434 [info] lb receive get from :client_b (4705)

11:37:20.434 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4706, observer: :observer}

11:37:20.435 [info] Receive response of 4704 from a with context: %KvStore.Context{vector_clock: %{a: 15692}}

11:37:20.435 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 4705}

11:37:20.435 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 4704, key: "3", object: 808, sender: :a, type: :put_log}

11:37:20.435 [info] Send request {:get, "4"}

11:37:20.436 [info] lb receive get from :client_a (4706)

11:37:20.436 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 56, context: %KvStore.Context{vector_clock: %{a: 15674}}}]

11:37:20.436 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4707, observer: :observer}

11:37:20.437 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 4706}

11:37:20.437 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 56, context: %KvStore.Context{vector_clock: %{a: 15674}}}], type: :get_response, req_id: 4705}}

11:37:20.437 [info] Latest entries: [%KvStore.CacheEntry{object: 56, context: %KvStore.Context{vector_clock: %{a: 15674}}}]

11:37:20.438 [info] Receive response of 4705 from a with [%KvStore.CacheEntry{object: 56, context: %KvStore.Context{vector_clock: %{a: 15674}}}]

11:37:20.438 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4705, key: "5", object: [%KvStore.CacheEntry{object: 56, context: %KvStore.Context{vector_clock: %{a: 15674}}}], sender: :a, type: :get_log}

11:37:20.438 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 172, context: %KvStore.Context{vector_clock: %{a: 15646}}}]

11:37:20.438 [info] Send request {:get, "3"}

11:37:20.438 [warning] :a Timeout for request: 4667

11:37:20.438 [warning] :a Timeout for request: 4667, but request not found.

11:37:20.439 [info] lb receive get from :client_b (4707)

11:37:20.439 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 172, context: %KvStore.Context{vector_clock: %{a: 15646}}}], type: :get_response, req_id: 4706}}

11:37:20.439 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 4708, observer: :observer}

11:37:20.439 [info] Latest entries: [%KvStore.CacheEntry{object: 172, context: %KvStore.Context{vector_clock: %{a: 15646}}}]

11:37:20.440 [info] Receive response of 4706 from a with [%KvStore.CacheEntry{object: 172, context: %KvStore.Context{vector_clock: %{a: 15646}}}]

11:37:20.440 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 4706, key: "4", object: [%KvStore.CacheEntry{object: 172, context: %KvStore.Context{vector_clock: %{a: 15646}}}], sender: :a, type: :get_log}

11:37:20.440 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 4707}

11:37:20.440 [info] Send request {:get, "1"}

11:37:21.303 [info] New objects are [%KvStore.CacheEntry{object: 117, context: %KvStore.Context{vector_clock: %{a: 16821}}}]

11:37:21.303 [info] lb receive get from :client_b (5043)

11:37:21.304 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5044, observer: :observer}

11:37:21.304 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 5043}

11:37:21.305 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5042, key: "2", object: 117, sender: :a, type: :put_log}

11:37:21.305 [info] Receive response of 5042 from a with context: %KvStore.Context{vector_clock: %{a: 16821}}

11:37:21.305 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 16801}}}]

11:37:21.305 [info] Send request {:get, "5"}

11:37:21.306 [info] lb receive get from :client_a (5044)

11:37:21.306 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 16801}}}], type: :get_response, req_id: 5043}}

11:37:21.306 [info] Latest entries: [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 16801}}}]

11:37:21.306 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5045, observer: :observer}

11:37:21.307 [info] Receive response of 5043 from a with [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 16801}}}]

11:37:21.307 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 5044}

11:37:21.307 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5043, key: "3", object: [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 16801}}}], sender: :a, type: :get_log}

11:37:21.307 [info] Send request {:put, "2", 927, []}

11:37:21.308 [info] lb receive put from :client_b

11:37:21.308 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16776}}}]

11:37:21.308 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5046, observer: :observer}

11:37:21.309 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 927, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5045}

11:37:21.309 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16776}}}], type: :get_response, req_id: 5044}}

11:37:21.309 [info] Latest entries: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16776}}}]

11:37:21.310 [info] Receive response of 5044 from a with [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16776}}}]

11:37:21.310 [info] New objects are [%KvStore.CacheEntry{object: 927, context: %KvStore.Context{vector_clock: %{a: 16829}}}]

11:37:21.310 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5044, key: "5", object: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16776}}}], sender: :a, type: :get_log}

11:37:21.310 [info] generate requests

11:37:21.310 [info] Send request {:get, "3"}

11:37:21.311 [info] lb receive get from :client_a (5046)

11:37:21.311 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5047, observer: :observer}

11:37:21.312 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5045, key: "2", object: 927, sender: :a, type: :put_log}

11:37:21.312 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 5046}

11:37:21.312 [info] Receive response of 5045 from a with context: %KvStore.Context{vector_clock: %{a: 16829}}

11:37:21.312 [info] generate requests

11:37:21.312 [info] Send request {:get, "2"}

11:37:21.313 [info] lb receive get from :client_b (5047)

11:37:21.313 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 16801}}}]

11:37:21.313 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5048, observer: :observer}

11:37:21.314 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 16801}}}], type: :get_response, req_id: 5046}}

11:37:21.314 [info] Latest entries: [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 16801}}}]

11:37:21.315 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 5047}

11:37:21.315 [warning] :a Timeout for request: 5008

11:37:21.315 [warning] :a Timeout for request: 5008, but request not found.

11:37:21.315 [info] Receive response of 5046 from a with [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 16801}}}]

11:37:21.315 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5046, key: "3", object: [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 16801}}}], sender: :a, type: :get_log}

11:37:21.315 [info] Send request {:get, "4"}

11:37:21.316 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 927, context: %KvStore.Context{vector_clock: %{a: 16829}}}]

11:37:21.316 [info] lb receive get from :client_a (5048)

11:37:21.316 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 927, context: %KvStore.Context{vector_clock: %{a: 16829}}}], type: :get_response, req_id: 5047}}

11:37:21.316 [info] Latest entries: [%KvStore.CacheEntry{object: 927, context: %KvStore.Context{vector_clock: %{a: 16829}}}]

11:37:21.316 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5049, observer: :observer}

11:37:21.317 [info] Receive response of 5047 from a with [%KvStore.CacheEntry{object: 927, context: %KvStore.Context{vector_clock: %{a: 16829}}}]

11:37:21.317 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5047, key: "2", object: [%KvStore.CacheEntry{object: 927, context: %KvStore.Context{vector_clock: %{a: 16829}}}], sender: :a, type: :get_log}

11:37:21.317 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 5048}

11:37:21.317 [info] Send request {:put, "4", 281, []}

11:37:21.317 [warning] :a Timeout for request: 5009

11:37:21.317 [warning] :a Timeout for request: 5009, but request not found.

11:37:21.318 [info] lb receive put from :client_b

11:37:21.318 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 988, context: %KvStore.Context{vector_clock: %{a: 16788}}}]

11:37:21.318 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5050, observer: :observer}

11:37:21.319 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 281, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5049}

11:37:21.319 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 988, context: %KvStore.Context{vector_clock: %{a: 16788}}}], type: :get_response, req_id: 5048}}

11:37:21.319 [info] Latest entries: [%KvStore.CacheEntry{object: 988, context: %KvStore.Context{vector_clock: %{a: 16788}}}]

11:37:21.320 [info] Receive response of 5048 from a with [%KvStore.CacheEntry{object: 988, context: %KvStore.Context{vector_clock: %{a: 16788}}}]

11:37:21.320 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5048, key: "4", object: [%KvStore.CacheEntry{object: 988, context: %KvStore.Context{vector_clock: %{a: 16788}}}], sender: :a, type: :get_log}

11:37:21.320 [info] New objects are [%KvStore.CacheEntry{object: 281, context: %KvStore.Context{vector_clock: %{a: 16843}}}]

11:37:21.320 [info] Send request {:put, "3", 592, []}

11:37:21.321 [info] lb receive put from :client_a

11:37:21.321 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5051, observer: :observer}

11:37:21.322 [info] Receive response of 5049 from a with context: %KvStore.Context{vector_clock: %{a: 16843}}

11:37:21.322 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5049, key: "4", object: 281, sender: :a, type: :put_log}

11:37:21.322 [info] Send request {:get, "3"}

11:37:21.322 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 592, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5050}

11:37:21.323 [info] lb receive get from :client_b (5051)

11:37:21.323 [info] New objects are [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.323 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5052, observer: :observer}

11:37:21.324 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 5051}

11:37:21.325 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5050, key: "3", object: 592, sender: :a, type: :put_log}

11:37:21.325 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.325 [info] Receive response of 5050 from a with context: %KvStore.Context{vector_clock: %{a: 16847}}

11:37:21.325 [info] generate requests

11:37:21.325 [info] Send request {:get, "1"}

11:37:21.326 [info] lb receive get from :client_a (5052)

11:37:21.326 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}], type: :get_response, req_id: 5051}}

11:37:21.326 [info] Latest entries: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.326 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5053, observer: :observer}

11:37:21.327 [info] Receive response of 5051 from a with [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.327 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5051, key: "3", object: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}], sender: :a, type: :get_log}

11:37:21.327 [info] generate requests

11:37:21.327 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 5052}

11:37:21.327 [info] Send request {:get, "1"}

11:37:21.329 [info] lb receive get from :client_b (5053)

11:37:21.329 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}]

11:37:21.329 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5054, observer: :observer}

11:37:21.329 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 5053}

11:37:21.329 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}], type: :get_response, req_id: 5052}}

11:37:21.329 [info] Latest entries: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}]

11:37:21.329 [warning] :a Timeout for request: 5014

11:37:21.329 [warning] :a Timeout for request: 5014, but request not found.

11:37:21.330 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5052, key: "1", object: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}], sender: :a, type: :get_log}

11:37:21.330 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}]

11:37:21.330 [info] Receive response of 5052 from a with [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}]

11:37:21.330 [info] Send request {:get, "1"}

11:37:21.331 [info] lb receive get from :client_a (5054)

11:37:21.331 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}], type: :get_response, req_id: 5053}}

11:37:21.331 [info] Latest entries: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}]

11:37:21.331 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5055, observer: :observer}

11:37:21.332 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5053, key: "1", object: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}], sender: :a, type: :get_log}

11:37:21.332 [info] Receive response of 5053 from a with [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}]

11:37:21.332 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 5054}

11:37:21.332 [info] Send request {:get, "5"}

11:37:21.332 [warning] :a Timeout for request: 5015

11:37:21.332 [warning] :a Timeout for request: 5015, but request not found.

11:37:21.333 [info] lb receive get from :client_b (5055)

11:37:21.333 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}]

11:37:21.333 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5056, observer: :observer}

11:37:21.334 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}], type: :get_response, req_id: 5054}}

11:37:21.334 [info] Latest entries: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}]

11:37:21.334 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 5055}

11:37:21.335 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5054, key: "1", object: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}], sender: :a, type: :get_log}

11:37:21.335 [info] Receive response of 5054 from a with [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}]

11:37:21.335 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16776}}}]

11:37:21.335 [info] Send request {:put, "2", 952, []}

11:37:21.336 [info] lb receive put from :client_a

11:37:21.336 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16776}}}], type: :get_response, req_id: 5055}}

11:37:21.336 [info] Latest entries: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16776}}}]

11:37:21.336 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5057, observer: :observer}

11:37:21.337 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5055, key: "5", object: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16776}}}], sender: :a, type: :get_log}

11:37:21.337 [info] Receive response of 5055 from a with [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16776}}}]

11:37:21.337 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 952, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5056}

11:37:21.337 [info] Send request {:put, "5", 72, []}

11:37:21.338 [info] New objects are [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 16867}}}]

11:37:21.338 [info] lb receive put from :client_b

11:37:21.338 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5058, observer: :observer}

11:37:21.339 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 72, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5057}

11:37:21.339 [warning] :a Timeout for request: 5018

11:37:21.339 [warning] :a Timeout for request: 5018, but request not found.

11:37:21.340 [info] Receive response of 5056 from a with context: %KvStore.Context{vector_clock: %{a: 16867}}

11:37:21.340 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5056, key: "2", object: 952, sender: :a, type: :put_log}

11:37:21.340 [info] generate requests

11:37:21.340 [info] New objects are [%KvStore.CacheEntry{object: 72, context: %KvStore.Context{vector_clock: %{a: 16870}}}]

11:37:21.340 [info] Send request {:put, "5", 661, []}

11:37:21.341 [info] lb receive put from :client_a

11:37:21.341 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5059, observer: :observer}

11:37:21.342 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5057, key: "5", object: 72, sender: :a, type: :put_log}

11:37:21.342 [info] Receive response of 5057 from a with context: %KvStore.Context{vector_clock: %{a: 16870}}

11:37:21.342 [info] generate requests

11:37:21.342 [info] Send request {:put, "5", 344, []}

11:37:21.342 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 661, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5058}

11:37:21.342 [warning] :a Timeout for request: 5019

11:37:21.342 [warning] :a Timeout for request: 5019, but request not found.

11:37:21.343 [info] New objects are [%KvStore.CacheEntry{object: 661, context: %KvStore.Context{vector_clock: %{a: 16874}}}]

11:37:21.343 [info] lb receive put from :client_b

11:37:21.343 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5060, observer: :observer}

11:37:21.344 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 344, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5059}

11:37:21.345 [info] New objects are [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}]

11:37:21.345 [info] Receive response of 5058 from a with context: %KvStore.Context{vector_clock: %{a: 16874}}

11:37:21.345 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5058, key: "5", object: 661, sender: :a, type: :put_log}

11:37:21.345 [info] Send request {:get, "2"}

11:37:21.346 [info] lb receive get from :client_a (5060)

11:37:21.346 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5061, observer: :observer}

11:37:21.347 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5059, key: "5", object: 344, sender: :a, type: :put_log}

11:37:21.347 [info] Receive response of 5059 from a with context: %KvStore.Context{vector_clock: %{a: 16877}}

11:37:21.347 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 5060}

11:37:21.347 [info] Send request {:get, "5"}

11:37:21.348 [info] lb receive get from :client_b (5061)

11:37:21.348 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 16867}}}]

11:37:21.348 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5062, observer: :observer}

11:37:21.349 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 5061}

11:37:21.349 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 16867}}}], type: :get_response, req_id: 5060}}

11:37:21.349 [info] Latest entries: [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 16867}}}]

11:37:21.350 [info] Receive response of 5060 from a with [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 16867}}}]

11:37:21.350 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}]

11:37:21.350 [info] Send request {:get, "5"}

11:37:21.350 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5060, key: "2", object: [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 16867}}}], sender: :a, type: :get_log}

11:37:21.351 [info] lb receive get from :client_a (5062)

11:37:21.351 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}], type: :get_response, req_id: 5061}}

11:37:21.351 [info] Latest entries: [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}]

11:37:21.351 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5063, observer: :observer}

11:37:21.352 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 5062}

11:37:21.352 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5061, key: "5", object: [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}], sender: :a, type: :get_log}

11:37:21.352 [info] Receive response of 5061 from a with [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}]

11:37:21.352 [info] Send request {:get, "4"}

11:37:21.353 [info] lb receive get from :client_b (5063)

11:37:21.353 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}]

11:37:21.353 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5064, observer: :observer}

11:37:21.354 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 5063}

11:37:21.354 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}], type: :get_response, req_id: 5062}}

11:37:21.354 [info] Latest entries: [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}]

11:37:21.355 [info] Receive response of 5062 from a with [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}]

11:37:21.355 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5062, key: "5", object: [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}], sender: :a, type: :get_log}

11:37:21.355 [info] generate requests

11:37:21.355 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 281, context: %KvStore.Context{vector_clock: %{a: 16843}}}]

11:37:21.355 [info] Send request {:get, "5"}

11:37:21.356 [info] lb receive get from :client_a (5064)

11:37:21.356 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 281, context: %KvStore.Context{vector_clock: %{a: 16843}}}], type: :get_response, req_id: 5063}}

11:37:21.356 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5065, observer: :observer}

11:37:21.356 [info] Latest entries: [%KvStore.CacheEntry{object: 281, context: %KvStore.Context{vector_clock: %{a: 16843}}}]

11:37:21.357 [info] Receive response of 5063 from a with [%KvStore.CacheEntry{object: 281, context: %KvStore.Context{vector_clock: %{a: 16843}}}]

11:37:21.357 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5063, key: "4", object: [%KvStore.CacheEntry{object: 281, context: %KvStore.Context{vector_clock: %{a: 16843}}}], sender: :a, type: :get_log}

11:37:21.357 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 5064}

11:37:21.357 [info] generate requests

11:37:21.357 [info] Send request {:get, "3"}

11:37:21.358 [info] lb receive get from :client_b (5065)

11:37:21.358 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}]

11:37:21.358 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5066, observer: :observer}

11:37:21.359 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 5065}

11:37:21.359 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}], type: :get_response, req_id: 5064}}

11:37:21.359 [info] Latest entries: [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}]

11:37:21.359 [warning] :a Timeout for request: 5026

11:37:21.359 [warning] :a Timeout for request: 5026, but request not found.

11:37:21.360 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.360 [info] Receive response of 5064 from a with [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}]

11:37:21.360 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5064, key: "5", object: [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}], sender: :a, type: :get_log}

11:37:21.360 [info] Send request {:get, "3"}

11:37:21.361 [info] lb receive get from :client_a (5066)

11:37:21.361 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}], type: :get_response, req_id: 5065}}

11:37:21.361 [info] Latest entries: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.361 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5067, observer: :observer}

11:37:21.363 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5065, key: "3", object: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}], sender: :a, type: :get_log}

11:37:21.363 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 5066}

11:37:21.363 [info] Receive response of 5065 from a with [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.363 [warning] :a Timeout for request: 5027

11:37:21.363 [info] Send request {:get, "5"}

11:37:21.363 [warning] :a Timeout for request: 5027, but request not found.

11:37:21.364 [info] lb receive get from :client_b (5067)

11:37:21.364 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.364 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5068, observer: :observer}

11:37:21.365 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 5067}

11:37:21.365 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}], type: :get_response, req_id: 5066}}

11:37:21.365 [info] Latest entries: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.366 [info] Receive response of 5066 from a with [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.366 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5066, key: "3", object: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}], sender: :a, type: :get_log}

11:37:21.366 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}]

11:37:21.366 [info] Send request {:put, "4", 605, []}

11:37:21.367 [info] lb receive put from :client_a

11:37:21.367 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}], type: :get_response, req_id: 5067}}

11:37:21.367 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5069, observer: :observer}

11:37:21.367 [info] Latest entries: [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}]

11:37:21.368 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5067, key: "5", object: [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}], sender: :a, type: :get_log}

11:37:21.368 [info] Receive response of 5067 from a with [%KvStore.CacheEntry{object: 344, context: %KvStore.Context{vector_clock: %{a: 16877}}}]

11:37:21.368 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 605, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5068}

11:37:21.368 [info] Send request {:put, "4", 66, []}

11:37:21.369 [info] lb receive put from :client_b

11:37:21.369 [info] New objects are [%KvStore.CacheEntry{object: 605, context: %KvStore.Context{vector_clock: %{a: 16907}}}]

11:37:21.369 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5070, observer: :observer}

11:37:21.369 [warning] :a Timeout for request: 5030

11:37:21.369 [warning] :a Timeout for request: 5030, but request not found.

11:37:21.370 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 66, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5069}

11:37:21.371 [info] New objects are [%KvStore.CacheEntry{object: 66, context: %KvStore.Context{vector_clock: %{a: 16910}}}]

11:37:21.371 [info] Receive response of 5068 from a with context: %KvStore.Context{vector_clock: %{a: 16907}}

11:37:21.371 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5068, key: "4", object: 605, sender: :a, type: :put_log}

11:37:21.371 [info] generate requests

11:37:21.371 [info] Send request {:get, "2"}

11:37:21.372 [info] lb receive get from :client_a (5070)

11:37:21.372 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5071, observer: :observer}

11:37:21.373 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 5070}

11:37:21.373 [info] Receive response of 5069 from a with context: %KvStore.Context{vector_clock: %{a: 16910}}

11:37:21.373 [info] generate requests

11:37:21.373 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5069, key: "4", object: 66, sender: :a, type: :put_log}

11:37:21.373 [info] Send request {:get, "4"}

11:37:21.374 [info] lb receive get from :client_b (5071)

11:37:21.374 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5072, observer: :observer}

11:37:21.374 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 16867}}}]

11:37:21.375 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 5071}

11:37:21.375 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 16867}}}], type: :get_response, req_id: 5070}}

11:37:21.375 [info] Latest entries: [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 16867}}}]

11:37:21.376 [info] Receive response of 5070 from a with [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 16867}}}]

11:37:21.376 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 66, context: %KvStore.Context{vector_clock: %{a: 16910}}}]

11:37:21.376 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5070, key: "2", object: [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 16867}}}], sender: :a, type: :get_log}

11:37:21.376 [info] Send request {:put, "4", 974, []}

11:37:21.377 [info] lb receive put from :client_a

11:37:21.377 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 66, context: %KvStore.Context{vector_clock: %{a: 16910}}}], type: :get_response, req_id: 5071}}

11:37:21.377 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5073, observer: :observer}

11:37:21.377 [info] Latest entries: [%KvStore.CacheEntry{object: 66, context: %KvStore.Context{vector_clock: %{a: 16910}}}]

11:37:21.377 [warning] :a Timeout for request: 5033

11:37:21.377 [warning] :a Timeout for request: 5033, but request not found.

11:37:21.378 [info] Receive response of 5071 from a with [%KvStore.CacheEntry{object: 66, context: %KvStore.Context{vector_clock: %{a: 16910}}}]

11:37:21.378 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5071, key: "4", object: [%KvStore.CacheEntry{object: 66, context: %KvStore.Context{vector_clock: %{a: 16910}}}], sender: :a, type: :get_log}

11:37:21.378 [info] Send request {:put, "4", 142, []}

11:37:21.378 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 974, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5072}

11:37:21.379 [info] lb receive put from :client_b

11:37:21.379 [info] New objects are [%KvStore.CacheEntry{object: 974, context: %KvStore.Context{vector_clock: %{a: 16921}}}]

11:37:21.379 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5074, observer: :observer}

11:37:21.380 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 142, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5073}

11:37:21.381 [info] Receive response of 5072 from a with context: %KvStore.Context{vector_clock: %{a: 16921}}

11:37:21.381 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5072, key: "4", object: 974, sender: :a, type: :put_log}

11:37:21.381 [info] New objects are [%KvStore.CacheEntry{object: 142, context: %KvStore.Context{vector_clock: %{a: 16923}}}]

11:37:21.381 [info] Send request {:get, "4"}

11:37:21.382 [info] lb receive get from :client_a (5074)

11:37:21.382 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5075, observer: :observer}

11:37:21.383 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5073, key: "4", object: 142, sender: :a, type: :put_log}

11:37:21.383 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 5074}

11:37:21.383 [info] Receive response of 5073 from a with context: %KvStore.Context{vector_clock: %{a: 16923}}

11:37:21.383 [info] Send request {:get, "3"}

11:37:21.384 [info] lb receive get from :client_b (5075)

11:37:21.384 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 142, context: %KvStore.Context{vector_clock: %{a: 16923}}}]

11:37:21.384 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5076, observer: :observer}

11:37:21.385 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 5075}

11:37:21.385 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 142, context: %KvStore.Context{vector_clock: %{a: 16923}}}], type: :get_response, req_id: 5074}}

11:37:21.385 [info] Latest entries: [%KvStore.CacheEntry{object: 142, context: %KvStore.Context{vector_clock: %{a: 16923}}}]

11:37:21.386 [info] Receive response of 5074 from a with [%KvStore.CacheEntry{object: 142, context: %KvStore.Context{vector_clock: %{a: 16923}}}]

11:37:21.386 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5074, key: "4", object: [%KvStore.CacheEntry{object: 142, context: %KvStore.Context{vector_clock: %{a: 16923}}}], sender: :a, type: :get_log}

11:37:21.386 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.386 [info] generate requests

11:37:21.386 [info] Send request {:get, "2"}

11:37:21.388 [info] lb receive get from :client_a (5076)

11:37:21.388 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}], type: :get_response, req_id: 5075}}

11:37:21.388 [info] Latest entries: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.388 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5077, observer: :observer}

11:37:21.388 [warning] :a Timeout for request: 5037

11:37:21.388 [warning] :a Timeout for request: 5037, but request not found.

11:37:21.389 [info] Receive response of 5075 from a with [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.389 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5075, key: "3", object: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}], sender: :a, type: :get_log}

11:37:21.389 [info] generate requests

11:37:21.389 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 5076}

11:37:21.389 [info] Send request {:get, "4"}

11:37:21.390 [info] lb receive get from :client_b (5077)

11:37:21.390 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 16867}}}]

11:37:21.390 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5078, observer: :observer}

11:37:21.390 [warning] :a Timeout for request: 5038

11:37:21.390 [warning] :a Timeout for request: 5038, but request not found.

11:37:21.391 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 16867}}}], type: :get_response, req_id: 5076}}

11:37:21.391 [info] Latest entries: [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 16867}}}]

11:37:21.391 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 5077}

11:37:21.392 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 142, context: %KvStore.Context{vector_clock: %{a: 16923}}}]

11:37:21.392 [info] Receive response of 5076 from a with [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 16867}}}]

11:37:21.392 [info] Send request {:get, "1"}

11:37:21.392 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5076, key: "2", object: [%KvStore.CacheEntry{object: 952, context: %KvStore.Context{vector_clock: %{a: 16867}}}], sender: :a, type: :get_log}

11:37:21.393 [info] lb receive get from :client_a (5078)

11:37:21.393 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 142, context: %KvStore.Context{vector_clock: %{a: 16923}}}], type: :get_response, req_id: 5077}}

11:37:21.393 [info] Latest entries: [%KvStore.CacheEntry{object: 142, context: %KvStore.Context{vector_clock: %{a: 16923}}}]

11:37:21.393 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5079, observer: :observer}

11:37:21.394 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 5078}

11:37:21.394 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5077, key: "4", object: [%KvStore.CacheEntry{object: 142, context: %KvStore.Context{vector_clock: %{a: 16923}}}], sender: :a, type: :get_log}

11:37:21.394 [info] Receive response of 5077 from a with [%KvStore.CacheEntry{object: 142, context: %KvStore.Context{vector_clock: %{a: 16923}}}]

11:37:21.394 [info] Send request {:get, "3"}

11:37:21.395 [info] lb receive get from :client_b (5079)

11:37:21.395 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}]

11:37:21.395 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5080, observer: :observer}

11:37:21.396 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 5079}

11:37:21.396 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}], type: :get_response, req_id: 5078}}

11:37:21.397 [info] Latest entries: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}]

11:37:21.397 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5078, key: "1", object: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}], sender: :a, type: :get_log}

11:37:21.397 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.397 [info] Receive response of 5078 from a with [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}]

11:37:21.397 [info] Send request {:put, "5", 712, []}

11:37:21.398 [info] lb receive put from :client_a

11:37:21.398 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}], type: :get_response, req_id: 5079}}

11:37:21.398 [info] Latest entries: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.398 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5081, observer: :observer}

11:37:21.399 [info] Receive response of 5079 from a with [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.399 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5079, key: "3", object: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}], sender: :a, type: :get_log}

11:37:21.399 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 712, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5080}

11:37:21.399 [info] Send request {:put, "4", 907, []}

11:37:21.400 [info] lb receive put from :client_b

11:37:21.400 [info] New objects are [%KvStore.CacheEntry{object: 712, context: %KvStore.Context{vector_clock: %{a: 16947}}}]

11:37:21.400 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5082, observer: :observer}

11:37:21.401 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 907, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5081}

11:37:21.402 [info] Receive response of 5080 from a with context: %KvStore.Context{vector_clock: %{a: 16947}}

11:37:21.402 [info] New objects are [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}]

11:37:21.402 [info] generate requests

11:37:21.402 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5080, key: "5", object: 712, sender: :a, type: :put_log}

11:37:21.402 [info] Send request {:get, "4"}

11:37:21.403 [info] lb receive get from :client_a (5082)

11:37:21.403 [warning] :a Timeout for request: 5043

11:37:21.403 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5083, observer: :observer}

11:37:21.403 [warning] :a Timeout for request: 5043, but request not found.

11:37:21.404 [info] Receive response of 5081 from a with context: %KvStore.Context{vector_clock: %{a: 16949}}

11:37:21.404 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5081, key: "4", object: 907, sender: :a, type: :put_log}

11:37:21.404 [info] generate requests

11:37:21.404 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 5082}

11:37:21.404 [info] Send request {:get, "3"}

11:37:21.405 [info] lb receive get from :client_b (5083)

11:37:21.405 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}]

11:37:21.405 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5084, observer: :observer}

11:37:21.406 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}], type: :get_response, req_id: 5082}}

11:37:21.406 [info] Latest entries: [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}]

11:37:21.406 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 5083}

11:37:21.407 [info] Receive response of 5082 from a with [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}]

11:37:21.407 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5082, key: "4", object: [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}], sender: :a, type: :get_log}

11:37:21.407 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.407 [info] Send request {:get, "1"}

11:37:21.408 [info] lb receive get from :client_a (5084)

11:37:21.408 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}], type: :get_response, req_id: 5083}}

11:37:21.408 [info] Latest entries: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.408 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5085, observer: :observer}

11:37:21.409 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 5084}

11:37:21.409 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5083, key: "3", object: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}], sender: :a, type: :get_log}

11:37:21.409 [info] Receive response of 5083 from a with [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.409 [info] Send request {:put, "5", 580, []}

11:37:21.410 [info] lb receive put from :client_b

11:37:21.410 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}]

11:37:21.410 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5086, observer: :observer}

11:37:21.410 [warning] :a Timeout for request: 5046

11:37:21.410 [warning] :a Timeout for request: 5046, but request not found.

11:37:21.411 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}], type: :get_response, req_id: 5084}}

11:37:21.411 [info] Latest entries: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}]

11:37:21.411 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 580, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5085}

11:37:21.412 [info] New objects are [%KvStore.CacheEntry{object: 580, context: %KvStore.Context{vector_clock: %{a: 16964}}}]

11:37:21.412 [info] Receive response of 5084 from a with [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}]

11:37:21.412 [info] Send request {:put, "2", 724, []}

11:37:21.412 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5084, key: "1", object: [%KvStore.CacheEntry{object: 165, context: %KvStore.Context{vector_clock: %{a: 16767}}}], sender: :a, type: :get_log}

11:37:21.413 [info] lb receive put from :client_a

11:37:21.413 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5087, observer: :observer}

11:37:21.414 [info] Receive response of 5085 from a with context: %KvStore.Context{vector_clock: %{a: 16964}}

11:37:21.414 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5085, key: "5", object: 580, sender: :a, type: :put_log}

11:37:21.414 [info] Send request {:get, "5"}

11:37:21.414 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 724, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5086}

11:37:21.415 [info] lb receive get from :client_b (5087)

11:37:21.415 [info] New objects are [%KvStore.CacheEntry{object: 724, context: %KvStore.Context{vector_clock: %{a: 16967}}}]

11:37:21.415 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5088, observer: :observer}

11:37:21.416 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 5087}

11:37:21.417 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5086, key: "2", object: 724, sender: :a, type: :put_log}

11:37:21.417 [info] Receive response of 5086 from a with context: %KvStore.Context{vector_clock: %{a: 16967}}

11:37:21.417 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 580, context: %KvStore.Context{vector_clock: %{a: 16964}}}]

11:37:21.417 [info] generate requests

11:37:21.417 [info] Send request {:get, "4"}

11:37:21.418 [info] lb receive get from :client_a (5088)

11:37:21.418 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 580, context: %KvStore.Context{vector_clock: %{a: 16964}}}], type: :get_response, req_id: 5087}}

11:37:21.418 [info] Latest entries: [%KvStore.CacheEntry{object: 580, context: %KvStore.Context{vector_clock: %{a: 16964}}}]

11:37:21.418 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5089, observer: :observer}

11:37:21.419 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 5088}

11:37:21.419 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5087, key: "5", object: [%KvStore.CacheEntry{object: 580, context: %KvStore.Context{vector_clock: %{a: 16964}}}], sender: :a, type: :get_log}

11:37:21.419 [info] Receive response of 5087 from a with [%KvStore.CacheEntry{object: 580, context: %KvStore.Context{vector_clock: %{a: 16964}}}]

11:37:21.419 [info] generate requests

11:37:21.419 [info] Send request {:get, "5"}

11:37:21.420 [info] lb receive get from :client_b (5089)

11:37:21.420 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5090, observer: :observer}

11:37:21.420 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}]

11:37:21.420 [warning] :a Timeout for request: 5050

11:37:21.420 [warning] :a Timeout for request: 5050, but request not found.

11:37:21.421 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}], type: :get_response, req_id: 5088}}

11:37:21.421 [info] Latest entries: [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}]

11:37:21.421 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 5089}

11:37:21.422 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5088, key: "4", object: [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}], sender: :a, type: :get_log}

11:37:21.422 [info] Receive response of 5088 from a with [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}]

11:37:21.422 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 580, context: %KvStore.Context{vector_clock: %{a: 16964}}}]

11:37:21.422 [info] Send request {:get, "4"}

11:37:21.423 [info] lb receive get from :client_a (5090)

11:37:21.423 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 580, context: %KvStore.Context{vector_clock: %{a: 16964}}}], type: :get_response, req_id: 5089}}

11:37:21.423 [info] Latest entries: [%KvStore.CacheEntry{object: 580, context: %KvStore.Context{vector_clock: %{a: 16964}}}]

11:37:21.423 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5091, observer: :observer}

11:37:21.423 [warning] :a Timeout for request: 5051

11:37:21.423 [warning] :a Timeout for request: 5051, but request not found.

11:37:21.424 [info] Receive response of 5089 from a with [%KvStore.CacheEntry{object: 580, context: %KvStore.Context{vector_clock: %{a: 16964}}}]

11:37:21.424 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 5090}

11:37:21.424 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5089, key: "5", object: [%KvStore.CacheEntry{object: 580, context: %KvStore.Context{vector_clock: %{a: 16964}}}], sender: :a, type: :get_log}

11:37:21.424 [info] Send request {:put, "1", 382, []}

11:37:21.425 [info] lb receive put from :client_b

11:37:21.425 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}]

11:37:21.425 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5092, observer: :observer}

11:37:21.426 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}], type: :get_response, req_id: 5090}}

11:37:21.426 [info] Latest entries: [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}]

11:37:21.426 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 382, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5091}

11:37:21.427 [info] New objects are [%KvStore.CacheEntry{object: 382, context: %KvStore.Context{vector_clock: %{a: 16984}}}]

11:37:21.427 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5090, key: "4", object: [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}], sender: :a, type: :get_log}

11:37:21.427 [info] Receive response of 5090 from a with [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}]

11:37:21.427 [info] Send request {:put, "2", 339, []}

11:37:21.428 [info] lb receive put from :client_a

11:37:21.428 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5093, observer: :observer}

11:37:21.429 [info] Receive response of 5091 from a with context: %KvStore.Context{vector_clock: %{a: 16984}}

11:37:21.429 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5091, key: "1", object: 382, sender: :a, type: :put_log}

11:37:21.429 [info] Send request {:get, "4"}

11:37:21.429 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 339, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5092}

11:37:21.430 [info] lb receive get from :client_b (5093)

11:37:21.430 [info] New objects are [%KvStore.CacheEntry{object: 339, context: %KvStore.Context{vector_clock: %{a: 16987}}}]

11:37:21.430 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5094, observer: :observer}

11:37:21.431 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 5093}

11:37:21.432 [info] Receive response of 5092 from a with context: %KvStore.Context{vector_clock: %{a: 16987}}

11:37:21.432 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5092, key: "2", object: 339, sender: :a, type: :put_log}

11:37:21.432 [info] generate requests

11:37:21.432 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}]

11:37:21.432 [info] Send request {:put, "2", 100, []}

11:37:21.433 [info] lb receive put from :client_a

11:37:21.433 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}], type: :get_response, req_id: 5093}}

11:37:21.433 [info] Latest entries: [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}]

11:37:21.433 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5095, observer: :observer}

11:37:21.434 [info] Receive response of 5093 from a with [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}]

11:37:21.434 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 100, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5094}

11:37:21.434 [info] generate requests

11:37:21.434 [info] Send request {:get, "3"}

11:37:21.434 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5093, key: "4", object: [%KvStore.CacheEntry{object: 907, context: %KvStore.Context{vector_clock: %{a: 16949}}}], sender: :a, type: :get_log}

11:37:21.435 [info] New objects are [%KvStore.CacheEntry{object: 100, context: %KvStore.Context{vector_clock: %{a: 16993}}}]

11:37:21.435 [info] lb receive get from :client_b (5095)

11:37:21.435 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5096, observer: :observer}

11:37:21.436 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 5095}

11:37:21.437 [info] Receive response of 5094 from a with context: %KvStore.Context{vector_clock: %{a: 16993}}

11:37:21.437 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5094, key: "2", object: 100, sender: :a, type: :put_log}

11:37:21.437 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.437 [info] Send request {:get, "5"}

11:37:21.438 [info] lb receive get from :client_a (5096)

11:37:21.438 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}], type: :get_response, req_id: 5095}}

11:37:21.438 [info] Latest entries: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.438 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5097, observer: :observer}

11:37:21.438 [warning] :a Timeout for request: 5057

11:37:21.438 [warning] :a Timeout for request: 5057, but request not found.

11:37:21.439 [info] Receive response of 5095 from a with [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}]

11:37:21.439 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 5096}

11:37:21.439 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5095, key: "3", object: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}], sender: :a, type: :get_log}

11:37:21.439 [info] Send request {:put, "2", 444, []}

11:37:21.440 [info] lb receive put from :client_b

11:37:22.305 [info] lb receive put from :client_b

11:37:22.305 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 187, context: %KvStore.Context{vector_clock: %{a: 18031}}}]

11:37:22.305 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5434, observer: :observer}

11:37:22.305 [warning] :a Timeout for request: 5394

11:37:22.305 [warning] :a Timeout for request: 5394, but request not found.

11:37:22.306 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 560, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5433}

11:37:22.306 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 187, context: %KvStore.Context{vector_clock: %{a: 18031}}}], type: :get_response, req_id: 5432}}

11:37:22.306 [info] Latest entries: [%KvStore.CacheEntry{object: 187, context: %KvStore.Context{vector_clock: %{a: 18031}}}]

11:37:22.307 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5432, key: "3", object: [%KvStore.CacheEntry{object: 187, context: %KvStore.Context{vector_clock: %{a: 18031}}}], sender: :a, type: :get_log}

11:37:22.307 [info] New objects are [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}]

11:37:22.307 [info] Receive response of 5432 from a with [%KvStore.CacheEntry{object: 187, context: %KvStore.Context{vector_clock: %{a: 18031}}}]

11:37:22.307 [info] Send request {:get, "1"}

11:37:22.308 [info] lb receive get from :client_a (5434)

11:37:22.308 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5435, observer: :observer}

11:37:22.309 [info] Receive response of 5433 from a with context: %KvStore.Context{vector_clock: %{a: 18125}}

11:37:22.309 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 5434}

11:37:22.309 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5433, key: "4", object: 560, sender: :a, type: :put_log}

11:37:22.309 [info] Send request {:get, "2"}

11:37:22.310 [info] lb receive get from :client_b (5435)

11:37:22.310 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 380, context: %KvStore.Context{vector_clock: %{a: 18112}}}]

11:37:22.310 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5436, observer: :observer}

11:37:22.310 [warning] :a Timeout for request: 5396

11:37:22.310 [warning] :a Timeout for request: 5396, but request not found.

11:37:22.311 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 5435}

11:37:22.311 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 380, context: %KvStore.Context{vector_clock: %{a: 18112}}}], type: :get_response, req_id: 5434}}

11:37:22.311 [info] Latest entries: [%KvStore.CacheEntry{object: 380, context: %KvStore.Context{vector_clock: %{a: 18112}}}]

11:37:22.312 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5434, key: "1", object: [%KvStore.CacheEntry{object: 380, context: %KvStore.Context{vector_clock: %{a: 18112}}}], sender: :a, type: :get_log}

11:37:22.312 [info] Receive response of 5434 from a with [%KvStore.CacheEntry{object: 380, context: %KvStore.Context{vector_clock: %{a: 18112}}}]

11:37:22.312 [info] generate requests

11:37:22.312 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 450, context: %KvStore.Context{vector_clock: %{a: 18116}}}]

11:37:22.312 [info] Send request {:get, "4"}

11:37:22.313 [info] lb receive get from :client_a (5436)

11:37:22.313 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 450, context: %KvStore.Context{vector_clock: %{a: 18116}}}], type: :get_response, req_id: 5435}}

11:37:22.313 [info] Latest entries: [%KvStore.CacheEntry{object: 450, context: %KvStore.Context{vector_clock: %{a: 18116}}}]

11:37:22.313 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5437, observer: :observer}

11:37:22.313 [warning] :a Timeout for request: 5397

11:37:22.313 [warning] :a Timeout for request: 5397, but request not found.

11:37:22.314 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5435, key: "2", object: [%KvStore.CacheEntry{object: 450, context: %KvStore.Context{vector_clock: %{a: 18116}}}], sender: :a, type: :get_log}

11:37:22.314 [info] Receive response of 5435 from a with [%KvStore.CacheEntry{object: 450, context: %KvStore.Context{vector_clock: %{a: 18116}}}]

11:37:22.314 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 5436}

11:37:22.314 [info] generate requests

11:37:22.314 [info] Send request {:get, "3"}

11:37:22.315 [info] lb receive get from :client_b (5437)

11:37:22.315 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}]

11:37:22.315 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5438, observer: :observer}

11:37:22.317 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 5437}

11:37:22.317 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}], type: :get_response, req_id: 5436}}

11:37:22.317 [info] Latest entries: [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}]

11:37:22.318 [info] Receive response of 5436 from a with [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}]

11:37:22.318 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 187, context: %KvStore.Context{vector_clock: %{a: 18031}}}]

11:37:22.318 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5436, key: "4", object: [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}], sender: :a, type: :get_log}

11:37:22.318 [info] Send request {:put, "3", 941, []}

11:37:22.319 [info] lb receive put from :client_a

11:37:22.319 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 187, context: %KvStore.Context{vector_clock: %{a: 18031}}}], type: :get_response, req_id: 5437}}

11:37:22.319 [info] Latest entries: [%KvStore.CacheEntry{object: 187, context: %KvStore.Context{vector_clock: %{a: 18031}}}]

11:37:22.319 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5439, observer: :observer}

11:37:22.320 [info] Receive response of 5437 from a with [%KvStore.CacheEntry{object: 187, context: %KvStore.Context{vector_clock: %{a: 18031}}}]

11:37:22.320 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5437, key: "3", object: [%KvStore.CacheEntry{object: 187, context: %KvStore.Context{vector_clock: %{a: 18031}}}], sender: :a, type: :get_log}

11:37:22.320 [info] Send request {:get, "4"}

11:37:22.320 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 941, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5438}

11:37:22.321 [info] New objects are [%KvStore.CacheEntry{object: 941, context: %KvStore.Context{vector_clock: %{a: 18143}}}]

11:37:22.321 [info] lb receive get from :client_b (5439)

11:37:22.321 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5440, observer: :observer}

11:37:22.322 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 5439}

11:37:22.323 [info] Receive response of 5438 from a with context: %KvStore.Context{vector_clock: %{a: 18143}}

11:37:22.323 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5438, key: "3", object: 941, sender: :a, type: :put_log}

11:37:22.323 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}]

11:37:22.323 [info] Send request {:get, "5"}

11:37:22.323 [warning] :a Timeout for request: 5401

11:37:22.323 [warning] :a Timeout for request: 5401, but request not found.

11:37:22.324 [info] lb receive get from :client_a (5440)

11:37:22.324 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}], type: :get_response, req_id: 5439}}

11:37:22.324 [info] Latest entries: [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}]

11:37:22.324 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5441, observer: :observer}

11:37:22.325 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5439, key: "4", object: [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}], sender: :a, type: :get_log}

11:37:22.325 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 5440}

11:37:22.325 [info] Receive response of 5439 from a with [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}]

11:37:22.325 [info] Send request {:put, "1", 223, []}

11:37:22.326 [info] lb receive put from :client_b

11:37:22.326 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 573, context: %KvStore.Context{vector_clock: %{a: 18110}}}]

11:37:22.326 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5442, observer: :observer}

11:37:22.327 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 223, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5441}

11:37:22.327 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 573, context: %KvStore.Context{vector_clock: %{a: 18110}}}], type: :get_response, req_id: 5440}}

11:37:22.327 [info] Latest entries: [%KvStore.CacheEntry{object: 573, context: %KvStore.Context{vector_clock: %{a: 18110}}}]

11:37:22.328 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5440, key: "5", object: [%KvStore.CacheEntry{object: 573, context: %KvStore.Context{vector_clock: %{a: 18110}}}], sender: :a, type: :get_log}

11:37:22.328 [info] Receive response of 5440 from a with [%KvStore.CacheEntry{object: 573, context: %KvStore.Context{vector_clock: %{a: 18110}}}]

11:37:22.328 [info] generate requests

11:37:22.328 [info] New objects are [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}]

11:37:22.328 [info] Send request {:get, "4"}

11:37:22.329 [info] lb receive get from :client_a (5442)

11:37:22.329 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5443, observer: :observer}

11:37:22.330 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5441, key: "1", object: 223, sender: :a, type: :put_log}

11:37:22.330 [info] Receive response of 5441 from a with context: %KvStore.Context{vector_clock: %{a: 18152}}

11:37:22.330 [info] generate requests

11:37:22.330 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 5442}

11:37:22.330 [info] Send request {:get, "4"}

11:37:22.331 [info] lb receive get from :client_b (5443)

11:37:22.331 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}]

11:37:22.331 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5444, observer: :observer}

11:37:22.332 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 5443}

11:37:22.332 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}], type: :get_response, req_id: 5442}}

11:37:22.332 [info] Latest entries: [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}]

11:37:22.333 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5442, key: "4", object: [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}], sender: :a, type: :get_log}

11:37:22.333 [info] Receive response of 5442 from a with [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}]

11:37:22.333 [info] Send request {:get, "1"}

11:37:22.333 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}]

11:37:22.334 [info] lb receive get from :client_a (5444)

11:37:22.334 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}], type: :get_response, req_id: 5443}}

11:37:22.334 [info] Latest entries: [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}]

11:37:22.334 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5445, observer: :observer}

11:37:22.335 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 5444}

11:37:22.335 [info] Receive response of 5443 from a with [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}]

11:37:22.335 [info] Send request {:get, "3"}

11:37:22.335 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5443, key: "4", object: [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}], sender: :a, type: :get_log}

11:37:22.336 [info] lb receive get from :client_b (5445)

11:37:22.336 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}]

11:37:22.336 [warning] :a Timeout for request: 5406

11:37:22.336 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5446, observer: :observer}

11:37:22.336 [warning] :a Timeout for request: 5406, but request not found.

11:37:22.337 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}], type: :get_response, req_id: 5444}}

11:37:22.337 [info] Latest entries: [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}]

11:37:22.337 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 5445}

11:37:22.338 [info] Receive response of 5444 from a with [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}]

11:37:22.338 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5444, key: "1", object: [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}], sender: :a, type: :get_log}

11:37:22.338 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 941, context: %KvStore.Context{vector_clock: %{a: 18143}}}]

11:37:22.338 [info] Send request {:put, "2", 321, []}

11:37:22.339 [info] lb receive put from :client_a

11:37:22.339 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 941, context: %KvStore.Context{vector_clock: %{a: 18143}}}], type: :get_response, req_id: 5445}}

11:37:22.339 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5447, observer: :observer}

11:37:22.339 [info] Latest entries: [%KvStore.CacheEntry{object: 941, context: %KvStore.Context{vector_clock: %{a: 18143}}}]

11:37:22.340 [info] Receive response of 5445 from a with [%KvStore.CacheEntry{object: 941, context: %KvStore.Context{vector_clock: %{a: 18143}}}]

11:37:22.340 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5445, key: "3", object: [%KvStore.CacheEntry{object: 941, context: %KvStore.Context{vector_clock: %{a: 18143}}}], sender: :a, type: :get_log}

11:37:22.340 [info] Send request {:put, "2", 20, []}

11:37:22.340 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 321, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5446}

11:37:22.341 [info] lb receive put from :client_b

11:37:22.341 [info] New objects are [%KvStore.CacheEntry{object: 321, context: %KvStore.Context{vector_clock: %{a: 18169}}}]

11:37:22.341 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5448, observer: :observer}

11:37:22.341 [warning] :a Timeout for request: 5408

11:37:22.341 [warning] :a Timeout for request: 5408, but request not found.

11:37:22.342 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 20, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5447}

11:37:22.343 [info] New objects are [%KvStore.CacheEntry{object: 20, context: %KvStore.Context{vector_clock: %{a: 18172}}}]

11:37:22.343 [info] Receive response of 5446 from a with context: %KvStore.Context{vector_clock: %{a: 18169}}

11:37:22.343 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5446, key: "2", object: 321, sender: :a, type: :put_log}

11:37:22.343 [info] generate requests

11:37:22.343 [info] Send request {:get, "1"}

11:37:22.345 [info] lb receive get from :client_a (5448)

11:37:22.345 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5449, observer: :observer}

11:37:22.345 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5447, key: "2", object: 20, sender: :a, type: :put_log}

11:37:22.345 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 5448}

11:37:22.345 [info] Receive response of 5447 from a with context: %KvStore.Context{vector_clock: %{a: 18172}}

11:37:22.345 [info] generate requests

11:37:22.345 [info] Send request {:get, "1"}

11:37:22.346 [info] lb receive get from :client_b (5449)

11:37:22.346 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}]

11:37:22.346 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5450, observer: :observer}

11:37:22.347 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 5449}

11:37:22.347 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}], type: :get_response, req_id: 5448}}

11:37:22.347 [info] Latest entries: [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}]

11:37:22.348 [info] Receive response of 5448 from a with [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}]

11:37:22.348 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5448, key: "1", object: [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}], sender: :a, type: :get_log}

11:37:22.348 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}]

11:37:22.348 [info] Send request {:get, "2"}

11:37:22.349 [info] lb receive get from :client_a (5450)

11:37:22.349 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}], type: :get_response, req_id: 5449}}

11:37:22.349 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5451, observer: :observer}

11:37:22.349 [info] Latest entries: [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}]

11:37:22.350 [warning] :a Timeout for request: 5411

11:37:22.350 [warning] :a Timeout for request: 5411, but request not found.

11:37:22.350 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5449, key: "1", object: [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}], sender: :a, type: :get_log}

11:37:22.350 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 5450}

11:37:22.350 [info] Receive response of 5449 from a with [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}]

11:37:22.350 [info] Send request {:get, "1"}

11:37:22.351 [info] lb receive get from :client_b (5451)

11:37:22.351 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 20, context: %KvStore.Context{vector_clock: %{a: 18172}}}]

11:37:22.351 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5452, observer: :observer}

11:37:22.352 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 5451}

11:37:22.352 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 20, context: %KvStore.Context{vector_clock: %{a: 18172}}}], type: :get_response, req_id: 5450}}

11:37:22.352 [info] Latest entries: [%KvStore.CacheEntry{object: 20, context: %KvStore.Context{vector_clock: %{a: 18172}}}]

11:37:22.353 [info] Receive response of 5450 from a with [%KvStore.CacheEntry{object: 20, context: %KvStore.Context{vector_clock: %{a: 18172}}}]

11:37:22.353 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5450, key: "2", object: [%KvStore.CacheEntry{object: 20, context: %KvStore.Context{vector_clock: %{a: 18172}}}], sender: :a, type: :get_log}

11:37:22.353 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}]

11:37:22.353 [info] Send request {:put, "2", 481, []}

11:37:22.354 [info] lb receive put from :client_a

11:37:22.354 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}], type: :get_response, req_id: 5451}}

11:37:22.354 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5453, observer: :observer}

11:37:22.354 [info] Latest entries: [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}]

11:37:22.354 [warning] :a Timeout for request: 5413

11:37:22.355 [warning] :a Timeout for request: 5413, but request not found.

11:37:22.355 [info] Receive response of 5451 from a with [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}]

11:37:22.355 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5451, key: "1", object: [%KvStore.CacheEntry{object: 223, context: %KvStore.Context{vector_clock: %{a: 18152}}}], sender: :a, type: :get_log}

11:37:22.355 [info] Send request {:put, "3", 132, []}

11:37:22.355 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 481, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5452}

11:37:22.356 [info] New objects are [%KvStore.CacheEntry{object: 481, context: %KvStore.Context{vector_clock: %{a: 18190}}}]

11:37:22.356 [info] lb receive put from :client_b

11:37:22.356 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5454, observer: :observer}

11:37:22.357 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 132, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5453}

11:37:22.358 [info] Receive response of 5452 from a with context: %KvStore.Context{vector_clock: %{a: 18190}}

11:37:22.358 [info] New objects are [%KvStore.CacheEntry{object: 132, context: %KvStore.Context{vector_clock: %{a: 18192}}}]

11:37:22.358 [info] generate requests

11:37:22.358 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5452, key: "2", object: 481, sender: :a, type: :put_log}

11:37:22.358 [info] Send request {:put, "3", 800, []}

11:37:22.359 [info] lb receive put from :client_a

11:37:22.359 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5455, observer: :observer}

11:37:22.360 [info] Receive response of 5453 from a with context: %KvStore.Context{vector_clock: %{a: 18192}}

11:37:22.360 [info] generate requests

11:37:22.360 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5453, key: "3", object: 132, sender: :a, type: :put_log}

11:37:22.360 [info] Send request {:get, "3"}

11:37:22.360 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 800, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5454}

11:37:22.361 [info] lb receive get from :client_b (5455)

11:37:22.361 [info] New objects are [%KvStore.CacheEntry{object: 800, context: %KvStore.Context{vector_clock: %{a: 18196}}}]

11:37:22.361 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5456, observer: :observer}

11:37:22.361 [warning] :a Timeout for request: 5416

11:37:22.361 [warning] :a Timeout for request: 5416, but request not found.

11:37:22.362 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 5455}

11:37:22.363 [info] Receive response of 5454 from a with context: %KvStore.Context{vector_clock: %{a: 18196}}

11:37:22.363 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 800, context: %KvStore.Context{vector_clock: %{a: 18196}}}]

11:37:22.363 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5454, key: "3", object: 800, sender: :a, type: :put_log}

11:37:22.363 [info] Send request {:get, "2"}

11:37:22.364 [info] lb receive get from :client_a (5456)

11:37:22.364 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 800, context: %KvStore.Context{vector_clock: %{a: 18196}}}], type: :get_response, req_id: 5455}}

11:37:22.364 [info] Latest entries: [%KvStore.CacheEntry{object: 800, context: %KvStore.Context{vector_clock: %{a: 18196}}}]

11:37:22.364 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5457, observer: :observer}

11:37:22.365 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5455, key: "3", object: [%KvStore.CacheEntry{object: 800, context: %KvStore.Context{vector_clock: %{a: 18196}}}], sender: :a, type: :get_log}

11:37:22.365 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 5456}

11:37:22.365 [info] Receive response of 5455 from a with [%KvStore.CacheEntry{object: 800, context: %KvStore.Context{vector_clock: %{a: 18196}}}]

11:37:22.365 [info] Send request {:put, "5", 410, []}

11:37:22.366 [info] lb receive put from :client_b

11:37:22.366 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 481, context: %KvStore.Context{vector_clock: %{a: 18190}}}]

11:37:22.366 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5458, observer: :observer}

11:37:22.367 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 410, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5457}

11:37:22.367 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 481, context: %KvStore.Context{vector_clock: %{a: 18190}}}], type: :get_response, req_id: 5456}}

11:37:22.367 [info] Latest entries: [%KvStore.CacheEntry{object: 481, context: %KvStore.Context{vector_clock: %{a: 18190}}}]

11:37:22.368 [info] New objects are [%KvStore.CacheEntry{object: 410, context: %KvStore.Context{vector_clock: %{a: 18205}}}]

11:37:22.368 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5456, key: "2", object: [%KvStore.CacheEntry{object: 481, context: %KvStore.Context{vector_clock: %{a: 18190}}}], sender: :a, type: :get_log}

11:37:22.368 [info] Receive response of 5456 from a with [%KvStore.CacheEntry{object: 481, context: %KvStore.Context{vector_clock: %{a: 18190}}}]

11:37:22.368 [info] Send request {:get, "4"}

11:37:22.369 [info] lb receive get from :client_a (5458)

11:37:22.369 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5459, observer: :observer}

11:37:22.370 [info] Receive response of 5457 from a with context: %KvStore.Context{vector_clock: %{a: 18205}}

11:37:22.370 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5457, key: "5", object: 410, sender: :a, type: :put_log}

11:37:22.370 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 5458}

11:37:22.370 [info] Send request {:get, "2"}

11:37:22.371 [info] lb receive get from :client_b (5459)

11:37:22.371 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}]

11:37:22.371 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5460, observer: :observer}

11:37:22.372 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 5459}

11:37:22.372 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}], type: :get_response, req_id: 5458}}

11:37:22.372 [info] Latest entries: [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}]

11:37:22.373 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 481, context: %KvStore.Context{vector_clock: %{a: 18190}}}]

11:37:22.373 [info] Receive response of 5458 from a with [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}]

11:37:22.373 [info] generate requests

11:37:22.373 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5458, key: "4", object: [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}], sender: :a, type: :get_log}

11:37:22.373 [info] Send request {:put, "2", 733, []}

11:37:22.374 [info] lb receive put from :client_a

11:37:22.374 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 481, context: %KvStore.Context{vector_clock: %{a: 18190}}}], type: :get_response, req_id: 5459}}

11:37:22.374 [info] Latest entries: [%KvStore.CacheEntry{object: 481, context: %KvStore.Context{vector_clock: %{a: 18190}}}]

11:37:22.374 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5461, observer: :observer}

11:37:22.375 [info] Receive response of 5459 from a with [%KvStore.CacheEntry{object: 481, context: %KvStore.Context{vector_clock: %{a: 18190}}}]

11:37:22.375 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5459, key: "2", object: [%KvStore.CacheEntry{object: 481, context: %KvStore.Context{vector_clock: %{a: 18190}}}], sender: :a, type: :get_log}

11:37:22.375 [info] generate requests

11:37:22.375 [info] Send request {:put, "1", 810, []}

11:37:22.375 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 733, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5460}

11:37:22.376 [info] New objects are [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}]

11:37:22.376 [info] lb receive put from :client_b

11:37:22.376 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5462, observer: :observer}

11:37:22.377 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 810, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5461}

11:37:22.378 [info] Receive response of 5460 from a with context: %KvStore.Context{vector_clock: %{a: 18215}}

11:37:22.378 [info] New objects are [%KvStore.CacheEntry{object: 810, context: %KvStore.Context{vector_clock: %{a: 18218}}}]

11:37:22.378 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5460, key: "2", object: 733, sender: :a, type: :put_log}

11:37:22.378 [info] Send request {:get, "1"}

11:37:22.379 [info] lb receive get from :client_a (5462)

11:37:22.379 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5463, observer: :observer}

11:37:22.379 [warning] :a Timeout for request: 5423

11:37:22.379 [warning] :a Timeout for request: 5423, but request not found.

11:37:22.380 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5461, key: "1", object: 810, sender: :a, type: :put_log}

11:37:22.380 [info] Receive response of 5461 from a with context: %KvStore.Context{vector_clock: %{a: 18218}}

11:37:22.380 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 5462}

11:37:22.380 [info] Send request {:get, "2"}

11:37:22.381 [info] lb receive get from :client_b (5463)

11:37:22.381 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 810, context: %KvStore.Context{vector_clock: %{a: 18218}}}]

11:37:22.381 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5464, observer: :observer}

11:37:22.381 [warning] :a Timeout for request: 5424

11:37:22.381 [warning] :a Timeout for request: 5424, but request not found.

11:37:22.382 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 810, context: %KvStore.Context{vector_clock: %{a: 18218}}}], type: :get_response, req_id: 5462}}

11:37:22.382 [info] Latest entries: [%KvStore.CacheEntry{object: 810, context: %KvStore.Context{vector_clock: %{a: 18218}}}]

11:37:22.382 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 5463}

11:37:22.383 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5462, key: "1", object: [%KvStore.CacheEntry{object: 810, context: %KvStore.Context{vector_clock: %{a: 18218}}}], sender: :a, type: :get_log}

11:37:22.383 [info] Receive response of 5462 from a with [%KvStore.CacheEntry{object: 810, context: %KvStore.Context{vector_clock: %{a: 18218}}}]

11:37:22.383 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}]

11:37:22.383 [info] Send request {:get, "1"}

11:37:22.384 [info] lb receive get from :client_a (5464)

11:37:22.384 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}], type: :get_response, req_id: 5463}}

11:37:22.384 [info] Latest entries: [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}]

11:37:22.384 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5465, observer: :observer}

11:37:22.385 [info] Receive response of 5463 from a with [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}]

11:37:22.385 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 5464}

11:37:22.385 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5463, key: "2", object: [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}], sender: :a, type: :get_log}

11:37:22.385 [info] Send request {:get, "3"}

11:37:22.386 [info] lb receive get from :client_b (5465)

11:37:22.386 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 810, context: %KvStore.Context{vector_clock: %{a: 18218}}}]

11:37:22.386 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5466, observer: :observer}

11:37:22.387 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 5465}

11:37:22.387 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 810, context: %KvStore.Context{vector_clock: %{a: 18218}}}], type: :get_response, req_id: 5464}}

11:37:22.387 [info] Latest entries: [%KvStore.CacheEntry{object: 810, context: %KvStore.Context{vector_clock: %{a: 18218}}}]

11:37:22.388 [info] Receive response of 5464 from a with [%KvStore.CacheEntry{object: 810, context: %KvStore.Context{vector_clock: %{a: 18218}}}]

11:37:22.388 [info] generate requests

11:37:22.388 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5464, key: "1", object: [%KvStore.CacheEntry{object: 810, context: %KvStore.Context{vector_clock: %{a: 18218}}}], sender: :a, type: :get_log}

11:37:22.388 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 800, context: %KvStore.Context{vector_clock: %{a: 18196}}}]

11:37:22.388 [info] Send request {:get, "2"}

11:37:22.389 [info] lb receive get from :client_a (5466)

11:37:22.389 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 800, context: %KvStore.Context{vector_clock: %{a: 18196}}}], type: :get_response, req_id: 5465}}

11:37:22.389 [info] Latest entries: [%KvStore.CacheEntry{object: 800, context: %KvStore.Context{vector_clock: %{a: 18196}}}]

11:37:22.389 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5467, observer: :observer}

11:37:22.390 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 5466}

11:37:22.390 [info] Receive response of 5465 from a with [%KvStore.CacheEntry{object: 800, context: %KvStore.Context{vector_clock: %{a: 18196}}}]

11:37:22.390 [info] generate requests

11:37:22.390 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5465, key: "3", object: [%KvStore.CacheEntry{object: 800, context: %KvStore.Context{vector_clock: %{a: 18196}}}], sender: :a, type: :get_log}

11:37:22.390 [info] Send request {:get, "4"}

11:37:22.391 [info] lb receive get from :client_b (5467)

11:37:22.391 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}]

11:37:22.391 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5468, observer: :observer}

11:37:22.392 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 5467}

11:37:22.392 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}], type: :get_response, req_id: 5466}}

11:37:22.392 [info] Latest entries: [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}]

11:37:22.393 [info] Receive response of 5466 from a with [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}]

11:37:22.393 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5466, key: "2", object: [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}], sender: :a, type: :get_log}

11:37:22.393 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}]

11:37:22.393 [info] Send request {:put, "4", 261, []}

11:37:22.394 [info] lb receive put from :client_a

11:37:22.394 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}], type: :get_response, req_id: 5467}}

11:37:22.394 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5469, observer: :observer}

11:37:22.394 [info] Latest entries: [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}]

11:37:22.394 [warning] :a Timeout for request: 5429

11:37:22.394 [warning] :a Timeout for request: 5429, but request not found.

11:37:22.395 [info] Receive response of 5467 from a with [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}]

11:37:22.395 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5467, key: "4", object: [%KvStore.CacheEntry{object: 560, context: %KvStore.Context{vector_clock: %{a: 18125}}}], sender: :a, type: :get_log}

11:37:22.395 [info] Send request {:get, "2"}

11:37:22.395 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 261, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5468}

11:37:22.396 [info] lb receive get from :client_b (5469)

11:37:22.396 [info] New objects are [%KvStore.CacheEntry{object: 261, context: %KvStore.Context{vector_clock: %{a: 18242}}}]

11:37:22.396 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5470, observer: :observer}

11:37:22.396 [warning] :a Timeout for request: 5430

11:37:22.397 [warning] :a Timeout for request: 5430, but request not found.

11:37:22.397 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 5469}

11:37:22.398 [info] Receive response of 5468 from a with context: %KvStore.Context{vector_clock: %{a: 18242}}

11:37:22.398 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5468, key: "4", object: 261, sender: :a, type: :put_log}

11:37:22.398 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}]

11:37:22.398 [info] Send request {:get, "3"}

11:37:22.399 [info] lb receive get from :client_a (5470)

11:37:22.399 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}], type: :get_response, req_id: 5469}}

11:37:22.399 [info] Latest entries: [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}]

11:37:22.399 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5471, observer: :observer}

11:37:22.399 [warning] :a Timeout for request: 5431

11:37:22.399 [warning] :a Timeout for request: 5431, but request not found.

11:37:22.400 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 5470}

11:37:22.400 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5469, key: "2", object: [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}], sender: :a, type: :get_log}

11:37:22.400 [info] Receive response of 5469 from a with [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}]

11:37:22.400 [info] Send request {:put, "3", 819, []}

11:37:22.401 [info] lb receive put from :client_b

11:37:22.401 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 800, context: %KvStore.Context{vector_clock: %{a: 18196}}}]

11:37:22.401 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5472, observer: :observer}

11:37:22.402 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 819, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5471}

11:37:22.402 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 800, context: %KvStore.Context{vector_clock: %{a: 18196}}}], type: :get_response, req_id: 5470}}

11:37:22.402 [info] Latest entries: [%KvStore.CacheEntry{object: 800, context: %KvStore.Context{vector_clock: %{a: 18196}}}]

11:37:22.403 [info] New objects are [%KvStore.CacheEntry{object: 819, context: %KvStore.Context{vector_clock: %{a: 18252}}}]

11:37:22.403 [info] Receive response of 5470 from a with [%KvStore.CacheEntry{object: 800, context: %KvStore.Context{vector_clock: %{a: 18196}}}]

11:37:22.403 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5470, key: "3", object: [%KvStore.CacheEntry{object: 800, context: %KvStore.Context{vector_clock: %{a: 18196}}}], sender: :a, type: :get_log}

11:37:22.403 [info] generate requests

11:37:22.403 [info] Send request {:get, "5"}

11:37:22.404 [info] lb receive get from :client_a (5472)

11:37:22.404 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5473, observer: :observer}

11:37:22.405 [info] Receive response of 5471 from a with context: %KvStore.Context{vector_clock: %{a: 18252}}

11:37:22.405 [info] generate requests

11:37:22.405 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 5472}

11:37:22.405 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5471, key: "3", object: 819, sender: :a, type: :put_log}

11:37:22.405 [info] Send request {:get, "5"}

11:37:22.406 [info] lb receive get from :client_b (5473)

11:37:22.406 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 410, context: %KvStore.Context{vector_clock: %{a: 18205}}}]

11:37:22.406 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5474, observer: :observer}

11:37:22.407 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 5473}

11:37:22.407 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 410, context: %KvStore.Context{vector_clock: %{a: 18205}}}], type: :get_response, req_id: 5472}}

11:37:22.407 [info] Latest entries: [%KvStore.CacheEntry{object: 410, context: %KvStore.Context{vector_clock: %{a: 18205}}}]

11:37:22.407 [warning] :a Timeout for request: 5434

11:37:22.407 [warning] :a Timeout for request: 5434, but request not found.

11:37:22.408 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5472, key: "5", object: [%KvStore.CacheEntry{object: 410, context: %KvStore.Context{vector_clock: %{a: 18205}}}], sender: :a, type: :get_log}

11:37:22.408 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 410, context: %KvStore.Context{vector_clock: %{a: 18205}}}]

11:37:22.408 [info] Receive response of 5472 from a with [%KvStore.CacheEntry{object: 410, context: %KvStore.Context{vector_clock: %{a: 18205}}}]

11:37:22.408 [info] Send request {:get, "3"}

11:37:22.409 [info] lb receive get from :client_a (5474)

11:37:22.409 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 410, context: %KvStore.Context{vector_clock: %{a: 18205}}}], type: :get_response, req_id: 5473}}

11:37:22.409 [info] Latest entries: [%KvStore.CacheEntry{object: 410, context: %KvStore.Context{vector_clock: %{a: 18205}}}]

11:37:22.409 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5475, observer: :observer}

11:37:22.410 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 5474}

11:37:22.410 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5473, key: "5", object: [%KvStore.CacheEntry{object: 410, context: %KvStore.Context{vector_clock: %{a: 18205}}}], sender: :a, type: :get_log}

11:37:22.410 [info] Receive response of 5473 from a with [%KvStore.CacheEntry{object: 410, context: %KvStore.Context{vector_clock: %{a: 18205}}}]

11:37:22.410 [info] Send request {:get, "5"}

11:37:22.411 [info] lb receive get from :client_b (5475)

11:37:22.411 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 819, context: %KvStore.Context{vector_clock: %{a: 18252}}}]

11:37:22.411 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5476, observer: :observer}

11:37:22.414 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 5475}

11:37:22.414 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 819, context: %KvStore.Context{vector_clock: %{a: 18252}}}], type: :get_response, req_id: 5474}}

11:37:22.414 [info] Latest entries: [%KvStore.CacheEntry{object: 819, context: %KvStore.Context{vector_clock: %{a: 18252}}}]

11:37:22.414 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 410, context: %KvStore.Context{vector_clock: %{a: 18205}}}]

11:37:22.415 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 410, context: %KvStore.Context{vector_clock: %{a: 18205}}}], type: :get_response, req_id: 5475}}

11:37:22.415 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5474, key: "3", object: [%KvStore.CacheEntry{object: 819, context: %KvStore.Context{vector_clock: %{a: 18252}}}], sender: :a, type: :get_log}

11:37:22.415 [info] Latest entries: [%KvStore.CacheEntry{object: 410, context: %KvStore.Context{vector_clock: %{a: 18205}}}]

11:37:22.415 [info] Receive response of 5474 from a with [%KvStore.CacheEntry{object: 819, context: %KvStore.Context{vector_clock: %{a: 18252}}}]

11:37:22.415 [info] Send request {:put, "4", 465, []}

11:37:22.416 [info] Receive response of 5475 from a with [%KvStore.CacheEntry{object: 410, context: %KvStore.Context{vector_clock: %{a: 18205}}}]

11:37:22.416 [info] lb receive put from :client_a

11:37:22.416 [info] Send request {:put, "5", 24, []}

11:37:22.416 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5475, key: "5", object: [%KvStore.CacheEntry{object: 410, context: %KvStore.Context{vector_clock: %{a: 18205}}}], sender: :a, type: :get_log}

11:37:22.416 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5477, observer: :observer}

11:37:22.417 [info] lb receive put from :client_b

11:37:22.417 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 465, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5476}

11:37:22.417 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5478, observer: :observer}

11:37:22.418 [info] New objects are [%KvStore.CacheEntry{object: 465, context: %KvStore.Context{vector_clock: %{a: 18269}}}]

11:37:22.418 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 24, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5477}

11:37:22.420 [info] Receive response of 5476 from a with context: %KvStore.Context{vector_clock: %{a: 18269}}

11:37:22.420 [info] New objects are [%KvStore.CacheEntry{object: 24, context: %KvStore.Context{vector_clock: %{a: 18271}}}]

11:37:22.420 [info] generate requests

11:37:22.420 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5476, key: "4", object: 465, sender: :a, type: :put_log}

11:37:22.420 [info] Send request {:get, "2"}

11:37:22.421 [info] lb receive get from :client_a (5478)

11:37:22.421 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5479, observer: :observer}

11:37:22.421 [warning] :a Timeout for request: 5439

11:37:22.421 [warning] :a Timeout for request: 5439, but request not found.

11:37:22.422 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 5478}

11:37:22.422 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5477, key: "5", object: 24, sender: :a, type: :put_log}

11:37:22.422 [info] Receive response of 5477 from a with context: %KvStore.Context{vector_clock: %{a: 18271}}

11:37:22.422 [info] generate requests

11:37:22.422 [info] Send request {:get, "5"}

11:37:22.423 [info] lb receive get from :client_b (5479)

11:37:22.423 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}]

11:37:22.423 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5480, observer: :observer}

11:37:22.424 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 5479}

11:37:22.424 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}], type: :get_response, req_id: 5478}}

11:37:22.424 [info] Latest entries: [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}]

11:37:22.425 [info] Receive response of 5478 from a with [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}]

11:37:22.425 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5478, key: "2", object: [%KvStore.CacheEntry{object: 733, context: %KvStore.Context{vector_clock: %{a: 18215}}}], sender: :a, type: :get_log}

11:37:22.425 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 24, context: %KvStore.Context{vector_clock: %{a: 18271}}}]

11:37:22.425 [info] Send request {:put, "2", 211, []}

11:37:22.426 [info] lb receive put from :client_a

11:37:22.426 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 24, context: %KvStore.Context{vector_clock: %{a: 18271}}}], type: :get_response, req_id: 5479}}

11:37:22.426 [info] Latest entries: [%KvStore.CacheEntry{object: 24, context: %KvStore.Context{vector_clock: %{a: 18271}}}]

11:37:22.426 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5481, observer: :observer}

11:37:22.427 [info] Receive response of 5479 from a with [%KvStore.CacheEntry{object: 24, context: %KvStore.Context{vector_clock: %{a: 18271}}}]

11:37:22.427 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5479, key: "5", object: [%KvStore.CacheEntry{object: 24, context: %KvStore.Context{vector_clock: %{a: 18271}}}], sender: :a, type: :get_log}

11:37:22.427 [info] Send request {:put, "5", 332, []}

11:37:22.427 [debug] PutRequest: %KvStore.PutRequest{key: "2", object: 211, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5480}

11:37:22.428 [info] lb receive put from :client_b

11:37:22.428 [info] New objects are [%KvStore.CacheEntry{object: 211, context: %KvStore.Context{vector_clock: %{a: 18282}}}]

11:37:22.428 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5482, observer: :observer}

11:37:22.428 [warning] :a Timeout for request: 5442

11:37:22.428 [warning] :a Timeout for request: 5442, but request not found.

11:37:22.429 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 332, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5481}

11:37:22.430 [info] New objects are [%KvStore.CacheEntry{object: 332, context: %KvStore.Context{vector_clock: %{a: 18285}}}]

11:37:22.430 [info] Receive response of 5480 from a with context: %KvStore.Context{vector_clock: %{a: 18282}}

11:37:22.430 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5480, key: "2", object: 211, sender: :a, type: :put_log}

11:37:22.430 [info] Send request {:get, "5"}

11:37:22.431 [info] lb receive get from :client_a (5482)

11:37:22.431 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5483, observer: :observer}

11:37:22.432 [info] Receive response of 5481 from a with context: %KvStore.Context{vector_clock: %{a: 18285}}

11:37:22.432 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 5482}

11:37:22.432 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5481, key: "5", object: 332, sender: :a, type: :put_log}

11:37:22.432 [info] Send request {:get, "1"}

11:37:22.433 [info] lb receive get from :client_b (5483)

11:37:22.433 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 332, context: %KvStore.Context{vector_clock: %{a: 18285}}}]

11:37:22.433 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5484, observer: :observer}

11:37:22.434 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 332, context: %KvStore.Context{vector_clock: %{a: 18285}}}], type: :get_response, req_id: 5482}}

11:37:22.434 [info] Latest entries: [%KvStore.CacheEntry{object: 332, context: %KvStore.Context{vector_clock: %{a: 18285}}}]

11:37:22.434 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 5483}

11:37:22.435 [info] Receive response of 5482 from a with [%KvStore.CacheEntry{object: 332, context: %KvStore.Context{vector_clock: %{a: 18285}}}]

11:37:22.435 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5482, key: "5", object: [%KvStore.CacheEntry{object: 332, context: %KvStore.Context{vector_clock: %{a: 18285}}}], sender: :a, type: :get_log}

11:37:22.435 [info] generate requests

11:37:22.435 [info] Send request {:get, "2"}

11:37:22.435 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 810, context: %KvStore.Context{vector_clock: %{a: 18218}}}]

11:37:22.436 [info] lb receive get from :client_a (5484)

11:37:22.436 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 810, context: %KvStore.Context{vector_clock: %{a: 18218}}}], type: :get_response, req_id: 5483}}

11:37:22.436 [info] Latest entries: [%KvStore.CacheEntry{object: 810, context: %KvStore.Context{vector_clock: %{a: 18218}}}]

11:37:22.436 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5485, observer: :observer}

11:37:22.437 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5483, key: "1", object: [%KvStore.CacheEntry{object: 810, context: %KvStore.Context{vector_clock: %{a: 18218}}}], sender: :a, type: :get_log}

11:37:22.437 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 5484}

11:37:22.437 [info] Receive response of 5483 from a with [%KvStore.CacheEntry{object: 810, context: %KvStore.Context{vector_clock: %{a: 18218}}}]

11:37:22.437 [info] generate requests

11:37:22.437 [info] Send request {:put, "3", 693, []}

11:37:22.438 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 211, context: %KvStore.Context{vector_clock: %{a: 18282}}}]

11:37:22.438 [info] lb receive put from :client_b

11:37:22.438 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5486, observer: :observer}

11:37:22.439 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 211, context: %KvStore.Context{vector_clock: %{a: 18282}}}], type: :get_response, req_id: 5484}}

11:37:22.439 [info] Latest entries: [%KvStore.CacheEntry{object: 211, context: %KvStore.Context{vector_clock: %{a: 18282}}}]

11:37:22.439 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 693, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5485}

11:37:22.440 [info] Receive response of 5484 from a with [%KvStore.CacheEntry{object: 211, context: %KvStore.Context{vector_clock: %{a: 18282}}}]

11:37:22.440 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5484, key: "2", object: [%KvStore.CacheEntry{object: 211, context: %KvStore.Context{vector_clock: %{a: 18282}}}], sender: :a, type: :get_log}

11:37:22.440 [info] New objects are [%KvStore.CacheEntry{object: 693, context: %KvStore.Context{vector_clock: %{a: 18298}}}]

11:37:22.440 [info] Send request {:get, "3"}

11:37:22.441 [info] lb receive get from :client_a (5486)

11:37:22.441 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5487, observer: :observer}

11:37:22.441 [warning] :a Timeout for request: 5447

11:37:22.441 [warning] :a Timeout for request: 5447, but request not found.

11:37:22.442 [info] Receive response of 5485 from a with context: %KvStore.Context{vector_clock: %{a: 18298}}

11:37:23.305 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 644, context: %KvStore.Context{vector_clock: %{a: 19401}}}], type: :get_response, req_id: 5824}}

11:37:23.305 [info] Latest entries: [%KvStore.CacheEntry{object: 644, context: %KvStore.Context{vector_clock: %{a: 19401}}}]

11:37:23.306 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5824, key: "1", object: [%KvStore.CacheEntry{object: 644, context: %KvStore.Context{vector_clock: %{a: 19401}}}], sender: :a, type: :get_log}

11:37:23.306 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}]

11:37:23.306 [info] Receive response of 5824 from a with [%KvStore.CacheEntry{object: 644, context: %KvStore.Context{vector_clock: %{a: 19401}}}]

11:37:23.306 [info] generate requests

11:37:23.306 [info] Send request {:get, "1"}

11:37:23.307 [info] lb receive get from :client_a (5826)

11:37:23.307 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}], type: :get_response, req_id: 5825}}

11:37:23.307 [info] Latest entries: [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}]

11:37:23.307 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5827, observer: :observer}

11:37:23.308 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5825, key: "2", object: [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}], sender: :a, type: :get_log}

11:37:23.308 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 5826}

11:37:23.308 [info] Receive response of 5825 from a with [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}]

11:37:23.308 [info] generate requests

11:37:23.308 [info] Send request {:get, "5"}

11:37:23.308 [warning] :a Timeout for request: 5789

11:37:23.308 [warning] :a Timeout for request: 5789, but request not found.

11:37:23.309 [info] lb receive get from :client_b (5827)

11:37:23.309 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 644, context: %KvStore.Context{vector_clock: %{a: 19401}}}]

11:37:23.309 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5828, observer: :observer}

11:37:23.310 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 5827}

11:37:23.310 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 644, context: %KvStore.Context{vector_clock: %{a: 19401}}}], type: :get_response, req_id: 5826}}

11:37:23.310 [info] Latest entries: [%KvStore.CacheEntry{object: 644, context: %KvStore.Context{vector_clock: %{a: 19401}}}]

11:37:23.311 [warning] :a Timeout for request: 5790

11:37:23.311 [warning] :a Timeout for request: 5790, but request not found.

11:37:23.311 [info] Receive response of 5826 from a with [%KvStore.CacheEntry{object: 644, context: %KvStore.Context{vector_clock: %{a: 19401}}}]

11:37:23.311 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.311 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5826, key: "1", object: [%KvStore.CacheEntry{object: 644, context: %KvStore.Context{vector_clock: %{a: 19401}}}], sender: :a, type: :get_log}

11:37:23.311 [info] Send request {:get, "3"}

11:37:23.312 [info] lb receive get from :client_a (5828)

11:37:23.312 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}], type: :get_response, req_id: 5827}}

11:37:23.312 [info] Latest entries: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.312 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5829, observer: :observer}

11:37:23.313 [info] Receive response of 5827 from a with [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.313 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5827, key: "5", object: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}], sender: :a, type: :get_log}

11:37:23.313 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 5828}

11:37:23.313 [info] Send request {:put, "3", 787, []}

11:37:23.314 [info] lb receive put from :client_b

11:37:23.314 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 646, context: %KvStore.Context{vector_clock: %{a: 19421}}}]

11:37:23.314 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5830, observer: :observer}

11:37:23.315 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 787, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5829}

11:37:23.315 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 646, context: %KvStore.Context{vector_clock: %{a: 19421}}}], type: :get_response, req_id: 5828}}

11:37:23.315 [info] Latest entries: [%KvStore.CacheEntry{object: 646, context: %KvStore.Context{vector_clock: %{a: 19421}}}]

11:37:23.315 [warning] :a Timeout for request: 5792

11:37:23.315 [warning] :a Timeout for request: 5792, but request not found.

11:37:23.316 [info] New objects are [%KvStore.CacheEntry{object: 787, context: %KvStore.Context{vector_clock: %{a: 19447}}}]

11:37:23.316 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5828, key: "3", object: [%KvStore.CacheEntry{object: 646, context: %KvStore.Context{vector_clock: %{a: 19421}}}], sender: :a, type: :get_log}

11:37:23.316 [info] Receive response of 5828 from a with [%KvStore.CacheEntry{object: 646, context: %KvStore.Context{vector_clock: %{a: 19421}}}]

11:37:23.316 [info] Send request {:put, "1", 462, []}

11:37:23.317 [info] lb receive put from :client_a

11:37:23.317 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5831, observer: :observer}

11:37:23.318 [info] Receive response of 5829 from a with context: %KvStore.Context{vector_clock: %{a: 19447}}

11:37:23.318 [info] Send request {:get, "2"}

11:37:23.318 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5829, key: "3", object: 787, sender: :a, type: :put_log}

11:37:23.318 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 462, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5830}

11:37:23.318 [warning] :a Timeout for request: 5793

11:37:23.318 [warning] :a Timeout for request: 5793, but request not found.

11:37:23.319 [info] lb receive get from :client_b (5831)

11:37:23.319 [info] New objects are [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}]

11:37:23.319 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5832, observer: :observer}

11:37:23.320 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 5831}

11:37:23.321 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5830, key: "1", object: 462, sender: :a, type: :put_log}

11:37:23.321 [info] Receive response of 5830 from a with context: %KvStore.Context{vector_clock: %{a: 19452}}

11:37:23.321 [info] generate requests

11:37:23.321 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}]

11:37:23.321 [info] Send request {:get, "1"}

11:37:23.322 [info] lb receive get from :client_a (5832)

11:37:23.322 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}], type: :get_response, req_id: 5831}}

11:37:23.322 [info] Latest entries: [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}]

11:37:23.322 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5833, observer: :observer}

11:37:23.323 [info] Receive response of 5831 from a with [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}]

11:37:23.323 [info] generate requests

11:37:23.323 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 5832}

11:37:23.323 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5831, key: "2", object: [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}], sender: :a, type: :get_log}

11:37:23.323 [info] Send request {:get, "5"}

11:37:23.324 [info] lb receive get from :client_b (5833)

11:37:23.324 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}]

11:37:23.324 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5834, observer: :observer}

11:37:23.325 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 5833}

11:37:23.325 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}], type: :get_response, req_id: 5832}}

11:37:23.325 [info] Latest entries: [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}]

11:37:23.326 [info] Receive response of 5832 from a with [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}]

11:37:23.326 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.326 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5832, key: "1", object: [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}], sender: :a, type: :get_log}

11:37:23.326 [info] Send request {:put, "3", 980, []}

11:37:23.327 [info] lb receive put from :client_a

11:37:23.327 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}], type: :get_response, req_id: 5833}}

11:37:23.327 [info] Latest entries: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.327 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5835, observer: :observer}

11:37:23.328 [info] Receive response of 5833 from a with [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.328 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5833, key: "5", object: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}], sender: :a, type: :get_log}

11:37:23.328 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 980, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5834}

11:37:23.328 [info] Send request {:get, "3"}

11:37:23.329 [info] lb receive get from :client_b (5835)

11:37:23.329 [info] New objects are [%KvStore.CacheEntry{object: 980, context: %KvStore.Context{vector_clock: %{a: 19465}}}]

11:37:23.329 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5836, observer: :observer}

11:37:23.330 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 5835}

11:37:23.330 [warning] :a Timeout for request: 5798

11:37:23.330 [warning] :a Timeout for request: 5798, but request not found.

11:37:23.332 [info] Receive response of 5834 from a with context: %KvStore.Context{vector_clock: %{a: 19465}}

11:37:23.332 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5834, key: "3", object: 980, sender: :a, type: :put_log}

11:37:23.332 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 980, context: %KvStore.Context{vector_clock: %{a: 19465}}}]

11:37:23.332 [info] Send request {:get, "4"}

11:37:23.332 [info] lb receive get from :client_a (5836)

11:37:23.332 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 980, context: %KvStore.Context{vector_clock: %{a: 19465}}}], type: :get_response, req_id: 5835}}

11:37:23.332 [info] Latest entries: [%KvStore.CacheEntry{object: 980, context: %KvStore.Context{vector_clock: %{a: 19465}}}]

11:37:23.332 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5837, observer: :observer}

11:37:23.333 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 5836}

11:37:23.333 [info] Receive response of 5835 from a with [%KvStore.CacheEntry{object: 980, context: %KvStore.Context{vector_clock: %{a: 19465}}}]

11:37:23.333 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5835, key: "3", object: [%KvStore.CacheEntry{object: 980, context: %KvStore.Context{vector_clock: %{a: 19465}}}], sender: :a, type: :get_log}

11:37:23.333 [info] Send request {:put, "3", 757, []}

11:37:23.334 [info] lb receive put from :client_b

11:37:23.334 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 815, context: %KvStore.Context{vector_clock: %{a: 19425}}}]

11:37:23.334 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5838, observer: :observer}

11:37:23.335 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 757, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5837}

11:37:23.335 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 815, context: %KvStore.Context{vector_clock: %{a: 19425}}}], type: :get_response, req_id: 5836}}

11:37:23.335 [info] Latest entries: [%KvStore.CacheEntry{object: 815, context: %KvStore.Context{vector_clock: %{a: 19425}}}]

11:37:23.335 [warning] :a Timeout for request: 5799

11:37:23.335 [warning] :a Timeout for request: 5799, but request not found.

11:37:23.336 [info] New objects are [%KvStore.CacheEntry{object: 757, context: %KvStore.Context{vector_clock: %{a: 19474}}}]

11:37:23.336 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5836, key: "4", object: [%KvStore.CacheEntry{object: 815, context: %KvStore.Context{vector_clock: %{a: 19425}}}], sender: :a, type: :get_log}

11:37:23.336 [info] Receive response of 5836 from a with [%KvStore.CacheEntry{object: 815, context: %KvStore.Context{vector_clock: %{a: 19425}}}]

11:37:23.336 [info] generate requests

11:37:23.336 [info] Send request {:get, "1"}

11:37:23.337 [info] lb receive get from :client_a (5838)

11:37:23.337 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5839, observer: :observer}

11:37:23.338 [info] Receive response of 5837 from a with context: %KvStore.Context{vector_clock: %{a: 19474}}

11:37:23.338 [info] generate requests

11:37:23.338 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5837, key: "3", object: 757, sender: :a, type: :put_log}

11:37:23.338 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 5838}

11:37:23.338 [info] Send request {:put, "4", 536, []}

11:37:23.339 [info] lb receive put from :client_b

11:37:23.339 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}]

11:37:23.339 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5840, observer: :observer}

11:37:23.340 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}], type: :get_response, req_id: 5838}}

11:37:23.340 [info] Latest entries: [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}]

11:37:23.340 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 536, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5839}

11:37:23.341 [info] Receive response of 5838 from a with [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}]

11:37:23.341 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5838, key: "1", object: [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}], sender: :a, type: :get_log}

11:37:23.341 [info] New objects are [%KvStore.CacheEntry{object: 536, context: %KvStore.Context{vector_clock: %{a: 19482}}}]

11:37:23.341 [info] Send request {:put, "4", 74, []}

11:37:23.342 [info] lb receive put from :client_a

11:37:23.342 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5841, observer: :observer}

11:37:23.343 [info] Receive response of 5839 from a with context: %KvStore.Context{vector_clock: %{a: 19482}}

11:37:23.343 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5839, key: "4", object: 536, sender: :a, type: :put_log}

11:37:23.343 [info] Send request {:get, "2"}

11:37:23.343 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 74, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5840}

11:37:23.344 [info] lb receive get from :client_b (5841)

11:37:23.344 [info] New objects are [%KvStore.CacheEntry{object: 74, context: %KvStore.Context{vector_clock: %{a: 19485}}}]

11:37:23.344 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5842, observer: :observer}

11:37:23.345 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 5841}

11:37:23.346 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5840, key: "4", object: 74, sender: :a, type: :put_log}

11:37:23.346 [info] Receive response of 5840 from a with context: %KvStore.Context{vector_clock: %{a: 19485}}

11:37:23.346 [info] Send request {:get, "4"}

11:37:23.346 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}]

11:37:23.347 [info] lb receive get from :client_a (5842)

11:37:23.347 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}], type: :get_response, req_id: 5841}}

11:37:23.347 [info] Latest entries: [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}]

11:37:23.347 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5843, observer: :observer}

11:37:23.348 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 5842}

11:37:23.348 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5841, key: "2", object: [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}], sender: :a, type: :get_log}

11:37:23.348 [info] Receive response of 5841 from a with [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}]

11:37:23.348 [info] Send request {:get, "5"}

11:37:23.349 [info] lb receive get from :client_b (5843)

11:37:23.349 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 74, context: %KvStore.Context{vector_clock: %{a: 19485}}}]

11:37:23.349 [warning] :a Timeout for request: 5804

11:37:23.349 [warning] :a Timeout for request: 5804, but request not found.

11:37:23.349 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5844, observer: :observer}

11:37:23.350 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 74, context: %KvStore.Context{vector_clock: %{a: 19485}}}], type: :get_response, req_id: 5842}}

11:37:23.350 [info] Latest entries: [%KvStore.CacheEntry{object: 74, context: %KvStore.Context{vector_clock: %{a: 19485}}}]

11:37:23.350 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 5843}

11:37:23.351 [info] Receive response of 5842 from a with [%KvStore.CacheEntry{object: 74, context: %KvStore.Context{vector_clock: %{a: 19485}}}]

11:37:23.351 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5842, key: "4", object: [%KvStore.CacheEntry{object: 74, context: %KvStore.Context{vector_clock: %{a: 19485}}}], sender: :a, type: :get_log}

11:37:23.351 [info] generate requests

11:37:23.351 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.351 [info] Send request {:get, "1"}

11:37:23.352 [info] lb receive get from :client_a (5844)

11:37:23.352 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}], type: :get_response, req_id: 5843}}

11:37:23.352 [info] Latest entries: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.352 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5845, observer: :observer}

11:37:23.353 [info] Receive response of 5843 from a with [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.353 [info] generate requests

11:37:23.353 [warning] :a Timeout for request: 5805

11:37:23.353 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5843, key: "5", object: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}], sender: :a, type: :get_log}

11:37:23.353 [warning] :a Timeout for request: 5805, but request not found.

11:37:23.353 [info] Send request {:get, "1"}

11:37:23.353 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 5844}

11:37:23.354 [info] lb receive get from :client_b (5845)

11:37:23.354 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}]

11:37:23.354 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5846, observer: :observer}

11:37:23.355 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 5845}

11:37:23.355 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}], type: :get_response, req_id: 5844}}

11:37:23.355 [info] Latest entries: [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}]

11:37:23.356 [info] Receive response of 5844 from a with [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}]

11:37:23.356 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5844, key: "1", object: [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}], sender: :a, type: :get_log}

11:37:23.356 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}]

11:37:23.356 [info] Send request {:put, "1", 654, []}

11:37:23.357 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}], type: :get_response, req_id: 5845}}

11:37:23.357 [info] Latest entries: [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}]

11:37:23.357 [info] lb receive put from :client_a

11:37:23.357 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5847, observer: :observer}

11:37:23.358 [info] Receive response of 5845 from a with [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}]

11:37:23.358 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5845, key: "1", object: [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19452}}}], sender: :a, type: :get_log}

11:37:23.358 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 654, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5846}

11:37:23.358 [info] Send request {:get, "1"}

11:37:23.359 [info] lb receive get from :client_b (5847)

11:37:23.359 [info] New objects are [%KvStore.CacheEntry{object: 654, context: %KvStore.Context{vector_clock: %{a: 19505}}}]

11:37:23.359 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5848, observer: :observer}

11:37:23.360 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 5847}

11:37:23.361 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5846, key: "1", object: 654, sender: :a, type: :put_log}

11:37:23.361 [info] Receive response of 5846 from a with context: %KvStore.Context{vector_clock: %{a: 19505}}

11:37:23.361 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 654, context: %KvStore.Context{vector_clock: %{a: 19505}}}]

11:37:23.361 [info] Send request {:get, "2"}

11:37:23.362 [info] lb receive get from :client_a (5848)

11:37:23.362 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 654, context: %KvStore.Context{vector_clock: %{a: 19505}}}], type: :get_response, req_id: 5847}}

11:37:23.362 [info] Latest entries: [%KvStore.CacheEntry{object: 654, context: %KvStore.Context{vector_clock: %{a: 19505}}}]

11:37:23.362 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5849, observer: :observer}

11:37:23.363 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_a, original_recipient: :a, type: :get, req_id: 5848}

11:37:23.363 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5847, key: "1", object: [%KvStore.CacheEntry{object: 654, context: %KvStore.Context{vector_clock: %{a: 19505}}}], sender: :a, type: :get_log}

11:37:23.363 [info] Receive response of 5847 from a with [%KvStore.CacheEntry{object: 654, context: %KvStore.Context{vector_clock: %{a: 19505}}}]

11:37:23.363 [info] Send request {:put, "3", 132, []}

11:37:23.364 [info] lb receive put from :client_b

11:37:23.364 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}]

11:37:23.364 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5850, observer: :observer}

11:37:23.365 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 132, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5849}

11:37:23.365 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}], type: :get_response, req_id: 5848}}

11:37:23.365 [info] Latest entries: [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}]

11:37:23.366 [info] Receive response of 5848 from a with [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}]

11:37:23.366 [info] New objects are [%KvStore.CacheEntry{object: 132, context: %KvStore.Context{vector_clock: %{a: 19513}}}]

11:37:23.366 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5848, key: "2", object: [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}], sender: :a, type: :get_log}

11:37:23.366 [info] generate requests

11:37:23.366 [info] Send request {:put, "3", 478, []}

11:37:23.367 [info] lb receive put from :client_a

11:37:23.367 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5851, observer: :observer}

11:37:23.368 [info] Receive response of 5849 from a with context: %KvStore.Context{vector_clock: %{a: 19513}}

11:37:23.368 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5849, key: "3", object: 132, sender: :a, type: :put_log}

11:37:23.368 [info] generate requests

11:37:23.368 [debug] PutRequest: %KvStore.PutRequest{key: "3", object: 478, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5850}

11:37:23.368 [info] Send request {:get, "2"}

11:37:23.368 [warning] :a Timeout for request: 5811

11:37:23.368 [warning] :a Timeout for request: 5811, but request not found.

11:37:23.369 [info] lb receive get from :client_b (5851)

11:37:23.369 [info] New objects are [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}]

11:37:23.369 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5852, observer: :observer}

11:37:23.370 [debug] Handling external get request: %KvStore.GetRequest{key: "2", sender: :client_b, original_recipient: :a, type: :get, req_id: 5851}

11:37:23.370 [warning] :a Timeout for request: 5812

11:37:23.370 [warning] :a Timeout for request: 5812, but request not found.

11:37:23.371 [info] Receive response of 5850 from a with context: %KvStore.Context{vector_clock: %{a: 19517}}

11:37:23.371 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5850, key: "3", object: 478, sender: :a, type: :put_log}

11:37:23.371 [info] :a Found key: "2", with value [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}]

11:37:23.371 [info] Send request {:get, "4"}

11:37:23.372 [info] lb receive get from :client_a (5852)

11:37:23.373 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}], type: :get_response, req_id: 5851}}

11:37:23.373 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5853, observer: :observer}

11:37:23.373 [info] Latest entries: [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}]

11:37:23.373 [info] Receive response of 5851 from a with [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}]

11:37:23.373 [info] Send request {:put, "1", 185, []}

11:37:23.373 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 5852}

11:37:23.374 [info] lb receive put from :client_b

11:37:23.374 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5851, key: "2", object: [%KvStore.CacheEntry{object: 169, context: %KvStore.Context{vector_clock: %{a: 19365}}}], sender: :a, type: :get_log}

11:37:23.374 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 74, context: %KvStore.Context{vector_clock: %{a: 19485}}}]

11:37:23.374 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5854, observer: :observer}

11:37:23.375 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 185, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5853}

11:37:23.375 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 74, context: %KvStore.Context{vector_clock: %{a: 19485}}}], type: :get_response, req_id: 5852}}

11:37:23.375 [info] Latest entries: [%KvStore.CacheEntry{object: 74, context: %KvStore.Context{vector_clock: %{a: 19485}}}]

11:37:23.376 [info] New objects are [%KvStore.CacheEntry{object: 185, context: %KvStore.Context{vector_clock: %{a: 19527}}}]

11:37:23.376 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5852, key: "4", object: [%KvStore.CacheEntry{object: 74, context: %KvStore.Context{vector_clock: %{a: 19485}}}], sender: :a, type: :get_log}

11:37:23.376 [info] Receive response of 5852 from a with [%KvStore.CacheEntry{object: 74, context: %KvStore.Context{vector_clock: %{a: 19485}}}]

11:37:23.376 [info] Send request {:get, "5"}

11:37:23.377 [info] lb receive get from :client_a (5854)

11:37:23.377 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5855, observer: :observer}

11:37:23.378 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 5854}

11:37:23.378 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5853, key: "1", object: 185, sender: :a, type: :put_log}

11:37:23.378 [info] Receive response of 5853 from a with context: %KvStore.Context{vector_clock: %{a: 19527}}

11:37:23.378 [info] Send request {:get, "5"}

11:37:23.379 [info] lb receive get from :client_b (5855)

11:37:23.379 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.379 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5856, observer: :observer}

11:37:23.380 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 5855}

11:37:23.380 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}], type: :get_response, req_id: 5854}}

11:37:23.380 [info] Latest entries: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.381 [warning] :a Timeout for request: 5816

11:37:23.381 [warning] :a Timeout for request: 5816, but request not found.

11:37:23.381 [info] Receive response of 5854 from a with [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.381 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5854, key: "5", object: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}], sender: :a, type: :get_log}

11:37:23.381 [info] generate requests

11:37:23.381 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.381 [info] Send request {:get, "3"}

11:37:23.382 [info] lb receive get from :client_a (5856)

11:37:23.382 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}], type: :get_response, req_id: 5855}}

11:37:23.382 [info] Latest entries: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.382 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5857, observer: :observer}

11:37:23.383 [warning] :a Timeout for request: 5817

11:37:23.383 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5855, key: "5", object: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}], sender: :a, type: :get_log}

11:37:23.383 [warning] :a Timeout for request: 5817, but request not found.

11:37:23.383 [info] Receive response of 5855 from a with [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.383 [info] generate requests

11:37:23.383 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 5856}

11:37:23.383 [info] Send request {:put, "4", 772, []}

11:37:23.385 [info] lb receive put from :client_b

11:37:23.385 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}]

11:37:23.385 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5858, observer: :observer}

11:37:23.386 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 772, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5857}

11:37:23.386 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}], type: :get_response, req_id: 5856}}

11:37:23.386 [info] Latest entries: [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}]

11:37:23.387 [info] New objects are [%KvStore.CacheEntry{object: 772, context: %KvStore.Context{vector_clock: %{a: 19541}}}]

11:37:23.387 [info] Receive response of 5856 from a with [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}]

11:37:23.387 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5856, key: "3", object: [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}], sender: :a, type: :get_log}

11:37:23.387 [info] Send request {:get, "3"}

11:37:23.388 [info] lb receive get from :client_a (5858)

11:37:23.388 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5859, observer: :observer}

11:37:23.389 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5857, key: "4", object: 772, sender: :a, type: :put_log}

11:37:23.389 [info] Receive response of 5857 from a with context: %KvStore.Context{vector_clock: %{a: 19541}}

11:37:23.389 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 5858}

11:37:23.389 [info] Send request {:get, "4"}

11:37:23.390 [info] lb receive get from :client_b (5859)

11:37:23.390 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}]

11:37:23.390 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5860, observer: :observer}

11:37:23.391 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}], type: :get_response, req_id: 5858}}

11:37:23.391 [info] Latest entries: [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}]

11:37:23.391 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 5859}

11:37:23.392 [info] Receive response of 5858 from a with [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}]

11:37:23.392 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 772, context: %KvStore.Context{vector_clock: %{a: 19541}}}]

11:37:23.392 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5858, key: "3", object: [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}], sender: :a, type: :get_log}

11:37:23.392 [info] Send request {:put, "1", 63, []}

11:37:23.393 [info] lb receive put from :client_a

11:37:23.393 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 772, context: %KvStore.Context{vector_clock: %{a: 19541}}}], type: :get_response, req_id: 5859}}

11:37:23.393 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5861, observer: :observer}

11:37:23.393 [info] Latest entries: [%KvStore.CacheEntry{object: 772, context: %KvStore.Context{vector_clock: %{a: 19541}}}]

11:37:23.394 [info] Receive response of 5859 from a with [%KvStore.CacheEntry{object: 772, context: %KvStore.Context{vector_clock: %{a: 19541}}}]

11:37:23.394 [info] Send request {:get, "3"}

11:37:23.394 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5859, key: "4", object: [%KvStore.CacheEntry{object: 772, context: %KvStore.Context{vector_clock: %{a: 19541}}}], sender: :a, type: :get_log}

11:37:23.394 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 63, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5860}

11:37:23.396 [info] lb receive get from :client_b (5861)

11:37:23.396 [info] New objects are [%KvStore.CacheEntry{object: 63, context: %KvStore.Context{vector_clock: %{a: 19551}}}]

11:37:23.396 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5862, observer: :observer}

11:37:23.396 [warning] :a Timeout for request: 5822

11:37:23.396 [warning] :a Timeout for request: 5822, but request not found.

11:37:23.397 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 5861}

11:37:23.398 [info] Receive response of 5860 from a with context: %KvStore.Context{vector_clock: %{a: 19551}}

11:37:23.398 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5860, key: "1", object: 63, sender: :a, type: :put_log}

11:37:23.398 [info] generate requests

11:37:23.398 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}]

11:37:23.398 [info] Send request {:get, "5"}

11:37:23.398 [warning] :a Timeout for request: 5823

11:37:23.398 [warning] :a Timeout for request: 5823, but request not found.

11:37:23.399 [info] lb receive get from :client_a (5862)

11:37:23.399 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}], type: :get_response, req_id: 5861}}

11:37:23.400 [info] Latest entries: [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}]

11:37:23.400 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5863, observer: :observer}

11:37:23.400 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 5862}

11:37:23.400 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5861, key: "3", object: [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}], sender: :a, type: :get_log}

11:37:23.400 [info] Receive response of 5861 from a with [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}]

11:37:23.400 [info] generate requests

11:37:23.400 [info] Send request {:get, "5"}

11:37:23.401 [info] lb receive get from :client_b (5863)

11:37:23.401 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.401 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5864, observer: :observer}

11:37:23.402 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_b, original_recipient: :a, type: :get, req_id: 5863}

11:37:23.402 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}], type: :get_response, req_id: 5862}}

11:37:23.402 [info] Latest entries: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.403 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5862, key: "5", object: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}], sender: :a, type: :get_log}

11:37:23.403 [info] Receive response of 5862 from a with [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.403 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.403 [info] Send request {:put, "5", 380, []}

11:37:23.404 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}], type: :get_response, req_id: 5863}}

11:37:23.404 [info] Latest entries: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.404 [info] lb receive put from :client_a

11:37:23.404 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5865, observer: :observer}

11:37:23.405 [info] Receive response of 5863 from a with [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}]

11:37:23.405 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5863, key: "5", object: [%KvStore.CacheEntry{object: 595, context: %KvStore.Context{vector_clock: %{a: 19405}}}], sender: :a, type: :get_log}

11:37:23.405 [info] Send request {:put, "1", 328, []}

11:37:23.405 [debug] PutRequest: %KvStore.PutRequest{key: "5", object: 380, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5864}

11:37:23.406 [info] New objects are [%KvStore.CacheEntry{object: 380, context: %KvStore.Context{vector_clock: %{a: 19565}}}]

11:37:23.406 [info] lb receive put from :client_b

11:37:23.406 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5866, observer: :observer}

11:37:23.407 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 328, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5865}

11:37:23.408 [info] New objects are [%KvStore.CacheEntry{object: 328, context: %KvStore.Context{vector_clock: %{a: 19567}}}]

11:37:23.408 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5864, key: "5", object: 380, sender: :a, type: :put_log}

11:37:23.408 [info] Receive response of 5864 from a with context: %KvStore.Context{vector_clock: %{a: 19565}}

11:37:23.408 [info] Send request {:get, "4"}

11:37:23.409 [info] lb receive get from :client_a (5866)

11:37:23.409 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5867, observer: :observer}

11:37:23.410 [info] Receive response of 5865 from a with context: %KvStore.Context{vector_clock: %{a: 19567}}

11:37:23.410 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_a, original_recipient: :a, type: :get, req_id: 5866}

11:37:23.410 [info] Send request {:get, "3"}

11:37:23.410 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5865, key: "1", object: 328, sender: :a, type: :put_log}

11:37:23.411 [info] lb receive get from :client_b (5867)

11:37:23.411 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 772, context: %KvStore.Context{vector_clock: %{a: 19541}}}]

11:37:23.411 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5868, observer: :observer}

11:37:23.412 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 5867}

11:37:23.412 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 772, context: %KvStore.Context{vector_clock: %{a: 19541}}}], type: :get_response, req_id: 5866}}

11:37:23.412 [info] Latest entries: [%KvStore.CacheEntry{object: 772, context: %KvStore.Context{vector_clock: %{a: 19541}}}]

11:37:23.413 [info] Receive response of 5866 from a with [%KvStore.CacheEntry{object: 772, context: %KvStore.Context{vector_clock: %{a: 19541}}}]

11:37:23.413 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5866, key: "4", object: [%KvStore.CacheEntry{object: 772, context: %KvStore.Context{vector_clock: %{a: 19541}}}], sender: :a, type: :get_log}

11:37:23.413 [info] generate requests

11:37:23.413 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}]

11:37:23.413 [info] Send request {:get, "1"}

11:37:23.414 [info] lb receive get from :client_a (5868)

11:37:23.414 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}], type: :get_response, req_id: 5867}}

11:37:23.414 [info] Latest entries: [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}]

11:37:23.414 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5869, observer: :observer}

11:37:23.415 [info] Receive response of 5867 from a with [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}]

11:37:23.415 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5867, key: "3", object: [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}], sender: :a, type: :get_log}

11:37:23.415 [info] generate requests

11:37:23.415 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 5868}

11:37:23.415 [info] Send request {:get, "4"}

11:37:23.416 [info] lb receive get from :client_b (5869)

11:37:23.416 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 328, context: %KvStore.Context{vector_clock: %{a: 19567}}}]

11:37:23.416 [warning] :a Timeout for request: 5830

11:37:23.416 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5870, observer: :observer}

11:37:23.416 [warning] :a Timeout for request: 5830, but request not found.

11:37:23.417 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 328, context: %KvStore.Context{vector_clock: %{a: 19567}}}], type: :get_response, req_id: 5868}}

11:37:23.417 [info] Latest entries: [%KvStore.CacheEntry{object: 328, context: %KvStore.Context{vector_clock: %{a: 19567}}}]

11:37:23.417 [debug] Handling external get request: %KvStore.GetRequest{key: "4", sender: :client_b, original_recipient: :a, type: :get, req_id: 5869}

11:37:23.418 [info] Receive response of 5868 from a with [%KvStore.CacheEntry{object: 328, context: %KvStore.Context{vector_clock: %{a: 19567}}}]

11:37:23.418 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5868, key: "1", object: [%KvStore.CacheEntry{object: 328, context: %KvStore.Context{vector_clock: %{a: 19567}}}], sender: :a, type: :get_log}

11:37:23.418 [info] :a Found key: "4", with value [%KvStore.CacheEntry{object: 772, context: %KvStore.Context{vector_clock: %{a: 19541}}}]

11:37:23.418 [info] Send request {:put, "1", 462, []}

11:37:23.419 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 772, context: %KvStore.Context{vector_clock: %{a: 19541}}}], type: :get_response, req_id: 5869}}

11:37:23.419 [info] lb receive put from :client_a

11:37:23.419 [info] Latest entries: [%KvStore.CacheEntry{object: 772, context: %KvStore.Context{vector_clock: %{a: 19541}}}]

11:37:23.419 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5871, observer: :observer}

11:37:23.419 [warning] :a Timeout for request: 5831

11:37:23.419 [warning] :a Timeout for request: 5831, but request not found.

11:37:23.420 [info] Receive response of 5869 from a with [%KvStore.CacheEntry{object: 772, context: %KvStore.Context{vector_clock: %{a: 19541}}}]

11:37:23.420 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5869, key: "4", object: [%KvStore.CacheEntry{object: 772, context: %KvStore.Context{vector_clock: %{a: 19541}}}], sender: :a, type: :get_log}

11:37:23.420 [info] Send request {:put, "4", 437, []}

11:37:23.420 [debug] PutRequest: %KvStore.PutRequest{key: "1", object: 462, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5870}

11:37:23.421 [info] lb receive put from :client_b

11:37:23.421 [info] New objects are [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19585}}}]

11:37:23.421 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5872, observer: :observer}

11:37:23.422 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 437, contexts: [], sender: :client_b, original_recipient: :a, type: :put, req_id: 5871}

11:37:23.423 [info] Receive response of 5870 from a with context: %KvStore.Context{vector_clock: %{a: 19585}}

11:37:23.423 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5870, key: "1", object: 462, sender: :a, type: :put_log}

11:37:23.423 [info] New objects are [%KvStore.CacheEntry{object: 437, context: %KvStore.Context{vector_clock: %{a: 19587}}}]

11:37:23.423 [info] Send request {:get, "3"}

11:37:23.424 [info] lb receive get from :client_a (5872)

11:37:23.424 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5873, observer: :observer}

11:37:23.425 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_a, original_recipient: :a, type: :get, req_id: 5872}

11:37:23.425 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5871, key: "4", object: 437, sender: :a, type: :put_log}

11:37:23.425 [info] Receive response of 5871 from a with context: %KvStore.Context{vector_clock: %{a: 19587}}

11:37:23.425 [info] Send request {:get, "1"}

11:37:23.426 [info] lb receive get from :client_b (5873)

11:37:23.426 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}]

11:37:23.426 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5874, observer: :observer}

11:37:23.427 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 5873}

11:37:23.427 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}], type: :get_response, req_id: 5872}}

11:37:23.427 [info] Latest entries: [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}]

11:37:23.428 [info] Receive response of 5872 from a with [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}]

11:37:23.428 [info] generate requests

11:37:23.428 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5872, key: "3", object: [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}], sender: :a, type: :get_log}

11:37:23.428 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19585}}}]

11:37:23.428 [info] Send request {:put, "4", 92, []}

11:37:23.429 [info] lb receive put from :client_a

11:37:23.429 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19585}}}], type: :get_response, req_id: 5873}}

11:37:23.429 [info] Latest entries: [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19585}}}]

11:37:23.429 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5875, observer: :observer}

11:37:23.429 [warning] :a Timeout for request: 5835

11:37:23.429 [warning] :a Timeout for request: 5835, but request not found.

11:37:23.430 [info] Receive response of 5873 from a with [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19585}}}]

11:37:23.430 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5873, key: "1", object: [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19585}}}], sender: :a, type: :get_log}

11:37:23.430 [info] generate requests

11:37:23.430 [debug] PutRequest: %KvStore.PutRequest{key: "4", object: 92, contexts: [], sender: :client_a, original_recipient: :a, type: :put, req_id: 5874}

11:37:23.430 [info] Send request {:get, "1"}

11:37:23.431 [info] lb receive get from :client_b (5875)

11:37:23.431 [info] New objects are [%KvStore.CacheEntry{object: 92, context: %KvStore.Context{vector_clock: %{a: 19598}}}]

11:37:23.431 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5876, observer: :observer}

11:37:23.432 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_b, original_recipient: :a, type: :get, req_id: 5875}

11:37:23.433 [info] Receive response of 5874 from a with context: %KvStore.Context{vector_clock: %{a: 19598}}

11:37:23.433 [info] Observer receive (put) %KvStore.PutRequestLog{req_id: 5874, key: "4", object: 92, sender: :a, type: :put_log}

11:37:23.433 [info] Send request {:get, "5"}

11:37:23.433 [info] :a Found key: "1", with value [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19585}}}]

11:37:23.434 [info] lb receive get from :client_a (5876)

11:37:23.434 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19585}}}], type: :get_response, req_id: 5875}}

11:37:23.434 [info] Latest entries: [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19585}}}]

11:37:23.434 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5877, observer: :observer}

11:37:23.435 [debug] Handling external get request: %KvStore.GetRequest{key: "5", sender: :client_a, original_recipient: :a, type: :get, req_id: 5876}

11:37:23.435 [info] Receive response of 5875 from a with [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19585}}}]

11:37:23.435 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5875, key: "1", object: [%KvStore.CacheEntry{object: 462, context: %KvStore.Context{vector_clock: %{a: 19585}}}], sender: :a, type: :get_log}

11:37:23.435 [info] Send request {:get, "3"}

11:37:23.436 [info] lb receive get from :client_b (5877)

11:37:23.436 [info] :a Found key: "5", with value [%KvStore.CacheEntry{object: 380, context: %KvStore.Context{vector_clock: %{a: 19565}}}]

11:37:23.436 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5878, observer: :observer}

11:37:23.436 [warning] :a Timeout for request: 5838

11:37:23.436 [warning] :a Timeout for request: 5838, but request not found.

11:37:23.437 [debug] Handling external get request: %KvStore.GetRequest{key: "3", sender: :client_b, original_recipient: :a, type: :get, req_id: 5877}

11:37:23.437 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 380, context: %KvStore.Context{vector_clock: %{a: 19565}}}], type: :get_response, req_id: 5876}}

11:37:23.437 [info] Latest entries: [%KvStore.CacheEntry{object: 380, context: %KvStore.Context{vector_clock: %{a: 19565}}}]

11:37:23.438 [info] Receive response of 5876 from a with [%KvStore.CacheEntry{object: 380, context: %KvStore.Context{vector_clock: %{a: 19565}}}]

11:37:23.438 [info] :a Found key: "3", with value [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}]

11:37:23.438 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5876, key: "5", object: [%KvStore.CacheEntry{object: 380, context: %KvStore.Context{vector_clock: %{a: 19565}}}], sender: :a, type: :get_log}

11:37:23.438 [info] Send request {:get, "1"}

11:37:23.439 [info] lb receive get from :client_a (5878)

11:37:23.439 [info] Getting updated responses for responses: %{a: %KvStore.GetResponse{objects: [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}], type: :get_response, req_id: 5877}}

11:37:23.439 [info] Latest entries: [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}]

11:37:23.439 [info] Starting LoadBalancer with state %KvStore.LoadBalancer{sorted_nodes: [:a], live_nodes: MapSet.new([:a]), replication_factor: 1, node_hashes: %{a: 91634880152443617534842621287039938041581081254914058002978601050179556493499}, req_id: 5879, observer: :observer}

11:37:23.440 [debug] Handling external get request: %KvStore.GetRequest{key: "1", sender: :client_a, original_recipient: :a, type: :get, req_id: 5878}

11:37:23.440 [info] Receive response of 5877 from a with [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}]

11:37:23.440 [info] Observer receive (get) %KvStore.GetRequestLog{req_id: 5877, key: "3", object: [%KvStore.CacheEntry{object: 478, context: %KvStore.Context{vector_clock: %{a: 19517}}}], sender: :a, type: :get_log}
client complete
client complete
%% LATENCY STAT
%% latencies: [%{type: :get, latency: 0}, %{type: :put, latency: 0}, %{type: :get, latency: 0}, %{type: :put, latency: 0}, %{type: :get, latency: 0}, %{type: :get, latency: 0}, %{type: :put, latency: 0}, %{type: :put, latency: 0}, %{type: :put, latency: 0}, %{type: :get, latency: 0}, %{type: :get, latency: 0}, %{type: :get, latency: 0}, %{type: :get, latency: 0}, %{type: :get, latency: 0}, %{type: :get, latency: 0}, %{type: :get, latency: 0}, %{type: :put, latency: 0}, %{type: :get, latency: 0}, %{type: :get, latency: 0}, %{type: :put, latency: 0}, %{type: :get, latency: 0}, %{type: :put, latency: 0}, %{type: :get, latency: 0}, %{type: :get, latency: 0}, %{type: :get, latency: 0}, %{type: :put, latency: 0}, %{type: :get, latency: 0}, %{type: :get, latency: 0}, %{type: :get, latency: 0}, %{type: :get, latency: 0}, %{type: :get, latency: 0}, %{type: :get, latency: 0}, %{type: :put, latency: 0}, %{type: :get, latency: 0}, %{type: :put, latency: 0}, %{type: :get, latency: 0}, %{type: :put, latency: 0}, %{type: :get, latency: 0}, %{type: :get, latency: 0}, %{type: :get, latency: 0}, %{type: :put, latency: 0}, %{type: :get, latency: 0}, %{type: :put, latency: 0}, %{type: :put, latency: 0}, %{type: :get, latency: 0}, %{type: :put, latency: 0}, %{type: :get, latency: 0}, %{type: :put, latency: 0}, %{type: :put, ...}, %{...}, ...]
%% latencies of get: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...], mean: 0.0
%% latencies of put: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...], mean: 0.0
%% STALENESS STAT
%% logs of get: [{3113, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "2", value: [%KvStore.CacheEntry{object: 350, context: %KvStore.Context{vector_clock: %{a: 10250}}}], timestamp: 1714405036370}}, {2156, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "4", value: [%KvStore.CacheEntry{object: 187, context: %KvStore.Context{vector_clock: %{a: 7175}}}], timestamp: 1714405033936}}, {2475, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "4", value: [%KvStore.CacheEntry{object: 517, context: %KvStore.Context{vector_clock: %{a: 8243}}}], timestamp: 1714405034743}}, {1799, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "4", value: [%KvStore.CacheEntry{object: 304, context: %KvStore.Context{vector_clock: %{a: 5919}}}], timestamp: 1714405033017}}, {822, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "1", value: [%KvStore.CacheEntry{object: 146, context: %KvStore.Context{vector_clock: %{a: 2676}}}], timestamp: 1714405030538}}, {2986, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "5", value: [%KvStore.CacheEntry{object: 150, context: %KvStore.Context{vector_clock: %{a: 9881}}}], timestamp: 1714405036036}}, {3805, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "2", value: [%KvStore.CacheEntry{object: 420, context: %KvStore.Context{vector_clock: %{a: 12564}}}], timestamp: 1714405038131}}, {449, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "5", value: [%KvStore.CacheEntry{object: 345, context: %KvStore.Context{vector_clock: %{a: 1477}}}], timestamp: 1714405029589}}, {2099, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "4", value: [%KvStore.CacheEntry{object: 705, context: %KvStore.Context{vector_clock: %{a: 6979}}}], timestamp: 1714405033794}}, {5398, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "5", value: [%KvStore.CacheEntry{object: 570, context: %KvStore.Context{vector_clock: %{a: 17977}}}], timestamp: 1714405042220}}, {5107, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "3", value: [%KvStore.CacheEntry{object: 592, context: %KvStore.Context{vector_clock: %{a: 16847}}}], timestamp: 1714405041469}}, {65, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "1", value: [%KvStore.CacheEntry{object: 94, context: %KvStore.Context{vector_clock: %{a: 198}}}], timestamp: 1714405028608}}, {4162, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "4", value: [%KvStore.CacheEntry{object: 507, context: %KvStore.Context{vector_clock: %{a: 13862}}}], timestamp: 1714405039047}}, {3496, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "5", value: [%KvStore.CacheEntry{object: 751, context: %KvStore.Context{vector_clock: %{a: 11639}}}], timestamp: 1714405037349}}, {4764, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "2", value: [%KvStore.CacheEntry{object: 979, context: %KvStore.Context{vector_clock: %{a: 15845}}}], timestamp: 1714405040586}}, {888, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "1", value: [%KvStore.CacheEntry{object: 749, context: %KvStore.Context{vector_clock: %{a: 2786}}}], timestamp: 1714405030705}}, {2460, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "3", value: [%KvStore.CacheEntry{object: 406, context: %KvStore.Context{vector_clock: %{a: 8197}}}], timestamp: 1714405034705}}, {3474, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "3", value: [%KvStore.CacheEntry{object: 685, context: %KvStore.Context{vector_clock: %{a: 11549}}}], timestamp: 1714405037294}}, {3573, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "2", value: [%KvStore.CacheEntry{object: 880, context: %KvStore.Context{vector_clock: %{a: 11870}}}], timestamp: 1714405037542}}, {4474, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "4", value: [%KvStore.CacheEntry{object: 316, context: %KvStore.Context{vector_clock: %{a: 14875}}}], timestamp: 1714405039851}}, {202, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "3", value: [%KvStore.CacheEntry{object: 658, context: %KvStore.Context{vector_clock: %{a: 502}}}], timestamp: 1714405028951}}, {432, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "2", value: [%KvStore.CacheEntry{object: 765, context: %KvStore.Context{vector_clock: %{a: 1401}}}], timestamp: 1714405029543}}, {3012, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "2", value: [%KvStore.CacheEntry{object: 520, context: %KvStore.Context{vector_clock: %{a: 9786}}}], timestamp: 1714405036103}}, {2394, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "2", value: [%KvStore.CacheEntry{object: 206, context: %KvStore.Context{vector_clock: %{a: 7887}}}], timestamp: 1714405034540}}, {5591, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "5", value: [%KvStore.CacheEntry{object: 809, context: %KvStore.Context{vector_clock: %{a: 18536}}}], timestamp: 1714405042709}}, {3531, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "4", value: [%KvStore.CacheEntry{object: 887, context: %KvStore.Context{vector_clock: %{a: 11746}}}], timestamp: 1714405037437}}, {2191, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "4", value: [%KvStore.CacheEntry{object: 984, context: %KvStore.Context{vector_clock: %{a: 7299}}}], timestamp: 1714405034024}}, {4721, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "3", value: [%KvStore.CacheEntry{object: 954, context: %KvStore.Context{vector_clock: %{a: 15742}}}], timestamp: 1714405040478}}, {4937, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "4", value: [%KvStore.CacheEntry{object: 508, context: %KvStore.Context{vector_clock: %{a: 16251}}}], timestamp: 1714405041031}}, {554, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "3", value: [%KvStore.CacheEntry{object: 528, context: %KvStore.Context{vector_clock: %{a: 1810}}}], timestamp: 1714405029857}}, {3599, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "1", value: [%KvStore.CacheEntry{object: 306, context: %KvStore.Context{vector_clock: %{a: 11960}}}], timestamp: 1714405037607}}, {796, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "5", value: [%KvStore.CacheEntry{object: 865, context: %KvStore.Context{vector_clock: %{a: 2636}}}], timestamp: 1714405030472}}, {3506, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "4", value: [%KvStore.CacheEntry{object: 486, context: %KvStore.Context{vector_clock: %{a: 11608}}}], timestamp: 1714405037375}}, {2941, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "5", value: [%KvStore.CacheEntry{object: 121, context: %KvStore.Context{vector_clock: %{a: 9735}}}], timestamp: 1714405035923}}, {5988, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "5", value: [%KvStore.CacheEntry{object: 202, context: %KvStore.Context{vector_clock: %{a: 19948}}}], timestamp: 1714405043734}}, {1593, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "2", value: [%KvStore.CacheEntry{object: 19, context: %KvStore.Context{vector_clock: %{a: 5299}}}], timestamp: 1714405032499}}, {4219, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "4", value: [%KvStore.CacheEntry{object: 451, context: %KvStore.Context{vector_clock: %{...}}}], timestamp: 1714405039193}}, {5954, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "1", value: [%KvStore.CacheEntry{object: 550, context: %KvStore.Context{...}}], timestamp: 1714405043648}}, {4025, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "4", value: [%KvStore.CacheEntry{object: 112, ...}], timestamp: 1714405038696}}, {4939, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "3", value: [%KvStore.CacheEntry{...}], timestamp: 1714405041036}}, {50, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "1", value: [...], ...}}, {2672, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, key: "1", ...}}, {4682, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, latency: 0, ...}}, {700, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, client: nil, ...}}, {1131, %KvStore.LogEntry{type: :get, is_stale: false, kvnode: :a, ...}}, {1775, %KvStore.LogEntry{type: :get, is_stale: false, ...}}, {2632, %KvStore.LogEntry{type: :get, ...}}, {36, %KvStore.LogEntry{...}}, {5034, ...}, {...}, ...] (total 4000 get requests)
%% stale rate: 0/4000 = 0.0
.
Finished in 15.4 seconds (0.00s async, 15.4s sync)
1 test, 0 failures

Randomized with seed 304288
